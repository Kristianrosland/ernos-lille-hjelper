{"version":3,"sources":["cube-timer/cube-timer.less","components/emailAndPasswordForm.less","login/login.less","register/register.less","algorithms/algorithms.less","app.less","algorithms/cases/DD1a.png","algorithms/cases/DD4a.png","algorithms/cases/DD5b.png","algorithms/cases/DR5a.png","algorithms/cases/UL1a.png","algorithms/cases/UL5a.png","algorithms/cases/UL5b.png","algorithms/cases/UR1b.png","algorithms/cases/UR5a.png","algorithms/cases/UR5b.png","algorithms/cases/UU4b.png","FirebaseProvider.tsx","algorithms/cases.ts","algorithms/Algorithms.tsx","firebase-utils.ts","cube-timer/Timer.tsx","LoginLink.tsx","cube-timer/format-time-utils.ts","cube-timer/Scramble.tsx","cube-timer/SessionStats.tsx","cube-timer/CubeTimer.tsx","components/EmailAndPasswordForm.tsx","login/Login.tsx","register/Register.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","auth","allSolvesCollection","solvesCollection","cases","src","UL1a","name","alg","UR1b","UU4b","UL5a","UL5b","DD1a","UR5a","UR5b","DR5a","DD5b","DD4a","Algorithms","useState","query","setQuery","currentCases","setCurrentCases","className","css","container","value","onChange","e","inp","target","toUpperCase","length","matches","filter","c","startsWith","queryInput","map","key","image","alt","getFirebaseError","error","code","console","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","interval","AuthContext","createContext","user","isLoading","signIn","a","signUp","signOut","DataContext","sessionSolves","stored","best","undefined","addNewSolve","removeStoredSolve","FirebaseProvider","children","authState","setAuthState","dataState","setDataState","updateBest","bestSolve","prev","storeNewBest","firestore","collection","doc","uid","set","FieldValue","delete","merge","solve","solveWithId","id","time","solveToRemove","timestamp","where","get","then","snapshot","docs","forEach","ref","orderBy","limit","data","res","newBest","email","password","signInWithEmailAndPassword","username","createUserWithEmailAndPassword","useEffect","onAuthStateChanged","updatedUser","onUserSignedIn","Provider","LoginLink","useContext","history","useHistory","loginButton","onClick","push","classNames","userIcon","leadingZero","input","slice","now","Date","getTime","formatTimer","minutes","Math","floor","seconds","milliseconds","Scramble","newScramble","currentScramble","setCurrentScramble","previousScramble","setPreviousScramble","scrambleContainer","scramble","findBestSolve","solves","min","findWorstSolve","max","sumOfSolves","reduce","solveTimeSum","getThreeOfFiveSum","SessionStats","bestSolveTime","worstSolveTime","averageSolveTime","bestAverageOfFiveSolveTime","firstSumOfFive","bestSumOfFive","i","findBestAverageSolveOfFive","lastThreeOfFiveAverageSolveTime","lastFiveSolves","findLastThreeOfFiveAverageSolve","bestThreeOfFiveAverageSolveTime","firstFiveSolves","bestThreeOfFive","fiveSolves","sum","findBestThreeOfFiveAverageSolve","statsContainerMobile","heading","statsContainerDesktop","hading","statElement","statLabel","statValue","Timer","timerRunning","onToggleTimerRunning","onNewScramble","addSolve","removeSolve","startTime","setStartTime","formattedSolveTime","setFormattedSolveTime","solveTime","setSolveTime","holding","setHolding","setInterval","clearInterval","stopTimer","buttonClassNames","startButton","startHold","stopHold","previousSolves","timerContainer","largeTimer","timer","leftHand","onMouseUp","onMouseDown","onTouchStart","onTouchEnd","previousSolvesContainer","previousSolve","index","removeSolveButton","type","removeSolveIcon","fadeOut","handleKeys","onKeyEvent","handleEventType","CubeTimer","params","useParams","setTimerRunning","setNewScramble","useCallback","seedrandom","global","scrambleGenerator","trim","replace","cubeTimerContainer","EmailAndPasswordForm","title","buttonTitle","onSubmit","colorTheme","includeUsername","bottomLink","setUsername","setEmail","setPassword","setError","submitting","setSubmitting","submit","preventDefault","err","form","textColor","bottomBorder","placeholder","disabled","Login","goToRegisterLink","Register","goToLoginLink","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.19de826a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cubeTimerContainer\":\"cubeTimerContainer_Ay0n8\",\"scrambleContainer\":\"scrambleContainer_1a119\",\"scramble\":\"scramble_34LiX\",\"previousScramble\":\"previousScramble_2GkcP\",\"timerContainer\":\"timerContainer_2V7Gk\",\"solves\":\"solves_36Clh\",\"timer\":\"timer_txBap\",\"holding\":\"holding_pWB_3\",\"time\":\"time_8_DXF\",\"largeTimer\":\"largeTimer_2BxXc\",\"removeSolveButton\":\"removeSolveButton_3O9hc\",\"removeSolveIcon\":\"removeSolveIcon_2sa-v\",\"previousSolvesContainer\":\"previousSolvesContainer_2Nlpf\",\"fadeOut\":\"fadeOut_2pNEi\",\"previousSolves\":\"previousSolves_1FCIY\",\"startButton\":\"startButton_vAJGC\",\"statsContainerMobile\":\"statsContainerMobile__pKov\",\"heading\":\"heading_2iuV3\",\"statsContainerDesktop\":\"statsContainerDesktop_RlG47\",\"statElement\":\"statElement_23lF2\",\"statLabel\":\"statLabel_EWClq\",\"statValue\":\"statValue_16cgT\",\"handButtonsAndSolveTimeContainer\":\"handButtonsAndSolveTimeContainer_yMfb8\",\"leftHand\":\"leftHand_7QfGS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_1YvAP\",\"heading\":\"heading_tu83N\",\"input\":\"input_3xoZQ\",\"loginButton\":\"loginButton_10BGo\",\"error\":\"error_3_78z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_2I3pj\",\"textColor\":\"textColor_1BWe8\",\"bottomBorder\":\"bottomBorder_2f-iS\",\"goToRegisterLink\":\"goToRegisterLink_1jSe-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_3E2_Q\",\"textColor\":\"textColor_2I3YX\",\"bottomBorder\":\"bottomBorder_1awHt\",\"goToLoginLink\":\"goToLoginLink_E3FTV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_23up_\",\"queryInput\":\"queryInput_g6eat\",\"image\":\"image_2atOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginButton\":\"loginButton_3iU6Y\",\"userIcon\":\"userIcon_2Dvg6\"};","module.exports = __webpack_public_path__ + \"static/media/DD1a.42a5250c.png\";","module.exports = __webpack_public_path__ + \"static/media/DD4a.7e40e810.png\";","module.exports = __webpack_public_path__ + \"static/media/DD5b.8523dd28.png\";","module.exports = __webpack_public_path__ + \"static/media/DR5a.c6815c41.png\";","module.exports = __webpack_public_path__ + \"static/media/UL1a.137fcb5f.png\";","module.exports = __webpack_public_path__ + \"static/media/UL5a.17a229fd.png\";","module.exports = __webpack_public_path__ + \"static/media/UL5b.88630ad9.png\";","module.exports = __webpack_public_path__ + \"static/media/UR1b.0de51f6b.png\";","module.exports = __webpack_public_path__ + \"static/media/UR5a.b4cb91ea.png\";","module.exports = __webpack_public_path__ + \"static/media/UR5b.3af93687.png\";","module.exports = __webpack_public_path__ + \"static/media/UU4b.a4f90bee.png\";","import firebase, { firestore } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport React, { createContext, ReactNode, useEffect, useState } from 'react';\nimport { config, getFirebaseError } from './firebase-utils';\nimport { Solve } from './types/solve-types';\n\nfirebase.initializeApp(config);\nlet auth: firebase.auth.Auth | undefined;\nlet allSolvesCollection: firestore.CollectionReference | undefined;\nlet solvesCollection: firestore.DocumentReference | undefined;\n\nexport const AuthContext = createContext<AuthState & AuthStateModifiers>({\n    user: null,\n    isLoading: false,\n    signIn: async () => null,\n    signUp: async () => null,\n    signOut: async () => null,\n});\nexport const DataContext = createContext<DataState & DataStateModifiers>({\n    sessionSolves: [],\n    stored: {\n        best: undefined,\n    },\n\n    addNewSolve: () => {},\n    removeStoredSolve: () => {},\n});\n\ninterface DataState {\n    sessionSolves: Solve[];\n    stored: StoredData;\n}\n\ninterface StoredData {\n    best: Solve | undefined;\n}\n\ninterface DataStateModifiers {\n    addNewSolve: (solve: Solve) => void;\n    removeStoredSolve: (solve: Solve) => void;\n}\n\ninterface AuthState {\n    user: (firebase.User & { username?: string }) | null;\n    isLoading: boolean;\n}\n\ninterface AuthStateModifiers {\n    signIn: (email: string, password: string) => Promise<string | null>;\n    signUp: (email: string, password: string, username?: string) => Promise<string | null>;\n    signOut: () => void;\n}\n\nconst FirebaseProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n    const [authState, setAuthState] = useState<AuthState>({ user: null, isLoading: true });\n    const [dataState, setDataState] = useState<DataState>({\n        sessionSolves: [],\n        stored: { best: undefined },\n    });\n\n    const updateBest = (bestSolve: Solve | undefined) =>\n        setDataState(prev => ({ ...prev, stored: { ...prev.stored, best: bestSolve } }));\n\n    const storeNewBest = (bestSolve?: Solve) => {\n        if (authState.user) {\n            firebase\n                .firestore()\n                .collection('solves')\n                .doc(authState.user.uid)\n                .set({ best: bestSolve ?? firebase.firestore.FieldValue.delete() }, { merge: true });\n        }\n    };\n\n    const addNewSolve = async (solve: Solve) => {\n        setDataState(prev => ({ ...prev, sessionSolves: [solve, ...prev.sessionSolves] }));\n\n        if (authState.user && allSolvesCollection) {\n            const doc = allSolvesCollection.doc();\n            await doc.set(solve);\n\n            const solveWithId = { ...solve, id: doc.id };\n\n            if (dataState.stored.best === undefined || dataState.stored.best.time > solve.time) {\n                updateBest(solveWithId);\n                storeNewBest(solveWithId);\n            }\n        }\n    };\n\n    const removeStoredSolve = async (solveToRemove: Solve) => {\n        setDataState({\n            ...dataState,\n            sessionSolves: dataState.sessionSolves.filter(solve => solve.timestamp !== solveToRemove.timestamp),\n        });\n\n        if (authState.user && allSolvesCollection) {\n            await allSolvesCollection\n                .where('timestamp', '==', solveToRemove.timestamp)\n                .get()\n                .then(snapshot => snapshot.docs.forEach(doc => doc.ref.delete()));\n\n            if (dataState.stored.best?.timestamp === solveToRemove.timestamp) {\n                allSolvesCollection\n                    .orderBy('time', 'asc')\n                    .limit(1)\n                    .get()\n                    .then(snapshot => snapshot.docs.map(doc => ({ ...doc.data(), id: doc.id })))\n                    .then(res => {\n                        if (res.length === 0) {\n                            storeNewBest(undefined);\n                            updateBest(undefined);\n                        } else {\n                            const newBest = res[0] as Solve;\n\n                            updateBest(newBest);\n                            storeNewBest(newBest);\n                        }\n                    });\n            }\n        }\n    };\n\n    const signIn = async (email: string, password: string) => {\n        try {\n            await auth?.signInWithEmailAndPassword(email, password);\n            return null;\n        } catch (err) {\n            return getFirebaseError(err);\n        }\n    };\n\n    const signOut = () => {\n        auth?.signOut();\n        setDataState(prev => ({ ...prev, stored: { best: undefined } }));\n    };\n\n    const onUserSignedIn = (user: firebase.User) => {\n        solvesCollection = firebase\n            .firestore()\n            .collection('solves')\n            .doc(user.uid);\n\n        allSolvesCollection = solvesCollection.collection('all_solves');\n\n        solvesCollection\n            .get()\n            .then(doc => doc.data())\n            .then(doc => {\n                if (doc && doc.best) {\n                    updateBest(doc.best as Solve);\n                }\n            });\n\n        firebase\n            .firestore()\n            .collection('userdata')\n            .doc(user.uid)\n            .get()\n            .then(doc => {\n                const data = doc.data();\n                if (data && 'username' in data) {\n                    const updatedUser = { ...user, username: data.username };\n                    setAuthState(prev => ({ ...prev, user: updatedUser }));\n                }\n            });\n    };\n\n    const signUp = async (email: string, password: string, username?: string) => {\n        try {\n            const existing =\n                (\n                    await firebase\n                        .firestore()\n                        .collection('userdata')\n                        .where('username', '==', username)\n                        .get()\n                ).docs.length > 0;\n\n            if (existing) {\n                return 'Dette brukernavnet er dessverre opptatt';\n            }\n\n            const res = await auth?.createUserWithEmailAndPassword(email, password);\n\n            if (!res) {\n                return 'Noe gikk galt med opprettelsen av din konto';\n            }\n\n            if (res.user?.uid) {\n                await firebase\n                    .firestore()\n                    .collection('userdata')\n                    .doc(res.user.uid)\n                    .set({\n                        username,\n                    });\n            }\n\n            return null;\n        } catch (err) {\n            return getFirebaseError(err);\n        }\n    };\n\n    useEffect(() => {\n        if (!auth) {\n            auth = firebase.auth();\n            auth.onAuthStateChanged(user => {\n                setAuthState({ user, isLoading: false });\n\n                if (user === null) {\n                    allSolvesCollection = undefined;\n                } else {\n                    onUserSignedIn(user);\n                }\n            });\n        }\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{ ...authState, signIn, signUp, signOut }}>\n            <DataContext.Provider value={{ ...dataState, addNewSolve, removeStoredSolve }}>\n                {children}\n            </DataContext.Provider>\n        </AuthContext.Provider>\n    );\n};\n\nexport default FirebaseProvider;\n","import DD1a from './cases/DD1a.png';\nimport DD4a from './cases/DD4a.png';\nimport DD5b from './cases/DD5b.png';\nimport DR5a from './cases/DR5a.png';\nimport UL1a from './cases/UL1a.png';\nimport UL5a from './cases/UL5a.png';\nimport UL5b from './cases/UL5b.png';\nimport UR1b from './cases/UR1b.png';\nimport UR5a from './cases/UR5a.png';\nimport UR5b from './cases/UR5b.png';\nimport UU4b from './cases/UU4b.png';\n\nexport interface F2LCase {\n    src: string;\n    name: string;\n    alg: string;\n}\n\nconst cases: F2LCase[] = [\n    {\n        src: UL1a,\n        name: 'UL1a',\n        alg: \"y' U (R' U R U') (R' U' R)\",\n    },\n    {\n        src: UR1b,\n        name: 'UR1b',\n        alg: \"y' U (R' U2 R) U' y (R U R')\",\n    },\n    {\n        src: UU4b,\n        name: 'UU4b',\n        alg: \"y' U' (R' U R U) (R' U R U') (R' U R)\",\n    },\n    {\n        src: UL5a,\n        name: 'UL5a',\n        alg: \"(U' R U' R') U2 (R U' R')\",\n    },\n    {\n        src: UL5b,\n        name: 'UL5b',\n        alg: \"(U' R U R') U y' (R' U' R)\",\n    },\n    {\n        src: DD1a,\n        name: 'DD1a',\n        alg: \"U (R U' R') U' (F' U F)\",\n    },\n    {\n        src: UR5a,\n        name: 'UR5a',\n        alg: \"U (R U R') U2 (R U R')\",\n    },\n    {\n        src: UR5b,\n        name: 'UR5b',\n        alg: \"U (F' U' F) U' (R U R')\",\n    },\n    {\n        src: DR5a,\n        name: 'DR5a',\n        alg: \"(R U' R' U) (R U2' R') U (R U' R')\",\n    },\n    {\n        src: DD5b,\n        name: 'DD5b',\n        alg: '',\n    },\n    {\n        src: DD4a,\n        name: 'DD4a',\n        alg: \"U' F' (R U R' U') R' F R\",\n    },\n];\n\nexport default cases;\n","import React, { ChangeEvent, useState } from 'react';\nimport css from './algorithms.less';\nimport cases, { F2LCase } from './cases';\n\nconst Algorithms = () => {\n    const [query, setQuery] = useState('');\n    const [currentCases, setCurrentCases] = useState<F2LCase[]>([]);\n\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const inp = e.target.value.toUpperCase();\n        setQuery(inp);\n\n        if (inp.length === 3) {\n            const matches = cases.filter(c => c.name.startsWith(inp));\n            setCurrentCases(matches);\n            setQuery('');\n        }\n    };\n\n    return (\n        <div className={css.container}>\n            <input value={query} onChange={onChange} className={css.queryInput} />\n            {currentCases.map(c => (\n                <img key={c.name} src={c.src} className={css.image} alt=\"Solution\" />\n            ))}\n        </div>\n    );\n};\n\nexport default Algorithms;\n","import { Solve } from './types/solve-types';\n\nexport const getFirebaseError = (error: { code: string }) => {\n    switch (error.code) {\n        case 'auth/wrong-password':\n            return 'Feil passord';\n        case 'auth/user-not-found':\n            return 'Brukeren finnes ikke';\n        case 'auth/invalid-email':\n            return 'Ugyldig epostadresse';\n        case 'auth/weak-password':\n            return 'For svakt passord!';\n        default:\n            console.error(error.code);\n            return 'Oops.. Noe gikk galt!';\n    }\n};\n\nexport const solveConverter = {\n    toFirestore: (solve: Solve) => ({\n        time: solve.time,\n        timestamp: solve.timestamp,\n        scramble: solve.scramble,\n    }),\n    fromFirestore: (snapshot: any, options: any): Solve => {\n        const data = snapshot.data(options);\n        return { time: data.time, timestamp: data.timestamp, scramble: data.scramble };\n    },\n};\n\nexport const config = {\n    apiKey: 'AIzaSyAW_PdA6o5ygKubwsxaQfJ22dgWE5fA41U',\n    authDomain: 'cubeguru-79b7d.firebaseapp.com',\n    databaseURL: 'https://cubeguru-79b7d.firebaseio.com',\n    projectId: 'cubeguru-79b7d',\n    storageBucket: 'cubeguru-79b7d.appspot.com',\n    messagingSenderId: '1042814909264',\n    appId: '1:1042814909264:web:e79fa88d14f9f4669c4a55',\n    measurementId: 'G-Z2GMHWJ2NG',\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport { Solve } from '../types/solve-types';\nimport css from './cube-timer.less';\nimport { formatTimer, now } from './format-time-utils';\n\nlet interval: NodeJS.Timeout | undefined;\ninterface TimerProps {\n    timerRunning: boolean;\n    onToggleTimerRunning: (running: boolean) => void;\n    onNewScramble: () => void;\n    solves: Solve[];\n    addSolve: (solveTime: number) => void;\n    removeSolve: (solve: Solve) => void;\n}\n\nconst Timer: React.FC<TimerProps> = ({\n    timerRunning,\n    onToggleTimerRunning,\n    onNewScramble,\n    addSolve,\n    removeSolve,\n    solves,\n}) => {\n    const [startTime, setStartTime] = useState<number | undefined>();\n    const [formattedSolveTime, setFormattedSolveTime] = useState<string>('0.00');\n    const [solveTime, setSolveTime] = useState<number>(0);\n    const [holding, setHolding] = useState(false);\n\n    useEffect(() => {\n        if (timerRunning) {\n            interval = setInterval(() => {\n                setSolveTime(now() - (startTime ?? 0));\n            }, 10);\n        } else {\n            if (interval) {\n                clearInterval(interval);\n            }\n        }\n\n        if (interval) {\n            return () => clearInterval(interval!);\n        }\n\n        return;\n    }, [timerRunning, startTime]);\n\n    const startTimer = () => {\n        if (timerRunning) {\n            return;\n        }\n\n        setStartTime(now());\n        onToggleTimerRunning(true);\n    };\n\n    const stopTimer = () => {\n        onToggleTimerRunning(false);\n\n        if (solveTime !== 0) {\n            setFormattedSolveTime(formatTimer(solveTime));\n            addSolve(solveTime);\n        }\n\n        onNewScramble();\n    };\n\n    const buttonClassNames = classNames(css.startButton, { [css.holding]: holding });\n\n    const startHold = () => {\n        setHolding(true);\n        if (!timerRunning) {\n            setSolveTime(0);\n        }\n    };\n\n    const stopHold = () => {\n        setHolding(false);\n        if (timerRunning) {\n            stopTimer();\n        } else {\n            startTimer();\n        }\n    };\n\n    const previousSolves = solves.slice(1);\n    return (\n        <div className={css.timerContainer}>\n            {timerRunning ? (\n                <div\n                    className={css.largeTimer}\n                    onClick={() => {\n                        if (now() - (startTime ?? 0) > 1000) {\n                            stopTimer();\n                        }\n                    }}\n                >\n                    <span className={classNames(css.timer, css.time)}>{formatTimer(solveTime)}</span>\n                </div>\n            ) : (\n                <>\n                    <div className={buttonClassNames}>\n                        <i className={classNames('fas fa-hand-paper', css.leftHand)} />\n                    </div>\n                    <div className={css.solves}>\n                        <span\n                            className={classNames(css.timer, css.time, { [css.holding]: holding })}\n                            onMouseUp={stopHold}\n                            onMouseDown={startHold}\n                            onTouchStart={startHold}\n                            onTouchEnd={stopHold}\n                        >\n                            {formattedSolveTime}\n                        </span>\n\n                        <div className={css.previousSolvesContainer}>\n                            <div className={classNames(css.previousSolves, css.time)}>\n                                {previousSolves.map((previousSolve, index) => (\n                                    <div key={index}>\n                                        <span>{formatTimer(previousSolve.time)}</span>\n                                        <button\n                                            className={css.removeSolveButton}\n                                            onClick={() => {\n                                                removeSolve(previousSolve);\n                                            }}\n                                            type=\"button\"\n                                        >\n                                            <i className={classNames('fas fa-times', css.removeSolveIcon)} />\n                                        </button>\n                                    </div>\n                                ))}\n                                <div className={css.fadeOut} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className={buttonClassNames}>\n                        <i className=\"fas fa-hand-paper\" />\n                    </div>\n                </>\n            )}\n            <KeyboardEventHandler handleKeys={['space']} onKeyEvent={startHold} />\n            <KeyboardEventHandler handleKeys={['space']} handleEventType={'keyup'} onKeyEvent={stopHold} />\n        </div>\n    );\n};\n\nexport default Timer;\n","import classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport css from './app.less';\nimport { AuthContext } from './FirebaseProvider';\n\nconst LoginLink = () => {\n    const { user, isLoading, signOut } = useContext(AuthContext);\n    const history = useHistory();\n\n    const onClick = () => {\n        if (isLoading) return;\n\n        if (!user) {\n            history.push('/login');\n        } else {\n            signOut();\n        }\n    };\n\n    return isLoading ? null : (\n        <div className={css.loginButton} onClick={onClick}>\n            <i className={classNames('fas fa-user', css.userIcon)} />\n            {user ? user.username : 'Logg inn'}\n        </div>\n    );\n};\n\nexport default LoginLink;\n","const leadingZero = (input: number) => ('0' + input).slice(-2);\n\nexport const now = (): number => new Date().getTime();\n\nexport const formatTimer = (time: number) => {\n    const minutes = Math.floor(time / 60000);\n    const seconds = Math.floor(time / 1000) % 60;\n    const milliseconds = Math.floor((time % 1000) / 10);\n\n    return `${minutes > 0 ? minutes + ':' : ''}${minutes > 0 ? leadingZero(seconds) : seconds}.${leadingZero(\n        milliseconds,\n    )}`;\n};\n","import React, { useEffect, useState } from 'react';\nimport css from './cube-timer.less';\n\ninterface Props {\n    newScramble: string;\n}\n\nconst Scramble: React.FC<Props> = ({ newScramble }) => {\n    const [currentScramble, setCurrentScramble] = useState<string>();\n    const [previousScramble, setPreviousScramble] = useState<string>();\n\n    useEffect(() => {\n        if (newScramble !== currentScramble) {\n            setPreviousScramble(currentScramble);\n            setCurrentScramble(newScramble);\n        }\n    }, [newScramble, currentScramble, setPreviousScramble]);\n\n    return (\n        <div className={css.scrambleContainer}>\n            <div className={css.scramble}>{currentScramble}</div>\n            {currentScramble && <div className={css.previousScramble}>{previousScramble}</div>}\n        </div>\n    );\n};\n\nexport default Scramble;\n","import React from 'react';\nimport { Solve } from '../types/solve-types';\nimport css from './cube-timer.less';\nimport { formatTimer } from './format-time-utils';\n\nconst findBestSolve = (solves: Solve[]): number => Math.min(...solves.map(solve => solve.time));\nconst findWorstSolve = (solves: Solve[]): number => Math.max(...solves.map(solve => solve.time));\nconst findAverageSolve = (solves: Solve[]): number => {\n    const totalSolveTime = solves.reduce((solveTimeSum, solve) => solveTimeSum + solve.time, 0);\n    return totalSolveTime / solves.length;\n};\n\nconst sumOfSolves = (solves: Solve[]): number =>\n    solves.reduce((solveTimeSum, solve) => solveTimeSum + solve.time, 0);\n\nconst findBestAverageSolveOfFive = (solves: Solve[]): number => {\n    let firstSumOfFive = sumOfSolves(solves.slice(0, 5));\n    let bestSumOfFive = firstSumOfFive;\n\n    for (let i = 0; i < solves.length - 5; i++) {\n        firstSumOfFive -= solves[i].time;\n        firstSumOfFive += solves[i + 5].time;\n\n        bestSumOfFive = Math.min(firstSumOfFive, bestSumOfFive);\n    }\n\n    return bestSumOfFive / 5;\n};\n\nconst getThreeOfFiveSum = (solves: Solve[]) =>\n    sumOfSolves(solves) - findBestSolve(solves) - findWorstSolve(solves);\n\nconst findLastThreeOfFiveAverageSolve = (solves: Solve[]) => {\n    const lastFiveSolves = solves.slice(0, 5);\n\n    return getThreeOfFiveSum(lastFiveSolves) / 3;\n};\n\nconst findBestThreeOfFiveAverageSolve = (solves: Solve[]): number => {\n    const firstFiveSolves = solves.slice(0, 5);\n    const firstThreeOfFive = getThreeOfFiveSum(firstFiveSolves);\n\n    let bestThreeOfFive = firstThreeOfFive;\n\n    for (let i = 0; i < solves.length - 5; i++) {\n        const fiveSolves = solves.slice(i, i + 5);\n        const sum = getThreeOfFiveSum(fiveSolves);\n\n        bestThreeOfFive = Math.min(sum, bestThreeOfFive);\n    }\n\n    return bestThreeOfFive / 3;\n};\n\ninterface Props {\n    sessionSolves: Solve[];\n    bestSolve: Solve | undefined;\n}\n\nconst SessionStats: React.FC<Props> = ({ sessionSolves, bestSolve }) => {\n    const bestSolveTime = bestSolve ? bestSolve.time : findBestSolve(sessionSolves);\n    const worstSolveTime = findWorstSolve(sessionSolves);\n    const averageSolveTime = findAverageSolve(sessionSolves);\n\n    const bestAverageOfFiveSolveTime =\n        sessionSolves.length >= 5 ? findBestAverageSolveOfFive(sessionSolves) : null;\n    const lastThreeOfFiveAverageSolveTime =\n        sessionSolves.length >= 5 ? findLastThreeOfFiveAverageSolve(sessionSolves) : null;\n    const bestThreeOfFiveAverageSolveTime =\n        sessionSolves.length >= 5 ? findBestThreeOfFiveAverageSolve(sessionSolves) : null;\n\n    return (\n        <>\n            <div className={css.statsContainerMobile}>\n                <div className={css.heading}>dine tider denne runden</div>\n                <div>beste: {sessionSolves.length > 0 ? formatTimer(bestSolveTime) : '-'}</div>\n                <div>dårligte: {sessionSolves.length > 1 ? formatTimer(worstSolveTime) : '-'}</div>\n                <div>gjennomsnitt: {sessionSolves.length > 1 ? formatTimer(averageSolveTime) : '-'}</div>\n                <div>\n                    3 av 5: {lastThreeOfFiveAverageSolveTime ? formatTimer(lastThreeOfFiveAverageSolveTime) : '-'}\n                </div>\n                <div>\n                    beste 3 av 5:{' '}\n                    {bestThreeOfFiveAverageSolveTime ? formatTimer(bestThreeOfFiveAverageSolveTime) : '-'}\n                </div>\n                <div>\n                    beste gjennomsnitt av 5:{' '}\n                    {bestAverageOfFiveSolveTime ? formatTimer(bestAverageOfFiveSolveTime) : '-'}\n                </div>\n            </div>\n\n            <div className={css.statsContainerDesktop}>\n                <div className={css.hading}>Dine tider</div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>beste:</div>\n                    <div className={css.statValue}>\n                        {sessionSolves.length > 0 || bestSolve ? formatTimer(bestSolveTime) : '-'}\n                    </div>\n                </div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>dårligste:</div>\n                    <div className={css.statValue}>\n                        {sessionSolves.length > 1 ? formatTimer(worstSolveTime) : '-'}\n                    </div>\n                </div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>3 av 5:</div>\n                    <div className={css.statValue}>\n                        {lastThreeOfFiveAverageSolveTime ? formatTimer(lastThreeOfFiveAverageSolveTime) : '-'}\n                    </div>\n                </div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>beste 3 av 5:</div>\n                    <div className={css.statValue}>\n                        {bestThreeOfFiveAverageSolveTime ? formatTimer(bestThreeOfFiveAverageSolveTime) : '-'}\n                    </div>\n                </div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>beste gjennomsnitt av 5:</div>\n                    <div className={css.statValue}>\n                        {bestAverageOfFiveSolveTime ? formatTimer(bestAverageOfFiveSolveTime) : '-'}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default SessionStats;\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport scrambleGenerator from 'rubiks-cube-scramble';\nimport seedrandom from 'seedrandom';\nimport { DataContext } from '../FirebaseProvider';\nimport LoginLink from '../LoginLink';\nimport css from './cube-timer.less';\nimport { now } from './format-time-utils';\nimport Scramble from './Scramble';\nimport SessionStats from './SessionStats';\nimport Timer from './Timer';\n\nconst CubeTimer = () => {\n    const params = useParams<{ scramble: string }>();\n    const [timerRunning, setTimerRunning] = useState(false);\n    const { sessionSolves, stored, addNewSolve, removeStoredSolve } = useContext(DataContext);\n\n    const history = useHistory();\n\n    const setNewScramble = useCallback(async () => {\n        seedrandom(params.scramble ?? 'test', { global: true });\n        history.push('/' + (scrambleGenerator() as string).trim().replace(/ /g, '-'));\n    }, [history, params.scramble]);\n\n    useEffect(() => {\n        if (params.scramble === undefined) {\n            setNewScramble();\n        }\n    }, [params.scramble, setNewScramble]);\n\n    return (\n        <div className={css.cubeTimerContainer}>\n            <LoginLink />\n            {!timerRunning && <Scramble newScramble={params.scramble ? params.scramble.replace(/-/g, ' ') : ''} />}\n\n            <Timer\n                timerRunning={timerRunning}\n                onToggleTimerRunning={setTimerRunning}\n                onNewScramble={() => setNewScramble()}\n                solves={sessionSolves}\n                addSolve={solveTime =>\n                    addNewSolve({ time: solveTime, timestamp: now(), scramble: params.scramble })\n                }\n                removeSolve={removeStoredSolve}\n            />\n\n            {!timerRunning && <SessionStats sessionSolves={sessionSolves} bestSolve={stored.best} />}\n        </div>\n    );\n};\n\nexport default CubeTimer;\n","import classNames from 'classnames';\nimport React, { FormEvent, useState } from 'react';\nimport css from './emailAndPasswordForm.less';\n\ninterface Props {\n    title: string;\n    buttonTitle: string;\n    colorTheme: {\n        textColor: string;\n        bottomBorder: string;\n    };\n    onSubmit: (email: string, password: string, username?: string) => Promise<null | string>;\n    bottomLink?: React.ReactNode;\n    includeUsername?: boolean;\n}\n\nconst EmailAndPasswordForm: React.FC<Props> = ({\n    title,\n    buttonTitle,\n    onSubmit,\n    colorTheme,\n    includeUsername,\n    bottomLink,\n}) => {\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState<string | null>(null);\n    const [submitting, setSubmitting] = useState(false);\n\n    const submit = async (e: FormEvent) => {\n        e.preventDefault();\n        setSubmitting(true);\n        const err = await onSubmit(email, password, username);\n\n        if (err !== null) {\n            setError(err);\n        }\n        setSubmitting(false);\n    };\n\n    return (\n        <form className={css.form} onSubmit={submit}>\n            <h1 className={classNames(css.heading, colorTheme.textColor)}>{title}</h1>\n\n            {includeUsername ? (\n                <input\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                    className={classNames(css.input, colorTheme.textColor, colorTheme.bottomBorder)}\n                    type=\"text\"\n                    placeholder=\"Velg brukernavn..\"\n                />\n            ) : null}\n\n            <input\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                className={classNames(css.input, colorTheme.textColor, colorTheme.bottomBorder)}\n                type=\"email\"\n                placeholder=\"Epost..\"\n            />\n            <input\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                className={classNames(css.input, colorTheme.textColor, colorTheme.bottomBorder)}\n                type=\"password\"\n                placeholder=\"Passord..\"\n            />\n\n            {error && <span className={css.error}>{error}</span>}\n\n            <button\n                type=\"submit\"\n                className={classNames(css.loginButton, colorTheme.textColor)}\n                disabled={email === '' || password === '' || submitting}\n            >\n                {buttonTitle}\n            </button>\n\n            {bottomLink}\n        </form>\n    );\n};\n\nexport default EmailAndPasswordForm;\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport EmailAndPasswordForm from '../components/EmailAndPasswordForm';\nimport { AuthContext } from '../FirebaseProvider';\nimport css from './login.less';\n\nconst Login = () => {\n    const history = useHistory();\n    const { user, signIn } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (user) {\n            history.push('/');\n        }\n    }, [history, user]);\n\n    const goToRegisterLink = (\n        <div className={css.goToRegisterLink} onClick={() => history.push('/register')}>\n            Har du ikke konto enda? Registrer deg her\n        </div>\n    );\n\n    return (\n        <div className={css.container}>\n            <EmailAndPasswordForm\n                title=\"Logg inn\"\n                buttonTitle=\"Logg inn\"\n                onSubmit={signIn}\n                colorTheme={{ textColor: css.textColor, bottomBorder: css.bottomBorder }}\n                bottomLink={goToRegisterLink}\n            />\n        </div>\n    );\n};\n\nexport default Login;\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport EmailAndPasswordForm from '../components/EmailAndPasswordForm';\nimport { AuthContext } from '../FirebaseProvider';\nimport css from './register.less';\n\nconst Register = () => {\n    const history = useHistory();\n    const { user, signUp } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (user) {\n            history.push('/');\n        }\n    }, [history, user]);\n\n    const goToLoginLink = (\n        <div className={css.goToLoginLink} onClick={() => history.push('/login')}>\n            Har du allerede konto? Gå til innlogging\n        </div>\n    );\n\n    return (\n        <div className={css.container}>\n            <EmailAndPasswordForm\n                title=\"Registrer deg\"\n                buttonTitle=\"Ferdig\"\n                onSubmit={signUp}\n                colorTheme={{ textColor: css.textColor, bottomBorder: css.bottomBorder }}\n                includeUsername={true}\n                bottomLink={goToLoginLink}\n            />\n        </div>\n    );\n};\n\nexport default Register;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Algorithms from './algorithms/Algorithms';\nimport CubeTimer from './cube-timer/CubeTimer';\nimport FirebaseProvider from './FirebaseProvider';\nimport Login from './login/Login';\nimport Register from './register/Register';\n\nconst App = () => {\n    return (\n        <FirebaseProvider>\n            <HashRouter>\n                <Route exact={true} path=\"/\" component={CubeTimer} />\n                <Route exact={true} path=\"/:scramble\" component={CubeTimer} />\n                <Route path=\"/algorithms\" component={Algorithms} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/register\" component={Register} />\n            </HashRouter>\n        </FirebaseProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config: any) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}