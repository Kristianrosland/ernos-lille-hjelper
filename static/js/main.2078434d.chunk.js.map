{"version":3,"sources":["cube-timer/cube-timer.less","components/emailAndPasswordForm.less","algorithms/algorithms.less","login/login.less","register/register.less","algorithms/cases/DD1a.png","algorithms/cases/DD4a.png","algorithms/cases/DD5b.png","algorithms/cases/DR5a.png","algorithms/cases/UL1a.png","algorithms/cases/UL5a.png","algorithms/cases/UL5b.png","algorithms/cases/UR1b.png","algorithms/cases/UR5a.png","algorithms/cases/UR5b.png","algorithms/cases/UU4b.png","cube-timer/Timer.tsx","App.tsx","algorithms/cases.ts","algorithms/Algorithms.tsx","cube-timer/format-time-utils.ts","cube-timer/Scramble.tsx","cube-timer/SessionStats.tsx","cube-timer/CubeTimer.tsx","firebase-utils.ts","components/EmailAndPasswordForm.tsx","login/Login.tsx","register/Register.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","interval","auth","solveDbCollection","cases","src","UL1a","name","alg","UR1b","UU4b","UL5a","UL5b","DD1a","UR5a","UR5b","DR5a","DD5b","DD4a","Algorithms","useState","query","setQuery","currentCases","setCurrentCases","className","css","container","value","onChange","e","inp","target","toUpperCase","length","matches","filter","c","startsWith","queryInput","map","key","image","alt","leadingZero","input","slice","now","Date","getTime","formatTimer","time","minutes","Math","floor","seconds","milliseconds","Scramble","newScramble","currentScramble","setCurrentScramble","previousScramble","setPreviousScramble","useEffect","scrambleContainer","scramble","SessionStats","solves","sessionSolves","bestSolve","min","solve","worstSolve","max","findWorstSolve","averageSolve","reduce","solveTimeSum","findAverageSolve","bestAverageOfFive","firstSumOfFive","bestSumOfFive","i","findBestAverageSolveOfFive","sessionStatsContainer","heading","Timer","timerRunning","onToggleTimerRunning","onNewScramble","addSolve","startTime","setStartTime","formattedSolveTime","setFormattedSolveTime","solveTime","setSolveTime","holding","setHolding","setInterval","clearInterval","stopTimer","buttonClassNames","classNames","startButton","previousSolves","startHold","stopHold","timerContainer","largeTimer","onClick","timer","leftHand","onMouseUp","onMouseDown","onTouchStart","onTouchEnd","previousSolve","index","handleKeys","onKeyEvent","handleEventType","newScramle","scrambleGenerator","CubeTimer","setTimerRunning","setScramble","useContext","DataContext","addNewSolve","cubeTimerContainer","timestamp","getFirebaseError","error","code","console","log","solveConverter","toFirestore","fromFirestore","snapshot","options","data","EmailAndPasswordForm","title","buttonTitle","onSubmit","colorTheme","username","setUsername","password","setPassword","setError","submitting","setSubmitting","submit","a","err","form","textColor","bottomBorder","type","placeholder","loginButton","disabled","Login","history","useHistory","AuthContext","user","signIn","push","Register","signUp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","React","createContext","isLoading","storedSolves","removeStoredSolve","App","authState","setAuthState","dataState","setDataState","prev","doc","set","id","email","signInWithEmailAndPassword","createUserWithEmailAndPassword","onAuthStateChanged","undefined","firestore","collection","uid","withConverter","get","then","docs","catch","message","toLowerCase","includes","Provider","delete","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,mBAAqB,2BAA2B,kBAAoB,0BAA0B,SAAW,iBAAiB,iBAAmB,yBAAyB,eAAiB,uBAAuB,OAAS,eAAe,MAAQ,cAAc,QAAU,gBAAgB,KAAO,aAAa,WAAa,mBAAmB,eAAiB,uBAAuB,YAAc,oBAAoB,sBAAwB,8BAA8B,QAAU,gBAAgB,iCAAmC,yCAAyC,SAAW,mB,2BCA7kBD,EAAOC,QAAU,CAAC,KAAO,aAAa,QAAU,gBAAgB,MAAQ,cAAc,YAAc,oBAAoB,MAAQ,gB,yBCAhID,EAAOC,QAAU,CAAC,UAAY,kBAAkB,WAAa,mBAAmB,MAAQ,gB,gBCAxFD,EAAOC,QAAU,CAAC,UAAY,kBAAkB,UAAY,kBAAkB,aAAe,uB,gBCA7FD,EAAOC,QAAU,CAAC,UAAY,kBAAkB,UAAY,kBAAkB,aAAe,uB,0BCD7FD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,4GCOvCC,ECMAC,EACAC,E,2UC8DWC,EA1DU,CACrB,CACIC,IAAKC,IACLC,KAAM,OACNC,IAAK,8BAET,CACIH,IAAKI,IACLF,KAAM,OACNC,IAAK,gCAET,CACIH,IAAKK,IACLH,KAAM,OACNC,IAAK,yCAET,CACIH,IAAKM,IACLJ,KAAM,OACNC,IAAK,6BAET,CACIH,IAAKO,IACLL,KAAM,OACNC,IAAK,8BAET,CACIH,IAAKQ,IACLN,KAAM,OACNC,IAAK,2BAET,CACIH,IAAKS,IACLP,KAAM,OACNC,IAAK,0BAET,CACIH,IAAKU,IACLR,KAAM,OACNC,IAAK,2BAET,CACIH,IAAKW,IACLT,KAAM,OACNC,IAAK,sCAET,CACIH,IAAKY,IACLV,KAAM,OACNC,IAAK,IAET,CACIH,IAAKa,IACLX,KAAM,OACNC,IAAK,6BC3CEW,EAzBI,WAAO,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAEmBF,mBAAoB,IAFvC,mBAEdG,EAFc,KAEAC,EAFA,KAerB,OACI,yBAAKC,UAAWC,IAAIC,WAChB,2BAAOC,MAAOP,EAAOQ,SAbZ,SAACC,GACd,IAAMC,EAAMD,EAAEE,OAAOJ,MAAMK,cAG3B,GAFAX,EAASS,GAEU,IAAfA,EAAIG,OAAc,CAClB,IAAMC,EAAU/B,EAAMgC,QAAO,SAAAC,GAAC,OAAIA,EAAE9B,KAAK+B,WAAWP,MACpDP,EAAgBW,GAChBb,EAAS,MAMgCG,UAAWC,IAAIa,aACvDhB,EAAaiB,KAAI,SAAAH,GAAC,OACf,yBAAKI,IAAKJ,EAAE9B,KAAMF,IAAKgC,EAAEhC,IAAKoB,UAAWC,IAAIgB,MAAOC,IAAI,kB,iCCvBlEC,EAAc,SAACC,GAAD,OAAoB,IAAMA,GAAOC,OAAO,IAE/CC,EAAM,kBAAc,IAAIC,MAAOC,WAE/BC,EAAc,SAACC,GACxB,IAAMC,EAAUC,KAAKC,MAAMH,EAAO,KAC5BI,EAAUF,KAAKC,MAAMH,EAAO,KAAQ,GACpCK,EAAeH,KAAKC,MAAOH,EAAO,IAAQ,IAEhD,MAAM,GAAN,OAAUC,EAAU,EAAIA,EAAU,IAAM,IAAxC,OAA6CA,EAAU,EAAIR,EAAYW,GAAWA,EAAlF,YAA6FX,EACzFY,KCgBOC,EAnBmB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EACLtC,qBADK,mBAC5CuC,EAD4C,KAC3BC,EAD2B,OAEHxC,qBAFG,mBAE5CyC,EAF4C,KAE1BC,EAF0B,KAWnD,OAPAC,qBAAU,WACFL,IAAgBC,IAChBG,EAAoBH,GACpBC,EAAmBF,MAExB,CAACA,EAAaC,EAAiBG,IAG9B,yBAAKrC,UAAWC,IAAIsC,mBAChB,yBAAKvC,UAAWC,IAAIuC,UAAWN,GAC9BA,GAAmB,yBAAKlC,UAAWC,IAAImC,kBAAmBA,KC2BxDK,GAlBuB,SAAC,GAAuB,IAzBvCC,EAyBkBC,EAAoB,EAApBA,cAC/BC,GA1BaF,EA0BaC,EA1Bef,KAAKiB,IAAL,MAAAjB,KAAI,YAAQc,EAAO3B,KAAI,SAAA+B,GAAK,OAAIA,EAAMpB,WA2B/EqB,EA1Ba,SAACL,GAAD,OAA6Bd,KAAKoB,IAAL,MAAApB,KAAI,YAAQc,EAAO3B,KAAI,SAAA+B,GAAK,OAAIA,EAAMpB,UA0BnEuB,CAAeN,GAC5BO,EA1Be,SAACR,GAEtB,OADuBA,EAAOS,QAAO,SAACC,EAAcN,GAAf,OAAyBM,EAAeN,EAAMpB,OAAM,GACjEgB,EAAOjC,OAwBV4C,CAAiBV,GAEhCW,EAAoBX,EAAclC,QAAU,EAvBnB,SAACiC,GAIhC,IAHA,IAAIa,EAAiBb,EAAOrB,MAAM,EAAG,GAAG8B,QAAO,SAACC,EAAcN,GAAf,OAAyBM,EAAeN,EAAMpB,OAAM,GAC/F8B,EAAgBD,EAEXE,EAAI,EAAGA,EAAIf,EAAOjC,OAAS,EAAGgD,IACnCF,GAAkBb,EAAOe,GAAG/B,KAC5B6B,GAAkBb,EAAOe,EAAI,GAAG/B,KAEhC8B,EAAgB5B,KAAKiB,IAAIU,EAAgBC,GAG7C,OAAOA,EAAgB,EAY+BE,CAA2Bf,GAAiB,KAElG,OACI,yBAAK3C,UAAWC,IAAI0D,uBAChB,yBAAK3D,UAAWC,IAAI2D,SAApB,2BACA,uCAAajB,EAAclC,OAAS,EAAIgB,EAAYmB,GAAa,KACjE,6CAAgBD,EAAclC,OAAS,EAAIgB,EAAYsB,GAAc,KACrE,8CAAoBJ,EAAclC,OAAS,EAAIgB,EAAYyB,GAAgB,KAC3E,yDAA+BI,EAAoB7B,EAAY6B,GAAqB,O,gDNiFjFO,GA5GqB,SAAC,GAA6E,IAA3EC,EAA0E,EAA1EA,aAAcC,EAA4D,EAA5DA,qBAAsBC,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,SAAUvB,EAAa,EAAbA,OAAa,EAC3E/C,qBAD2E,mBACtGuE,EADsG,KAC3FC,EAD2F,OAEzDxE,mBAAiB,QAFwC,mBAEtGyE,EAFsG,KAElFC,EAFkF,OAG3E1E,mBAAiB,GAH0D,mBAGtG2E,EAHsG,KAG3FC,EAH2F,OAI/E5E,oBAAS,GAJsE,mBAItG6E,EAJsG,KAI7FC,EAJ6F,KAM7GnC,qBAAU,WAWN,GAVIwB,EACAtF,EAAWkG,aAAY,WACnBH,EAAajD,KAAG,OAAM4C,QAAN,IAAMA,IAAa,MACpC,IAEC1F,GACAmG,cAAcnG,GAIlBA,EACA,OAAO,kBAAMmG,cAAcnG,MAIhC,CAACsF,EAAcI,IAElB,IASMU,EAAY,WACdb,GAAqB,GAEH,IAAdO,IACAD,EAAsB5C,EAAY6C,IAClCL,EAASK,IAGbN,KAGEa,EAAmBC,KAAW7E,IAAI8E,YAAL,gBAAqB9E,IAAIuE,QAAUA,IAChEQ,EAAiBtC,EAAOrB,MAAM,GAE9B4D,EAAY,WACdR,GAAW,GACNX,GACDS,EAAa,IAIfW,EAAW,WACbT,GAAW,GACPX,EACAc,IAhCAd,IAIJK,EAAa7C,KACbyC,GAAqB,KAiCzB,OACI,yBAAK/D,UAAWC,IAAIkF,gBACfrB,EACG,yBACI9D,UAAWC,IAAImF,WACfC,QAAS,WACD/D,KAAG,OAAM4C,QAAN,IAAMA,IAAa,GAAK,KAC3BU,MAIR,0BAAM5E,UAAW8E,KAAW7E,IAAIqF,MAAOrF,IAAIyB,OAAQD,EAAY6C,KAGnE,oCACI,yBAAKtE,UAAW6E,GACZ,uBAAG7E,UAAW8E,KAAW,oBAAqB7E,IAAIsF,aAEtD,yBAAKvF,UAAWC,IAAIyC,QAChB,0BACI1C,UAAW8E,KAAW7E,IAAIqF,MAAOrF,IAAIyB,KAAhB,gBAAyBzB,IAAIuE,QAAUA,IAC5DgB,UAAWN,EACXO,YAAaR,EACbS,aAAcT,EACdU,WAAYT,GAEXd,GAEL,yBAAKpE,UAAW8E,KAAW7E,IAAI+E,eAAgB/E,IAAIyB,OAC9CsD,EAAejE,KAAI,SAAC6E,EAAeC,GAAhB,OAChB,0BAAM7E,IAAK6E,GAAQpE,EAAYmE,EAAclE,YAIzD,yBAAK1B,UAAW6E,GACZ,uBAAG7E,UAAU,wBAIzB,kBAAC,KAAD,CAAsB8F,WAAY,CAAC,SAAUC,WAAYd,IACzD,kBAAC,KAAD,CAAsBa,WAAY,CAAC,SAAUE,gBAAiB,QAASD,WAAYb,MO9GzFe,GAAa,kBAAcC,OAuBlBC,GArBG,WAAO,IAAD,EACoBxG,oBAAS,GAD7B,mBACbmE,EADa,KACCsC,EADD,OAEYzG,mBAAiBsG,MAF7B,mBAEbzD,EAFa,KAEH6D,EAFG,OAGmBC,qBAAWC,IAA1C5D,EAHY,EAGZA,cAAe6D,EAHH,EAGGA,YAEvB,OACI,yBAAKxG,UAAWC,IAAIwG,qBACd3C,GAAgB,kBAAC,EAAD,CAAU7B,YAAaO,IAEzC,kBAAC,GAAD,CACIsB,aAAcA,EACdC,qBAAsBqC,EACtBpC,cAAe,kBAAMqC,EAAYJ,KACjCvD,OAAQC,EACRsB,SAAU,SAAAK,GAAS,OAAIkC,EAAY,CAAE9E,KAAM4C,EAAWoC,UAAWpF,IAAOkB,iBAE1EsB,GAAgB,kBAAC,GAAD,CAAcnB,cAAeA,MCzB9CgE,GAAmB,SAACC,GAC7B,OAAQA,EAAMC,MACV,IAAK,sBACD,MAAO,eACX,IAAK,sBACD,MAAO,uBACX,IAAK,qBACD,MAAO,uBACX,IAAK,qBACD,MAAO,qBACX,QAEI,OADAC,QAAQC,IAAIH,EAAMC,MACX,0BAING,GAAiB,CAC1BC,YAAa,SAACnE,GAAD,MAAmB,CAC5BpB,KAAMoB,EAAMpB,KACZgF,UAAW5D,EAAM4D,UACjBlE,SAAUM,EAAMN,WAEpB0E,cAAe,SAACC,EAAeC,GAC3B,IAAMC,EAAOF,EAASE,KAAKD,GAC3B,MAAO,CAAE1F,KAAM2F,EAAK3F,KAAMgF,UAAWW,EAAKX,UAAWlE,SAAU6E,EAAK7E,Y,oBCoC7D8E,GAhD+B,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAAiB,EAC5D/H,mBAAS,IADmD,mBACrFgI,EADqF,KAC3EC,EAD2E,OAE5DjI,mBAAS,IAFmD,mBAErFkI,EAFqF,KAE3EC,EAF2E,OAGlEnI,mBAAwB,MAH0C,mBAGrFiH,EAHqF,KAG9EmB,EAH8E,OAIxDpI,oBAAS,GAJ+C,mBAIrFqI,EAJqF,KAIzEC,EAJyE,KAMtFC,EAAM,uCAAG,4BAAAC,EAAA,6DACXF,GAAc,GADH,SAGOR,EAASE,EAAUE,GAH1B,OAKC,QAFNO,EAHK,SAMPL,EAASK,GAEbH,GAAc,GARH,2CAAH,qDAWZ,OACI,0BAAMjI,UAAWC,KAAIoI,KAAMZ,SAAUS,GACjC,wBAAIlI,UAAW8E,KAAW7E,KAAI2D,QAAS8D,EAAWY,YAAaf,GAC/D,2BACIpH,MAAOwH,EACPvH,SAAU,SAAAC,GAAC,OAAIuH,EAAYvH,EAAEE,OAAOJ,QACpCH,UAAW8E,KAAW7E,KAAImB,MAAOsG,EAAWY,UAAWZ,EAAWa,cAClEC,KAAK,QACLC,YAAY,YAEhB,2BACItI,MAAO0H,EACPzH,SAAU,SAAAC,GAAC,OAAIyH,EAAYzH,EAAEE,OAAOJ,QACpCH,UAAW8E,KAAW7E,KAAImB,MAAOsG,EAAWY,UAAWZ,EAAWa,cAClEC,KAAK,WACLC,YAAY,cAGf7B,GAAS,0BAAM5G,UAAWC,KAAI2G,OAAQA,GAEvC,4BACI4B,KAAK,SACLxI,UAAW8E,KAAW7E,KAAIyI,YAAahB,EAAWY,WAClDK,SAAuB,KAAbhB,GAAgC,KAAbE,GAAmBG,GAE/CR,K,oBCjCFoB,GAjBD,WACV,IAAMC,EAAUC,cADA,EAESxC,qBAAWyC,IAA5BC,EAFQ,EAERA,KAAMC,EAFE,EAEFA,OAQd,OANA3G,qBAAU,WACF0G,GACAH,EAAQK,KAAK,OAElB,CAACL,EAASG,IAGT,yBAAKhJ,UAAWC,KAAIC,WAChB,kBAAC,GAAD,CAAsBqH,MAAM,WAAWC,YAAY,WAAWC,SAAUwB,EAAQvB,WAAY,CAAEY,UAAWrI,KAAIqI,UAAWC,aAActI,KAAIsI,kB,oBCKvIY,GAjBE,WACb,IAAMN,EAAUC,cADG,EAEMxC,qBAAWyC,IAA5BC,EAFW,EAEXA,KAAMI,EAFK,EAELA,OAQd,OANA9G,qBAAU,WACF0G,GACAH,EAAQK,KAAK,OAElB,CAACL,EAASG,IAGT,yBAAKhJ,UAAWC,KAAIC,WAChB,kBAAC,GAAD,CAAsBqH,MAAM,gBAAgBC,YAAY,SAASC,SAAU2B,EAAQ1B,WAAY,CAAEY,UAAWrI,KAAIqI,UAAWC,aAActI,KAAIsI,kBVNzJc,IAASC,cOkBa,CAClBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iBPtBZ,IAAMf,GAAcgB,IAAMC,cAA8C,CAC3EhB,KAAM,KACNiB,WAAW,EACXhB,OAAO,WAAD,4BAAE,sBAAAd,EAAA,+EAAY,MAAZ,2CAAF,kDAAC,GACPiB,OAAO,WAAD,4BAAE,sBAAAjB,EAAA,+EAAY,MAAZ,2CAAF,kDAAC,KAEE5B,GAAcwD,IAAMC,cAA8C,CAC3ErH,cAAe,GACfuH,aAAc,GACd1D,YAAa,aACb2D,kBAAmB,eAqHRC,GA9FH,WAAO,IAAD,EACoBzK,mBAAoB,CAAEqJ,KAAM,KAAMiB,WAAW,IADjE,mBACPI,EADO,KACIC,EADJ,OAEoB3K,mBAAoB,CAClDgD,cAAe,GACfuH,aAAc,KAJJ,mBAEPK,EAFO,KAEIC,EAFJ,KAORhE,EAAW,uCAAG,WAAO1D,GAAP,eAAAqF,EAAA,yDAChBqC,GAAa,SAAAC,GAAI,sBAAUA,EAAV,CAAgB9H,cAAc,CAAEG,GAAH,mBAAa2H,EAAK9H,sBAE5D0H,EAAUrB,KAHE,uBAIN0B,EAAMhM,EAAmBgM,MAJnB,SAKNA,EAAIC,IAAI7H,GALF,OAMZ0H,GAAa,SAAAC,GAAI,sBAAUA,EAAV,CAAgBP,aAAa,CAAD,eAAQpH,EAAR,CAAe8H,GAAIF,EAAIE,MAAvB,mBAAgCH,EAAKP,oBANtE,2CAAH,sDAgBXjB,EAAM,uCAAG,WAAO4B,EAAehD,GAAtB,eAAAM,EAAA,yFAED1J,SAFC,aAED,EAAMqM,2BAA2BD,EAAOhD,GAFvC,gCAGA,MAHA,yDAKAlB,GAAiB,EAAD,KALhB,wDAAH,wDASNyC,EAAM,uCAAG,WAAOyB,EAAehD,GAAtB,eAAAM,EAAA,yFAED1J,SAFC,aAED,EAAMsM,+BAA+BF,EAAOhD,GAF3C,gCAGA,MAHA,yDAKAlB,GAAiB,EAAD,KALhB,wDAAH,wDAgDZ,OAvCArE,qBAAU,WACD7D,IACDA,EAAO4K,IAAS5K,QACXuM,oBAAmB,SAAAhC,GACpBsB,EAAa,CAAEtB,OAAMiB,WAAW,IAEnB,OAATjB,EACAtK,OAAoBuM,GAEpBvM,EAAoB2K,IACf6B,YACAC,WAAW,UACXT,IAAI1B,EAAKoC,KACTC,cAAcrE,IACdmE,WAAW,eAGXG,MACAC,MAAK,SAAApE,GACFqD,GAAa,SAAAC,GAAI,sBACVA,EADU,CAEbP,aAAc/C,EAASqE,KAAKzK,KAAI,SAAA2J,GAAG,sBAC3BA,EAAIrD,OADuB,CAE/BuD,GAAIF,EAAIE,gBAInBa,OAAM,SAAArD,GACH,IAAIA,EAAIsD,QAAQC,cAAcC,SAAS,kBAGnC,MAAMxD,EAFNtB,QAAQF,MAAM,oCAQvC,IAGC,kBAACmC,GAAY8C,SAAb,CAAsB1L,MAAK,eAAOkK,EAAP,CAAkBpB,SAAQG,YACjD,kBAAC7C,GAAYsF,SAAb,CAAsB1L,MAAK,eAAOoK,EAAP,CAAkB/D,cAAa2D,kBAjExC,SAACS,GACF,IAAD,EAAhBP,EAAUrB,OACO,QAAjB,EAAAtK,SAAA,SAAmBgM,IAAIE,GAAIkB,cAgEvB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAO,EAAMC,KAAK,IAAIC,UAAW9F,KACxC,kBAAC,IAAD,CAAO6F,KAAK,cAAcC,UAAWvM,IACrC,kBAAC,IAAD,CAAOsM,KAAK,SAASC,UAAWrD,KAChC,kBAAC,IAAD,CAAOoD,KAAK,YAAYC,UAAW9C,S,MW5HnC+C,QACa,cAA7BC,OAAOC,SAASC,UAEiB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DCXvCC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,GAAD,OAEJC,SAASC,eAAe,SDkHpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBvB,MAAK,SAAAwB,GACFA,EAAaC,gBAEhBvB,OAAM,SAAA7E,GACHE,QAAQF,MAAMA,EAAM8E,c","file":"static/js/main.2078434d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cubeTimerContainer\":\"cubeTimerContainer_Ay0n8\",\"scrambleContainer\":\"scrambleContainer_1a119\",\"scramble\":\"scramble_34LiX\",\"previousScramble\":\"previousScramble_2GkcP\",\"timerContainer\":\"timerContainer_2V7Gk\",\"solves\":\"solves_36Clh\",\"timer\":\"timer_txBap\",\"holding\":\"holding_pWB_3\",\"time\":\"time_8_DXF\",\"largeTimer\":\"largeTimer_2BxXc\",\"previousSolves\":\"previousSolves_1FCIY\",\"startButton\":\"startButton_vAJGC\",\"sessionStatsContainer\":\"sessionStatsContainer_1P-Lz\",\"heading\":\"heading_2iuV3\",\"handButtonsAndSolveTimeContainer\":\"handButtonsAndSolveTimeContainer_yMfb8\",\"leftHand\":\"leftHand_7QfGS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_1YvAP\",\"heading\":\"heading_tu83N\",\"input\":\"input_3xoZQ\",\"loginButton\":\"loginButton_10BGo\",\"error\":\"error_3_78z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_23up_\",\"queryInput\":\"queryInput_g6eat\",\"image\":\"image_2atOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_2I3pj\",\"textColor\":\"textColor_1BWe8\",\"bottomBorder\":\"bottomBorder_2f-iS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_3E2_Q\",\"textColor\":\"textColor_2I3YX\",\"bottomBorder\":\"bottomBorder_1awHt\"};","module.exports = __webpack_public_path__ + \"static/media/DD1a.42a5250c.png\";","module.exports = __webpack_public_path__ + \"static/media/DD4a.7e40e810.png\";","module.exports = __webpack_public_path__ + \"static/media/DD5b.8523dd28.png\";","module.exports = __webpack_public_path__ + \"static/media/DR5a.c6815c41.png\";","module.exports = __webpack_public_path__ + \"static/media/UL1a.137fcb5f.png\";","module.exports = __webpack_public_path__ + \"static/media/UL5a.17a229fd.png\";","module.exports = __webpack_public_path__ + \"static/media/UL5b.88630ad9.png\";","module.exports = __webpack_public_path__ + \"static/media/UR1b.0de51f6b.png\";","module.exports = __webpack_public_path__ + \"static/media/UR5a.b4cb91ea.png\";","module.exports = __webpack_public_path__ + \"static/media/UR5b.3af93687.png\";","module.exports = __webpack_public_path__ + \"static/media/UU4b.a4f90bee.png\";","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport { Solve } from '../types/solve-types';\nimport css from './cube-timer.less';\nimport { formatTimer, now } from './format-time-utils';\n\nlet interval: NodeJS.Timeout | undefined;\ninterface TimerProps {\n    timerRunning: boolean;\n    onToggleTimerRunning: (running: boolean) => void;\n    onNewScramble: () => void;\n    solves: Solve[];\n    addSolve: (solveTime: number) => void;\n}\n\nconst Timer: React.FC<TimerProps> = ({ timerRunning, onToggleTimerRunning, onNewScramble, addSolve, solves }) => {\n    const [startTime, setStartTime] = useState<number | undefined>();\n    const [formattedSolveTime, setFormattedSolveTime] = useState<string>('0.00');\n    const [solveTime, setSolveTime] = useState<number>(0);\n    const [holding, setHolding] = useState(false);\n\n    useEffect(() => {\n        if (timerRunning) {\n            interval = setInterval(() => {\n                setSolveTime(now() - (startTime ?? 0));\n            }, 10);\n        } else {\n            if (interval) {\n                clearInterval(interval);\n            }\n        }\n\n        if (interval) {\n            return () => clearInterval(interval!);\n        }\n\n        return;\n    }, [timerRunning, startTime]);\n\n    const startTimer = () => {\n        if (timerRunning) {\n            return;\n        }\n\n        setStartTime(now());\n        onToggleTimerRunning(true);\n    };\n\n    const stopTimer = () => {\n        onToggleTimerRunning(false);\n\n        if (solveTime !== 0) {\n            setFormattedSolveTime(formatTimer(solveTime));\n            addSolve(solveTime);\n        }\n\n        onNewScramble();\n    };\n\n    const buttonClassNames = classNames(css.startButton, { [css.holding]: holding });\n    const previousSolves = solves.slice(1);\n\n    const startHold = () => {\n        setHolding(true);\n        if (!timerRunning) {\n            setSolveTime(0);\n        }\n    };\n\n    const stopHold = () => {\n        setHolding(false);\n        if (timerRunning) {\n            stopTimer();\n        } else {\n            startTimer();\n        }\n    };\n\n    return (\n        <div className={css.timerContainer}>\n            {timerRunning ? (\n                <div\n                    className={css.largeTimer}\n                    onClick={() => {\n                        if (now() - (startTime ?? 0) > 1000) {\n                            stopTimer();\n                        }\n                    }}\n                >\n                    <span className={classNames(css.timer, css.time)}>{formatTimer(solveTime)}</span>\n                </div>\n            ) : (\n                <>\n                    <div className={buttonClassNames}>\n                        <i className={classNames('fas fa-hand-paper', css.leftHand)} />\n                    </div>\n                    <div className={css.solves}>\n                        <span\n                            className={classNames(css.timer, css.time, { [css.holding]: holding })}\n                            onMouseUp={stopHold}\n                            onMouseDown={startHold}\n                            onTouchStart={startHold}\n                            onTouchEnd={stopHold}\n                        >\n                            {formattedSolveTime}\n                        </span>\n                        <div className={classNames(css.previousSolves, css.time)}>\n                            {previousSolves.map((previousSolve, index) => (\n                                <span key={index}>{formatTimer(previousSolve.time)}</span>\n                            ))}\n                        </div>\n                    </div>\n                    <div className={buttonClassNames}>\n                        <i className=\"fas fa-hand-paper\" />\n                    </div>\n                </>\n            )}\n            <KeyboardEventHandler handleKeys={['space']} onKeyEvent={startHold} />\n            <KeyboardEventHandler handleKeys={['space']} handleEventType={'keyup'} onKeyEvent={stopHold} />\n        </div>\n    );\n};\n\nexport default Timer;\n","import firebase, { firestore } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport React, { useEffect, useState } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Algorithms from './algorithms/Algorithms';\nimport CubeTimer from './cube-timer/CubeTimer';\nimport { config, getFirebaseError, solveConverter } from './firebase-utils';\nimport Login from './login/Login';\nimport Register from './register/Register';\nimport { Solve } from './types/solve-types';\n\nfirebase.initializeApp(config);\nlet auth: firebase.auth.Auth | undefined;\nlet solveDbCollection: firestore.CollectionReference | undefined;\n\nexport const AuthContext = React.createContext<AuthState & AuthStateModifiers>({\n    user: null,\n    isLoading: false,\n    signIn: async () => null,\n    signUp: async () => null,\n});\nexport const DataContext = React.createContext<DataState & DataStateModifiers>({\n    sessionSolves: [],\n    storedSolves: [],\n    addNewSolve: () => {},\n    removeStoredSolve: () => {},\n});\n\ninterface DataState {\n    sessionSolves: Solve[];\n    storedSolves: (Solve & { id: string })[];\n}\n\ninterface DataStateModifiers {\n    addNewSolve: (solve: Solve) => void;\n    removeStoredSolve: (id: string) => void;\n}\n\ninterface AuthState {\n    user: firebase.User | null;\n    isLoading: boolean;\n}\n\ninterface AuthStateModifiers {\n    signIn: (email: string, password: string) => Promise<string | null>;\n    signUp: (email: string, password: string) => Promise<string | null>;\n}\n\nconst App = () => {\n    const [authState, setAuthState] = useState<AuthState>({ user: null, isLoading: true });\n    const [dataState, setDataState] = useState<DataState>({\n        sessionSolves: [],\n        storedSolves: [],\n    });\n\n    const addNewSolve = async (solve: Solve) => {\n        setDataState(prev => ({ ...prev, sessionSolves: [solve, ...prev.sessionSolves] }));\n\n        if (authState.user) {\n            const doc = solveDbCollection!.doc();\n            await doc.set(solve);\n            setDataState(prev => ({ ...prev, storedSolves: [{ ...solve, id: doc.id }, ...prev.storedSolves] }));\n        }\n    };\n\n    const removeStoredSolve = (id: string) => {\n        if (authState.user) {\n            solveDbCollection?.doc(id).delete();\n        }\n    };\n\n    const signIn = async (email: string, password: string) => {\n        try {\n            await auth?.signInWithEmailAndPassword(email, password);\n            return null;\n        } catch (err) {\n            return getFirebaseError(err);\n        }\n    };\n\n    const signUp = async (email: string, password: string) => {\n        try {\n            await auth?.createUserWithEmailAndPassword(email, password);\n            return null;\n        } catch (err) {\n            return getFirebaseError(err);\n        }\n    };\n\n    useEffect(() => {\n        if (!auth) {\n            auth = firebase.auth();\n            auth.onAuthStateChanged(user => {\n                setAuthState({ user, isLoading: false });\n\n                if (user === null) {\n                    solveDbCollection = undefined;\n                } else {\n                    solveDbCollection = firebase\n                        .firestore()\n                        .collection('solves')\n                        .doc(user.uid)\n                        .withConverter(solveConverter)\n                        .collection('all_solves');\n\n                    solveDbCollection\n                        .get()\n                        .then(snapshot => {\n                            setDataState(prev => ({\n                                ...prev,\n                                storedSolves: snapshot.docs.map(doc => ({\n                                    ...(doc.data() as Solve),\n                                    id: doc.id,\n                                })),\n                            }));\n                        })\n                        .catch(err => {\n                            if (err.message.toLowerCase().includes('quota exceeded')) {\n                                console.error('Firestore kvote exceeded');\n                            } else {\n                                throw err;\n                            }\n                        });\n                }\n            });\n        }\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{ ...authState, signIn, signUp }}>\n            <DataContext.Provider value={{ ...dataState, addNewSolve, removeStoredSolve }}>\n                <HashRouter>\n                    <Route exact={true} path=\"/\" component={CubeTimer} />\n                    <Route path=\"/algorithms\" component={Algorithms} />\n                    <Route path=\"/login\" component={Login} />\n                    <Route path=\"/register\" component={Register} />\n                </HashRouter>\n            </DataContext.Provider>\n        </AuthContext.Provider>\n    );\n};\n\nexport default App;\n","import DD1a from './cases/DD1a.png';\nimport DD4a from './cases/DD4a.png';\nimport DD5b from './cases/DD5b.png';\nimport DR5a from './cases/DR5a.png';\nimport UL1a from './cases/UL1a.png';\nimport UL5a from './cases/UL5a.png';\nimport UL5b from './cases/UL5b.png';\nimport UR1b from './cases/UR1b.png';\nimport UR5a from './cases/UR5a.png';\nimport UR5b from './cases/UR5b.png';\nimport UU4b from './cases/UU4b.png';\n\nexport interface F2LCase {\n    src: string;\n    name: string;\n    alg: string;\n}\n\nconst cases: F2LCase[] = [\n    {\n        src: UL1a,\n        name: 'UL1a',\n        alg: \"y' U (R' U R U') (R' U' R)\",\n    },\n    {\n        src: UR1b,\n        name: 'UR1b',\n        alg: \"y' U (R' U2 R) U' y (R U R')\",\n    },\n    {\n        src: UU4b,\n        name: 'UU4b',\n        alg: \"y' U' (R' U R U) (R' U R U') (R' U R)\",\n    },\n    {\n        src: UL5a,\n        name: 'UL5a',\n        alg: \"(U' R U' R') U2 (R U' R')\",\n    },\n    {\n        src: UL5b,\n        name: 'UL5b',\n        alg: \"(U' R U R') U y' (R' U' R)\",\n    },\n    {\n        src: DD1a,\n        name: 'DD1a',\n        alg: \"U (R U' R') U' (F' U F)\",\n    },\n    {\n        src: UR5a,\n        name: 'UR5a',\n        alg: \"U (R U R') U2 (R U R')\",\n    },\n    {\n        src: UR5b,\n        name: 'UR5b',\n        alg: \"U (F' U' F) U' (R U R')\",\n    },\n    {\n        src: DR5a,\n        name: 'DR5a',\n        alg: \"(R U' R' U) (R U2' R') U (R U' R')\",\n    },\n    {\n        src: DD5b,\n        name: 'DD5b',\n        alg: '',\n    },\n    {\n        src: DD4a,\n        name: 'DD4a',\n        alg: \"U' F' (R U R' U') R' F R\",\n    },\n];\n\nexport default cases;\n","import React, { ChangeEvent, useState } from 'react';\nimport css from './algorithms.less';\nimport cases, { F2LCase } from './cases';\n\nconst Algorithms = () => {\n    const [query, setQuery] = useState('');\n    const [currentCases, setCurrentCases] = useState<F2LCase[]>([]);\n\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const inp = e.target.value.toUpperCase();\n        setQuery(inp);\n\n        if (inp.length === 3) {\n            const matches = cases.filter(c => c.name.startsWith(inp));\n            setCurrentCases(matches);\n            setQuery('');\n        }\n    };\n\n    return (\n        <div className={css.container}>\n            <input value={query} onChange={onChange} className={css.queryInput} />\n            {currentCases.map(c => (\n                <img key={c.name} src={c.src} className={css.image} alt=\"Solution\" />\n            ))}\n        </div>\n    );\n};\n\nexport default Algorithms;\n","const leadingZero = (input: number) => ('0' + input).slice(-2);\n\nexport const now = (): number => new Date().getTime();\n\nexport const formatTimer = (time: number) => {\n    const minutes = Math.floor(time / 60000);\n    const seconds = Math.floor(time / 1000) % 60;\n    const milliseconds = Math.floor((time % 1000) / 10);\n\n    return `${minutes > 0 ? minutes + ':' : ''}${minutes > 0 ? leadingZero(seconds) : seconds}.${leadingZero(\n        milliseconds,\n    )}`;\n};\n","import React, { useEffect, useState } from 'react';\nimport css from './cube-timer.less';\n\ninterface Props {\n    newScramble: string;\n}\n\nconst Scramble: React.FC<Props> = ({ newScramble }) => {\n    const [currentScramble, setCurrentScramble] = useState<string>();\n    const [previousScramble, setPreviousScramble] = useState<string>();\n\n    useEffect(() => {\n        if (newScramble !== currentScramble) {\n            setPreviousScramble(currentScramble);\n            setCurrentScramble(newScramble);\n        }\n    }, [newScramble, currentScramble, setPreviousScramble]);\n\n    return (\n        <div className={css.scrambleContainer}>\n            <div className={css.scramble}>{currentScramble}</div>\n            {currentScramble && <div className={css.previousScramble}>{previousScramble}</div>}\n        </div>\n    );\n};\n\nexport default Scramble;\n","import React from 'react';\nimport { Solve } from '../types/solve-types';\nimport css from './cube-timer.less';\nimport { formatTimer } from './format-time-utils';\n\nconst findBestSolve = (solves: Solve[]): number => Math.min(...solves.map(solve => solve.time));\nconst findWorstSolve = (solves: Solve[]): number => Math.max(...solves.map(solve => solve.time));\nconst findAverageSolve = (solves: Solve[]): number => {\n    const totalSolveTime = solves.reduce((solveTimeSum, solve) => solveTimeSum + solve.time, 0);\n    return totalSolveTime / solves.length;\n};\n\nconst findBestAverageSolveOfFive = (solves: Solve[]): number => {\n    let firstSumOfFive = solves.slice(0, 5).reduce((solveTimeSum, solve) => solveTimeSum + solve.time, 0);\n    let bestSumOfFive = firstSumOfFive;\n\n    for (let i = 0; i < solves.length - 5; i++) {\n        firstSumOfFive -= solves[i].time;\n        firstSumOfFive += solves[i + 5].time;\n\n        bestSumOfFive = Math.min(firstSumOfFive, bestSumOfFive);\n    }\n\n    return bestSumOfFive / 5;\n};\n\ninterface Props {\n    sessionSolves: Solve[];\n}\n\nconst SessionStats: React.FC<Props> = ({ sessionSolves }) => {\n    const bestSolve = findBestSolve(sessionSolves);\n    const worstSolve = findWorstSolve(sessionSolves);\n    const averageSolve = findAverageSolve(sessionSolves);\n\n    const bestAverageOfFive = sessionSolves.length >= 5 ? findBestAverageSolveOfFive(sessionSolves) : null;\n\n    return (\n        <div className={css.sessionStatsContainer}>\n            <div className={css.heading}>dine tider denne runden</div>\n            <div>beste: {sessionSolves.length > 0 ? formatTimer(bestSolve) : '-'}</div>\n            <div>dårligte: {sessionSolves.length > 1 ? formatTimer(worstSolve) : '-'}</div>\n            <div>gjennomsnitt: {sessionSolves.length > 1 ? formatTimer(averageSolve) : '-'}</div>\n            <div>beste gjennomsnitt av 5: {bestAverageOfFive ? formatTimer(bestAverageOfFive) : '-'}</div>\n        </div>\n    );\n};\n\nexport default SessionStats;\n","import React, { useContext, useState } from 'react';\nimport scrambleGenerator from 'rubiks-cube-scramble';\nimport { DataContext } from '../App';\nimport css from './cube-timer.less';\nimport { now } from './format-time-utils';\nimport Scramble from './Scramble';\nimport SessionStats from './SessionStats';\nimport Timer from './Timer';\n\nconst newScramle = (): string => scrambleGenerator() as string;\n\nconst CubeTimer = () => {\n    const [timerRunning, setTimerRunning] = useState(false);\n    const [scramble, setScramble] = useState<string>(newScramle());\n    const { sessionSolves, addNewSolve } = useContext(DataContext);\n\n    return (\n        <div className={css.cubeTimerContainer}>\n            {!timerRunning && <Scramble newScramble={scramble} />}\n\n            <Timer\n                timerRunning={timerRunning}\n                onToggleTimerRunning={setTimerRunning}\n                onNewScramble={() => setScramble(newScramle)}\n                solves={sessionSolves}\n                addSolve={solveTime => addNewSolve({ time: solveTime, timestamp: now(), scramble })}\n            />\n            {!timerRunning && <SessionStats sessionSolves={sessionSolves} />}\n        </div>\n    );\n};\n\nexport default CubeTimer;\n","import { Solve } from './types/solve-types';\n\nexport const getFirebaseError = (error: { code: string }) => {\n    switch (error.code) {\n        case 'auth/wrong-password':\n            return 'Feil passord';\n        case 'auth/user-not-found':\n            return 'Brukeren finnes ikke';\n        case 'auth/invalid-email':\n            return 'Ugyldig epostadresse';\n        case 'auth/weak-password':\n            return 'For svakt passord!';\n        default:\n            console.log(error.code);\n            return 'Oops.. Noe gikk galt!';\n    }\n};\n\nexport const solveConverter = {\n    toFirestore: (solve: Solve) => ({\n        time: solve.time,\n        timestamp: solve.timestamp,\n        scramble: solve.scramble,\n    }),\n    fromFirestore: (snapshot: any, options: any): Solve => {\n        const data = snapshot.data(options);\n        return { time: data.time, timestamp: data.timestamp, scramble: data.scramble };\n    },\n};\n\nexport const config = {\n    apiKey: 'AIzaSyAW_PdA6o5ygKubwsxaQfJ22dgWE5fA41U',\n    authDomain: 'cubeguru-79b7d.firebaseapp.com',\n    databaseURL: 'https://cubeguru-79b7d.firebaseio.com',\n    projectId: 'cubeguru-79b7d',\n    storageBucket: 'cubeguru-79b7d.appspot.com',\n    messagingSenderId: '1042814909264',\n    appId: '1:1042814909264:web:e79fa88d14f9f4669c4a55',\n    measurementId: 'G-Z2GMHWJ2NG',\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport css from './emailAndPasswordForm.less';\n\ninterface Props {\n    title: string;\n    buttonTitle: string;\n    onSubmit: (email: string, password: string) => Promise<null | string>;\n    colorTheme: {\n        textColor: string;\n        bottomBorder: string;\n    };\n}\n\nconst EmailAndPasswordForm: React.FC<Props> = ({ title, buttonTitle, onSubmit, colorTheme }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState<string | null>(null);\n    const [submitting, setSubmitting] = useState(false);\n\n    const submit = async () => {\n        setSubmitting(true);\n\n        const err = await onSubmit(username, password);\n\n        if (err !== null) {\n            setError(err);\n        }\n        setSubmitting(false);\n    };\n\n    return (\n        <form className={css.form} onSubmit={submit}>\n            <h1 className={classNames(css.heading, colorTheme.textColor)}>{title}</h1>\n            <input\n                value={username}\n                onChange={e => setUsername(e.target.value)}\n                className={classNames(css.input, colorTheme.textColor, colorTheme.bottomBorder)}\n                type=\"email\"\n                placeholder=\"Epost..\"\n            />\n            <input\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                className={classNames(css.input, colorTheme.textColor, colorTheme.bottomBorder)}\n                type=\"password\"\n                placeholder=\"Passord..\"\n            />\n\n            {error && <span className={css.error}>{error}</span>}\n\n            <button\n                type=\"submit\"\n                className={classNames(css.loginButton, colorTheme.textColor)}\n                disabled={username === '' || password === '' || submitting}\n            >\n                {buttonTitle}\n            </button>\n        </form>\n    );\n};\n\nexport default EmailAndPasswordForm;\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../App';\nimport EmailAndPasswordForm from '../components/EmailAndPasswordForm';\nimport css from './login.less';\n\nconst Login = () => {\n    const history = useHistory();\n    const { user, signIn } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (user) {\n            history.push('/');\n        }\n    }, [history, user]);\n\n    return (\n        <div className={css.container}>\n            <EmailAndPasswordForm title=\"Logg inn\" buttonTitle=\"Logg inn\" onSubmit={signIn} colorTheme={{ textColor: css.textColor, bottomBorder: css.bottomBorder }} />\n        </div>\n    );\n};\n\nexport default Login;\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../App';\nimport EmailAndPasswordForm from '../components/EmailAndPasswordForm';\nimport css from './register.less';\n\nconst Register = () => {\n    const history = useHistory();\n    const { user, signUp } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (user) {\n            history.push('/');\n        }\n    }, [history, user]);\n\n    return (\n        <div className={css.container}>\n            <EmailAndPasswordForm title=\"Registrer deg\" buttonTitle=\"Ferdig\" onSubmit={signUp} colorTheme={{ textColor: css.textColor, bottomBorder: css.bottomBorder }} />\n        </div>\n    );\n};\n\nexport default Register;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config: any) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}