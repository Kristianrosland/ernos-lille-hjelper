{"version":3,"sources":["cube-timer/cube-timer.less","components/emailAndPasswordForm.less","login/login.less","register/register.less","algorithms/algorithms.less","app.less","algorithms/cases/DD1a.png","algorithms/cases/DD4a.png","algorithms/cases/DD5b.png","algorithms/cases/DR5a.png","algorithms/cases/UL1a.png","algorithms/cases/UL5a.png","algorithms/cases/UL5b.png","algorithms/cases/UR1b.png","algorithms/cases/UR5a.png","algorithms/cases/UR5b.png","algorithms/cases/UU4b.png","FirebaseProvider.tsx","algorithms/cases.ts","algorithms/Algorithms.tsx","firebase-utils.ts","cube-timer/Timer.tsx","LoginLink.tsx","cube-timer/format-time-utils.ts","cube-timer/Scramble.tsx","cube-timer/SessionStats.tsx","cube-timer/CubeTimer.tsx","components/EmailAndPasswordForm.tsx","login/Login.tsx","register/Register.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","auth","allSolvesCollection","solvesCollection","cases","src","UL1a","name","alg","UR1b","UU4b","UL5a","UL5b","DD1a","UR5a","UR5b","DR5a","DD5b","DD4a","Algorithms","useState","query","setQuery","currentCases","setCurrentCases","className","css","container","value","onChange","e","inp","target","toUpperCase","length","matches","filter","c","startsWith","queryInput","map","key","image","alt","getFirebaseError","error","code","console","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","interval","AuthContext","createContext","user","isLoading","signIn","a","signUp","signOut","DataContext","sessionSolves","stored","best","undefined","addNewSolve","removeStoredSolve","FirebaseProvider","children","authState","setAuthState","dataState","setDataState","updateBest","b","prev","storeNewBest","firestore","collection","doc","uid","set","FieldValue","delete","merge","solve","solveWithId","id","time","orderBy","limit","get","then","snapshot","docs","data","res","newBest","email","password","signInWithEmailAndPassword","username","where","createUserWithEmailAndPassword","useEffect","onAuthStateChanged","updatedUser","onUserSignedIn","Provider","LoginLink","useContext","history","useHistory","loginButton","onClick","push","classNames","userIcon","leadingZero","input","slice","now","Date","getTime","formatTimer","minutes","Math","floor","seconds","milliseconds","Scramble","newScramble","currentScramble","setCurrentScramble","previousScramble","setPreviousScramble","scrambleContainer","scramble","findBestSolve","solves","min","findWorstSolve","max","sumOfSolves","reduce","solveTimeSum","getThreeOfFiveSum","SessionStats","bestSolve","bestSolveTime","worstSolveTime","averageSolveTime","bestAverageOfFiveSolveTime","firstSumOfFive","bestSumOfFive","i","findBestAverageSolveOfFive","lastThreeOfFiveAverageSolveTime","lastFiveSolves","findLastThreeOfFiveAverageSolve","bestThreeOfFiveAverageSolveTime","firstFiveSolves","bestThreeOfFive","fiveSolves","sum","findBestThreeOfFiveAverageSolve","statsContainerMobile","heading","statsContainerDesktop","hading","statElement","statLabel","statValue","Timer","timerRunning","onToggleTimerRunning","onNewScramble","addSolve","startTime","setStartTime","formattedSolveTime","setFormattedSolveTime","solveTime","setSolveTime","holding","setHolding","setInterval","clearInterval","stopTimer","buttonClassNames","startButton","previousSolves","startHold","stopHold","timerContainer","largeTimer","timer","leftHand","onMouseUp","onMouseDown","onTouchStart","onTouchEnd","previousSolvesContainer","previousSolve","index","fadeOut","handleKeys","onKeyEvent","handleEventType","newScramle","scrambleGenerator","CubeTimer","setTimerRunning","setScramble","cubeTimerContainer","timestamp","EmailAndPasswordForm","title","buttonTitle","onSubmit","colorTheme","includeUsername","bottomLink","setUsername","setEmail","setPassword","setError","submitting","setSubmitting","submit","preventDefault","err","form","textColor","bottomBorder","type","placeholder","disabled","Login","goToRegisterLink","Register","goToLoginLink","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.aa2725ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cubeTimerContainer\":\"cubeTimerContainer_Ay0n8\",\"scrambleContainer\":\"scrambleContainer_1a119\",\"scramble\":\"scramble_34LiX\",\"previousScramble\":\"previousScramble_2GkcP\",\"timerContainer\":\"timerContainer_2V7Gk\",\"solves\":\"solves_36Clh\",\"timer\":\"timer_txBap\",\"holding\":\"holding_pWB_3\",\"time\":\"time_8_DXF\",\"largeTimer\":\"largeTimer_2BxXc\",\"previousSolvesContainer\":\"previousSolvesContainer_2Nlpf\",\"fadeOut\":\"fadeOut_2pNEi\",\"previousSolves\":\"previousSolves_1FCIY\",\"startButton\":\"startButton_vAJGC\",\"statsContainerMobile\":\"statsContainerMobile__pKov\",\"heading\":\"heading_2iuV3\",\"statsContainerDesktop\":\"statsContainerDesktop_RlG47\",\"statElement\":\"statElement_23lF2\",\"statLabel\":\"statLabel_EWClq\",\"statValue\":\"statValue_16cgT\",\"handButtonsAndSolveTimeContainer\":\"handButtonsAndSolveTimeContainer_yMfb8\",\"leftHand\":\"leftHand_7QfGS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_1YvAP\",\"heading\":\"heading_tu83N\",\"input\":\"input_3xoZQ\",\"loginButton\":\"loginButton_10BGo\",\"error\":\"error_3_78z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_2I3pj\",\"textColor\":\"textColor_1BWe8\",\"bottomBorder\":\"bottomBorder_2f-iS\",\"goToRegisterLink\":\"goToRegisterLink_1jSe-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_3E2_Q\",\"textColor\":\"textColor_2I3YX\",\"bottomBorder\":\"bottomBorder_1awHt\",\"goToLoginLink\":\"goToLoginLink_E3FTV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_23up_\",\"queryInput\":\"queryInput_g6eat\",\"image\":\"image_2atOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginButton\":\"loginButton_3iU6Y\",\"userIcon\":\"userIcon_2Dvg6\"};","module.exports = __webpack_public_path__ + \"static/media/DD1a.42a5250c.png\";","module.exports = __webpack_public_path__ + \"static/media/DD4a.7e40e810.png\";","module.exports = __webpack_public_path__ + \"static/media/DD5b.8523dd28.png\";","module.exports = __webpack_public_path__ + \"static/media/DR5a.c6815c41.png\";","module.exports = __webpack_public_path__ + \"static/media/UL1a.137fcb5f.png\";","module.exports = __webpack_public_path__ + \"static/media/UL5a.17a229fd.png\";","module.exports = __webpack_public_path__ + \"static/media/UL5b.88630ad9.png\";","module.exports = __webpack_public_path__ + \"static/media/UR1b.0de51f6b.png\";","module.exports = __webpack_public_path__ + \"static/media/UR5a.b4cb91ea.png\";","module.exports = __webpack_public_path__ + \"static/media/UR5b.3af93687.png\";","module.exports = __webpack_public_path__ + \"static/media/UU4b.a4f90bee.png\";","import React, { createContext, ReactNode, useEffect, useState } from 'react';\n\nimport firebase, { firestore } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport { config, getFirebaseError } from './firebase-utils';\nimport { Solve } from './types/solve-types';\n\nfirebase.initializeApp(config);\nlet auth: firebase.auth.Auth | undefined;\nlet allSolvesCollection: firestore.CollectionReference | undefined;\nlet solvesCollection: firestore.DocumentReference | undefined;\n\nexport const AuthContext = createContext<AuthState & AuthStateModifiers>({\n    user: null,\n    isLoading: false,\n    signIn: async () => null,\n    signUp: async () => null,\n    signOut: async () => null,\n});\nexport const DataContext = createContext<DataState & DataStateModifiers>({\n    sessionSolves: [],\n    stored: {\n        best: undefined,\n    },\n\n    addNewSolve: () => {},\n    removeStoredSolve: () => {},\n});\n\ninterface DataState {\n    sessionSolves: Solve[];\n    stored: StoredData;\n}\n\ninterface StoredData {\n    best: (Solve & { id: string }) | undefined;\n}\n\ninterface DataStateModifiers {\n    addNewSolve: (solve: Solve) => void;\n    removeStoredSolve: (id: string) => void;\n}\n\ninterface AuthState {\n    user: (firebase.User & { username?: string }) | null;\n    isLoading: boolean;\n}\n\ninterface AuthStateModifiers {\n    signIn: (email: string, password: string) => Promise<string | null>;\n    signUp: (email: string, password: string, username?: string) => Promise<string | null>;\n    signOut: () => void;\n}\n\nconst FirebaseProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n    const [authState, setAuthState] = useState<AuthState>({ user: null, isLoading: true });\n    const [dataState, setDataState] = useState<DataState>({\n        sessionSolves: [],\n        stored: { best: undefined },\n    });\n\n    const updateBest = async (b?: Solve & { id: string }) =>\n        setDataState(prev => ({ ...prev, stored: { ...prev.stored, best: b } }));\n\n    const storeNewBest = (best?: Solve & { id: string }) => {\n        if (authState.user) {\n            firebase\n                .firestore()\n                .collection('solves')\n                .doc(authState.user.uid)\n                .set({ best: best ?? firebase.firestore.FieldValue.delete() }, { merge: true });\n        }\n    };\n\n    const addNewSolve = async (solve: Solve) => {\n        setDataState(prev => ({ ...prev, sessionSolves: [solve, ...prev.sessionSolves] }));\n\n        if (authState.user && allSolvesCollection) {\n            const doc = allSolvesCollection.doc();\n            await doc.set(solve);\n\n            const solveWithId = { ...solve, id: doc.id };\n\n            if (dataState.stored.best === undefined || dataState.stored.best.time > solve.time) {\n                updateBest(solveWithId);\n                storeNewBest(solveWithId);\n            }\n        }\n    };\n\n    const removeStoredSolve = async (id: string) => {\n        if (authState.user) {\n            await allSolvesCollection?.doc(id).delete();\n\n            if (dataState.stored.best?.id === id) {\n                allSolvesCollection\n                    ?.orderBy('time', 'asc')\n                    .limit(1)\n                    .get()\n                    .then(snapshot => snapshot.docs.map(doc => ({ ...doc.data(), id: doc.id })))\n                    .then(res => {\n                        if (res.length === 1) {\n                            const newBest = res[0] as Solve & { id: string };\n\n                            updateBest(newBest);\n                            storeNewBest(newBest);\n                        } else {\n                            storeNewBest(undefined);\n                            updateBest(undefined);\n                        }\n                    });\n            }\n        }\n    };\n\n    const signIn = async (email: string, password: string) => {\n        try {\n            await auth?.signInWithEmailAndPassword(email, password);\n            return null;\n        } catch (err) {\n            return getFirebaseError(err);\n        }\n    };\n\n    const signOut = () => {\n        auth?.signOut();\n        setDataState(prev => ({ ...prev, stored: { best: undefined } }));\n    };\n\n    const onUserSignedIn = (user: firebase.User) => {\n        solvesCollection = firebase\n            .firestore()\n            .collection('solves')\n            .doc(user.uid);\n\n        allSolvesCollection = solvesCollection.collection('all_solves');\n\n        solvesCollection\n            .get()\n            .then(doc => doc.data())\n            .then(doc => {\n                if (doc && doc.best) {\n                    updateBest(doc.best as Solve & { id: string });\n                }\n            });\n\n        firebase\n            .firestore()\n            .collection('userdata')\n            .doc(user.uid)\n            .get()\n            .then(doc => {\n                const data = doc.data();\n                if (data && 'username' in data) {\n                    const updatedUser = { ...user, username: data.username };\n                    setAuthState(prev => ({ ...prev, user: updatedUser }));\n                }\n            });\n    };\n\n    const signUp = async (email: string, password: string, username?: string) => {\n        try {\n            const existing =\n                (\n                    await firebase\n                        .firestore()\n                        .collection('userdata')\n                        .where('username', '==', username)\n                        .get()\n                ).docs.length > 0;\n\n            if (existing) {\n                return 'Dette brukernavnet er dessverre opptatt';\n            }\n\n            const res = await auth?.createUserWithEmailAndPassword(email, password);\n\n            if (!res) {\n                return 'Noe gikk galt med opprettelsen av din konto';\n            }\n\n            if (res.user?.uid) {\n                await firebase\n                    .firestore()\n                    .collection('userdata')\n                    .doc(res.user.uid)\n                    .set({\n                        username,\n                    });\n            }\n\n            return null;\n        } catch (err) {\n            return getFirebaseError(err);\n        }\n    };\n\n    useEffect(() => {\n        if (!auth) {\n            auth = firebase.auth();\n            auth.onAuthStateChanged(user => {\n                setAuthState({ user, isLoading: false });\n\n                if (user === null) {\n                    allSolvesCollection = undefined;\n                } else {\n                    onUserSignedIn(user);\n                }\n            });\n        }\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{ ...authState, signIn, signUp, signOut }}>\n            <DataContext.Provider value={{ ...dataState, addNewSolve, removeStoredSolve }}>\n                {children}\n            </DataContext.Provider>\n        </AuthContext.Provider>\n    );\n};\n\nexport default FirebaseProvider;\n","import DD1a from './cases/DD1a.png';\nimport DD4a from './cases/DD4a.png';\nimport DD5b from './cases/DD5b.png';\nimport DR5a from './cases/DR5a.png';\nimport UL1a from './cases/UL1a.png';\nimport UL5a from './cases/UL5a.png';\nimport UL5b from './cases/UL5b.png';\nimport UR1b from './cases/UR1b.png';\nimport UR5a from './cases/UR5a.png';\nimport UR5b from './cases/UR5b.png';\nimport UU4b from './cases/UU4b.png';\n\nexport interface F2LCase {\n    src: string;\n    name: string;\n    alg: string;\n}\n\nconst cases: F2LCase[] = [\n    {\n        src: UL1a,\n        name: 'UL1a',\n        alg: \"y' U (R' U R U') (R' U' R)\",\n    },\n    {\n        src: UR1b,\n        name: 'UR1b',\n        alg: \"y' U (R' U2 R) U' y (R U R')\",\n    },\n    {\n        src: UU4b,\n        name: 'UU4b',\n        alg: \"y' U' (R' U R U) (R' U R U') (R' U R)\",\n    },\n    {\n        src: UL5a,\n        name: 'UL5a',\n        alg: \"(U' R U' R') U2 (R U' R')\",\n    },\n    {\n        src: UL5b,\n        name: 'UL5b',\n        alg: \"(U' R U R') U y' (R' U' R)\",\n    },\n    {\n        src: DD1a,\n        name: 'DD1a',\n        alg: \"U (R U' R') U' (F' U F)\",\n    },\n    {\n        src: UR5a,\n        name: 'UR5a',\n        alg: \"U (R U R') U2 (R U R')\",\n    },\n    {\n        src: UR5b,\n        name: 'UR5b',\n        alg: \"U (F' U' F) U' (R U R')\",\n    },\n    {\n        src: DR5a,\n        name: 'DR5a',\n        alg: \"(R U' R' U) (R U2' R') U (R U' R')\",\n    },\n    {\n        src: DD5b,\n        name: 'DD5b',\n        alg: '',\n    },\n    {\n        src: DD4a,\n        name: 'DD4a',\n        alg: \"U' F' (R U R' U') R' F R\",\n    },\n];\n\nexport default cases;\n","import React, { ChangeEvent, useState } from 'react';\nimport css from './algorithms.less';\nimport cases, { F2LCase } from './cases';\n\nconst Algorithms = () => {\n    const [query, setQuery] = useState('');\n    const [currentCases, setCurrentCases] = useState<F2LCase[]>([]);\n\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const inp = e.target.value.toUpperCase();\n        setQuery(inp);\n\n        if (inp.length === 3) {\n            const matches = cases.filter(c => c.name.startsWith(inp));\n            setCurrentCases(matches);\n            setQuery('');\n        }\n    };\n\n    return (\n        <div className={css.container}>\n            <input value={query} onChange={onChange} className={css.queryInput} />\n            {currentCases.map(c => (\n                <img key={c.name} src={c.src} className={css.image} alt=\"Solution\" />\n            ))}\n        </div>\n    );\n};\n\nexport default Algorithms;\n","import { Solve } from './types/solve-types';\n\nexport const getFirebaseError = (error: { code: string }) => {\n    switch (error.code) {\n        case 'auth/wrong-password':\n            return 'Feil passord';\n        case 'auth/user-not-found':\n            return 'Brukeren finnes ikke';\n        case 'auth/invalid-email':\n            return 'Ugyldig epostadresse';\n        case 'auth/weak-password':\n            return 'For svakt passord!';\n        default:\n            console.error(error.code);\n            return 'Oops.. Noe gikk galt!';\n    }\n};\n\nexport const solveConverter = {\n    toFirestore: (solve: Solve) => ({\n        time: solve.time,\n        timestamp: solve.timestamp,\n        scramble: solve.scramble,\n    }),\n    fromFirestore: (snapshot: any, options: any): Solve => {\n        const data = snapshot.data(options);\n        return { time: data.time, timestamp: data.timestamp, scramble: data.scramble };\n    },\n};\n\nexport const config = {\n    apiKey: 'AIzaSyAW_PdA6o5ygKubwsxaQfJ22dgWE5fA41U',\n    authDomain: 'cubeguru-79b7d.firebaseapp.com',\n    databaseURL: 'https://cubeguru-79b7d.firebaseio.com',\n    projectId: 'cubeguru-79b7d',\n    storageBucket: 'cubeguru-79b7d.appspot.com',\n    messagingSenderId: '1042814909264',\n    appId: '1:1042814909264:web:e79fa88d14f9f4669c4a55',\n    measurementId: 'G-Z2GMHWJ2NG',\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport { Solve } from '../types/solve-types';\nimport css from './cube-timer.less';\nimport { formatTimer, now } from './format-time-utils';\n\nlet interval: NodeJS.Timeout | undefined;\ninterface TimerProps {\n    timerRunning: boolean;\n    onToggleTimerRunning: (running: boolean) => void;\n    onNewScramble: () => void;\n    solves: Solve[];\n    addSolve: (solveTime: number) => void;\n}\n\nconst Timer: React.FC<TimerProps> = ({ timerRunning, onToggleTimerRunning, onNewScramble, addSolve, solves }) => {\n    const [startTime, setStartTime] = useState<number | undefined>();\n    const [formattedSolveTime, setFormattedSolveTime] = useState<string>('0.00');\n    const [solveTime, setSolveTime] = useState<number>(0);\n    const [holding, setHolding] = useState(false);\n\n    useEffect(() => {\n        if (timerRunning) {\n            interval = setInterval(() => {\n                setSolveTime(now() - (startTime ?? 0));\n            }, 10);\n        } else {\n            if (interval) {\n                clearInterval(interval);\n            }\n        }\n\n        if (interval) {\n            return () => clearInterval(interval!);\n        }\n\n        return;\n    }, [timerRunning, startTime]);\n\n    const startTimer = () => {\n        if (timerRunning) {\n            return;\n        }\n\n        setStartTime(now());\n        onToggleTimerRunning(true);\n    };\n\n    const stopTimer = () => {\n        onToggleTimerRunning(false);\n\n        if (solveTime !== 0) {\n            setFormattedSolveTime(formatTimer(solveTime));\n            addSolve(solveTime);\n        }\n\n        onNewScramble();\n    };\n\n    const buttonClassNames = classNames(css.startButton, { [css.holding]: holding });\n    const previousSolves = solves.slice(1);\n\n    const startHold = () => {\n        setHolding(true);\n        if (!timerRunning) {\n            setSolveTime(0);\n        }\n    };\n\n    const stopHold = () => {\n        setHolding(false);\n        if (timerRunning) {\n            stopTimer();\n        } else {\n            startTimer();\n        }\n    };\n\n    return (\n        <div className={css.timerContainer}>\n            {timerRunning ? (\n                <div\n                    className={css.largeTimer}\n                    onClick={() => {\n                        if (now() - (startTime ?? 0) > 1000) {\n                            stopTimer();\n                        }\n                    }}\n                >\n                    <span className={classNames(css.timer, css.time)}>{formatTimer(solveTime)}</span>\n                </div>\n            ) : (\n                <>\n                    <div className={buttonClassNames}>\n                        <i className={classNames('fas fa-hand-paper', css.leftHand)} />\n                    </div>\n                    <div className={css.solves}>\n                        <span\n                            className={classNames(css.timer, css.time, { [css.holding]: holding })}\n                            onMouseUp={stopHold}\n                            onMouseDown={startHold}\n                            onTouchStart={startHold}\n                            onTouchEnd={stopHold}\n                        >\n                            {formattedSolveTime}\n                        </span>\n                        <div className={css.previousSolvesContainer}>\n                            <div className={classNames(css.previousSolves, css.time)}>\n                                {previousSolves.map((previousSolve, index) => (\n                                    <span key={index}>{formatTimer(previousSolve.time)}</span>\n                                ))}\n                                <div className={css.fadeOut} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className={buttonClassNames}>\n                        <i className=\"fas fa-hand-paper\" />\n                    </div>\n                </>\n            )}\n            <KeyboardEventHandler handleKeys={['space']} onKeyEvent={startHold} />\n            <KeyboardEventHandler handleKeys={['space']} handleEventType={'keyup'} onKeyEvent={stopHold} />\n        </div>\n    );\n};\n\nexport default Timer;\n","import classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport css from './app.less';\nimport { AuthContext } from './FirebaseProvider';\n\nconst LoginLink = () => {\n    const { user, isLoading, signOut } = useContext(AuthContext);\n    const history = useHistory();\n\n    const onClick = () => {\n        if (isLoading) return;\n\n        if (!user) {\n            history.push('/login');\n        } else {\n            signOut();\n        }\n    };\n\n    return isLoading ? null : (\n        <div className={css.loginButton} onClick={onClick}>\n            <i className={classNames('fas fa-user', css.userIcon)} />\n            {user ? user.username : 'Logg inn'}\n        </div>\n    );\n};\n\nexport default LoginLink;\n","const leadingZero = (input: number) => ('0' + input).slice(-2);\n\nexport const now = (): number => new Date().getTime();\n\nexport const formatTimer = (time: number) => {\n    const minutes = Math.floor(time / 60000);\n    const seconds = Math.floor(time / 1000) % 60;\n    const milliseconds = Math.floor((time % 1000) / 10);\n\n    return `${minutes > 0 ? minutes + ':' : ''}${minutes > 0 ? leadingZero(seconds) : seconds}.${leadingZero(\n        milliseconds,\n    )}`;\n};\n","import React, { useEffect, useState } from 'react';\nimport css from './cube-timer.less';\n\ninterface Props {\n    newScramble: string;\n}\n\nconst Scramble: React.FC<Props> = ({ newScramble }) => {\n    const [currentScramble, setCurrentScramble] = useState<string>();\n    const [previousScramble, setPreviousScramble] = useState<string>();\n\n    useEffect(() => {\n        if (newScramble !== currentScramble) {\n            setPreviousScramble(currentScramble);\n            setCurrentScramble(newScramble);\n        }\n    }, [newScramble, currentScramble, setPreviousScramble]);\n\n    return (\n        <div className={css.scrambleContainer}>\n            <div className={css.scramble}>{currentScramble}</div>\n            {currentScramble && <div className={css.previousScramble}>{previousScramble}</div>}\n        </div>\n    );\n};\n\nexport default Scramble;\n","import React from 'react';\nimport { Solve } from '../types/solve-types';\nimport css from './cube-timer.less';\nimport { formatTimer } from './format-time-utils';\n\nconst findBestSolve = (solves: Solve[]): number => Math.min(...solves.map(solve => solve.time));\nconst findWorstSolve = (solves: Solve[]): number => Math.max(...solves.map(solve => solve.time));\nconst findAverageSolve = (solves: Solve[]): number => {\n    const totalSolveTime = solves.reduce((solveTimeSum, solve) => solveTimeSum + solve.time, 0);\n    return totalSolveTime / solves.length;\n};\n\nconst sumOfSolves = (solves: Solve[]): number =>\n    solves.reduce((solveTimeSum, solve) => solveTimeSum + solve.time, 0);\n\nconst findBestAverageSolveOfFive = (solves: Solve[]): number => {\n    let firstSumOfFive = sumOfSolves(solves.slice(0, 5));\n    let bestSumOfFive = firstSumOfFive;\n\n    for (let i = 0; i < solves.length - 5; i++) {\n        firstSumOfFive -= solves[i].time;\n        firstSumOfFive += solves[i + 5].time;\n\n        bestSumOfFive = Math.min(firstSumOfFive, bestSumOfFive);\n    }\n\n    return bestSumOfFive / 5;\n};\n\nconst getThreeOfFiveSum = (solves: Solve[]) =>\n    sumOfSolves(solves) - findBestSolve(solves) - findWorstSolve(solves);\n\nconst findLastThreeOfFiveAverageSolve = (solves: Solve[]) => {\n    const lastFiveSolves = solves.slice(0, 5);\n\n    return getThreeOfFiveSum(lastFiveSolves) / 3;\n};\n\nconst findBestThreeOfFiveAverageSolve = (solves: Solve[]): number => {\n    const firstFiveSolves = solves.slice(0, 5);\n    const firstThreeOfFive = getThreeOfFiveSum(firstFiveSolves);\n\n    let bestThreeOfFive = firstThreeOfFive;\n\n    for (let i = 0; i < solves.length - 5; i++) {\n        const fiveSolves = solves.slice(i, i + 5);\n        const sum = getThreeOfFiveSum(fiveSolves);\n\n        bestThreeOfFive = Math.min(sum, bestThreeOfFive);\n    }\n\n    return bestThreeOfFive / 3;\n};\n\ninterface Props {\n    sessionSolves: Solve[];\n    bestSolve: (Solve & { id: string }) | undefined;\n}\n\nconst SessionStats: React.FC<Props> = ({ sessionSolves, bestSolve }) => {\n    const bestSolveTime = bestSolve ? bestSolve.time : findBestSolve(sessionSolves);\n    const worstSolveTime = findWorstSolve(sessionSolves);\n    const averageSolveTime = findAverageSolve(sessionSolves);\n\n    const bestAverageOfFiveSolveTime =\n        sessionSolves.length >= 5 ? findBestAverageSolveOfFive(sessionSolves) : null;\n    const lastThreeOfFiveAverageSolveTime =\n        sessionSolves.length >= 5 ? findLastThreeOfFiveAverageSolve(sessionSolves) : null;\n    const bestThreeOfFiveAverageSolveTime =\n        sessionSolves.length >= 5 ? findBestThreeOfFiveAverageSolve(sessionSolves) : null;\n\n    return (\n        <>\n            <div className={css.statsContainerMobile}>\n                <div className={css.heading}>dine tider denne runden</div>\n                <div>beste: {sessionSolves.length > 0 ? formatTimer(bestSolveTime) : '-'}</div>\n                <div>dårligte: {sessionSolves.length > 1 ? formatTimer(worstSolveTime) : '-'}</div>\n                <div>gjennomsnitt: {sessionSolves.length > 1 ? formatTimer(averageSolveTime) : '-'}</div>\n                <div>\n                    3 av 5: {lastThreeOfFiveAverageSolveTime ? formatTimer(lastThreeOfFiveAverageSolveTime) : '-'}\n                </div>\n                <div>\n                    beste 3 av 5:{' '}\n                    {bestThreeOfFiveAverageSolveTime ? formatTimer(bestThreeOfFiveAverageSolveTime) : '-'}\n                </div>\n                <div>\n                    beste gjennomsnitt av 5:{' '}\n                    {bestAverageOfFiveSolveTime ? formatTimer(bestAverageOfFiveSolveTime) : '-'}\n                </div>\n            </div>\n\n            <div className={css.statsContainerDesktop}>\n                <div className={css.hading}>Dine tider</div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>beste:</div>\n                    <div className={css.statValue}>\n                        {sessionSolves.length > 0 || bestSolve ? formatTimer(bestSolveTime) : '-'}\n                    </div>\n                </div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>dårligste:</div>\n                    <div className={css.statValue}>\n                        {sessionSolves.length > 1 ? formatTimer(worstSolveTime) : '-'}\n                    </div>\n                </div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>3 av 5:</div>\n                    <div className={css.statValue}>\n                        {lastThreeOfFiveAverageSolveTime ? formatTimer(lastThreeOfFiveAverageSolveTime) : '-'}\n                    </div>\n                </div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>beste 3 av 5:</div>\n                    <div className={css.statValue}>\n                        {bestThreeOfFiveAverageSolveTime ? formatTimer(bestThreeOfFiveAverageSolveTime) : '-'}\n                    </div>\n                </div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>beste gjennomsnitt av 5:</div>\n                    <div className={css.statValue}>\n                        {bestAverageOfFiveSolveTime ? formatTimer(bestAverageOfFiveSolveTime) : '-'}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default SessionStats;\n","import React, { useContext, useState } from 'react';\nimport scrambleGenerator from 'rubiks-cube-scramble';\nimport { DataContext } from '../FirebaseProvider';\nimport LoginLink from '../LoginLink';\nimport css from './cube-timer.less';\nimport { now } from './format-time-utils';\nimport Scramble from './Scramble';\nimport SessionStats from './SessionStats';\nimport Timer from './Timer';\n\nconst newScramle = (): string => scrambleGenerator() as string;\n\nconst CubeTimer = () => {\n    const [timerRunning, setTimerRunning] = useState(false);\n    const [scramble, setScramble] = useState<string>(newScramle());\n    const { sessionSolves, stored, addNewSolve } = useContext(DataContext);\n\n    return (\n        <div className={css.cubeTimerContainer}>\n            <LoginLink />\n            {!timerRunning && <Scramble newScramble={scramble} />}\n\n            <Timer\n                timerRunning={timerRunning}\n                onToggleTimerRunning={setTimerRunning}\n                onNewScramble={() => setScramble(newScramle)}\n                solves={sessionSolves}\n                addSolve={solveTime => addNewSolve({ time: solveTime, timestamp: now(), scramble })}\n            />\n            {!timerRunning && <SessionStats sessionSolves={sessionSolves} bestSolve={stored.best} />}\n        </div>\n    );\n};\n\nexport default CubeTimer;\n","import classNames from 'classnames';\nimport React, { FormEvent, useState } from 'react';\nimport css from './emailAndPasswordForm.less';\n\ninterface Props {\n    title: string;\n    buttonTitle: string;\n    colorTheme: {\n        textColor: string;\n        bottomBorder: string;\n    };\n    onSubmit: (email: string, password: string, username?: string) => Promise<null | string>;\n    bottomLink?: React.ReactNode;\n    includeUsername?: boolean;\n}\n\nconst EmailAndPasswordForm: React.FC<Props> = ({\n    title,\n    buttonTitle,\n    onSubmit,\n    colorTheme,\n    includeUsername,\n    bottomLink,\n}) => {\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState<string | null>(null);\n    const [submitting, setSubmitting] = useState(false);\n\n    const submit = async (e: FormEvent) => {\n        e.preventDefault();\n        setSubmitting(true);\n        const err = await onSubmit(email, password, username);\n\n        if (err !== null) {\n            setError(err);\n        }\n        setSubmitting(false);\n    };\n\n    return (\n        <form className={css.form} onSubmit={submit}>\n            <h1 className={classNames(css.heading, colorTheme.textColor)}>{title}</h1>\n\n            {includeUsername ? (\n                <input\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                    className={classNames(css.input, colorTheme.textColor, colorTheme.bottomBorder)}\n                    type=\"text\"\n                    placeholder=\"Velg brukernavn..\"\n                />\n            ) : null}\n\n            <input\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                className={classNames(css.input, colorTheme.textColor, colorTheme.bottomBorder)}\n                type=\"email\"\n                placeholder=\"Epost..\"\n            />\n            <input\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                className={classNames(css.input, colorTheme.textColor, colorTheme.bottomBorder)}\n                type=\"password\"\n                placeholder=\"Passord..\"\n            />\n\n            {error && <span className={css.error}>{error}</span>}\n\n            <button\n                type=\"submit\"\n                className={classNames(css.loginButton, colorTheme.textColor)}\n                disabled={email === '' || password === '' || submitting}\n            >\n                {buttonTitle}\n            </button>\n\n            {bottomLink}\n        </form>\n    );\n};\n\nexport default EmailAndPasswordForm;\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport EmailAndPasswordForm from '../components/EmailAndPasswordForm';\nimport { AuthContext } from '../FirebaseProvider';\nimport css from './login.less';\n\nconst Login = () => {\n    const history = useHistory();\n    const { user, signIn } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (user) {\n            history.push('/');\n        }\n    }, [history, user]);\n\n    const goToRegisterLink = (\n        <div className={css.goToRegisterLink} onClick={() => history.push('/register')}>\n            Har du ikke konto enda? Registrer deg her\n        </div>\n    );\n\n    return (\n        <div className={css.container}>\n            <EmailAndPasswordForm\n                title=\"Logg inn\"\n                buttonTitle=\"Logg inn\"\n                onSubmit={signIn}\n                colorTheme={{ textColor: css.textColor, bottomBorder: css.bottomBorder }}\n                bottomLink={goToRegisterLink}\n            />\n        </div>\n    );\n};\n\nexport default Login;\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport EmailAndPasswordForm from '../components/EmailAndPasswordForm';\nimport { AuthContext } from '../FirebaseProvider';\nimport css from './register.less';\n\nconst Register = () => {\n    const history = useHistory();\n    const { user, signUp } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (user) {\n            history.push('/');\n        }\n    }, [history, user]);\n\n    const goToLoginLink = (\n        <div className={css.goToLoginLink} onClick={() => history.push('/login')}>\n            Har du allerede konto? Gå til innlogging\n        </div>\n    );\n\n    return (\n        <div className={css.container}>\n            <EmailAndPasswordForm\n                title=\"Registrer deg\"\n                buttonTitle=\"Ferdig\"\n                onSubmit={signUp}\n                colorTheme={{ textColor: css.textColor, bottomBorder: css.bottomBorder }}\n                includeUsername={true}\n                bottomLink={goToLoginLink}\n            />\n        </div>\n    );\n};\n\nexport default Register;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Algorithms from './algorithms/Algorithms';\nimport CubeTimer from './cube-timer/CubeTimer';\nimport FirebaseProvider from './FirebaseProvider';\nimport Login from './login/Login';\nimport Register from './register/Register';\n\nconst App = () => {\n    return (\n        <FirebaseProvider>\n            <HashRouter>\n                <Route exact={true} path=\"/\" component={CubeTimer} />\n                <Route path=\"/algorithms\" component={Algorithms} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/register\" component={Register} />\n            </HashRouter>\n        </FirebaseProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config: any) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}