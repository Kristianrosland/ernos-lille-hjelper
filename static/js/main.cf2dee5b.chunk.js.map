{"version":3,"sources":["components/email-and-password/emailAndPasswordForm.less","components/menu/menu.less","login/login.less","register/register.less","algorithms/algorithms.less","components/scramble/scramble.less","components/timer/timer.less","algorithms/cases/DD1a.png","algorithms/cases/DD4a.png","algorithms/cases/DD5b.png","algorithms/cases/DR5a.png","algorithms/cases/UL1a.png","algorithms/cases/UL5a.png","algorithms/cases/UL5b.png","algorithms/cases/UR1b.png","algorithms/cases/UR5a.png","algorithms/cases/UR5b.png","algorithms/cases/UU4b.png","cube-timer/cube-timer.less","components/stats/session-stats.less","components/firebase/FirebaseProvider.tsx","algorithms/cases.ts","algorithms/Algorithms.tsx","components/firebase/firebase-utils.ts","components/firebase/userdata-operations.ts","components/menu/LoginLink.tsx","components/menu/Menu.tsx","components/scramble/Scramble.tsx","components/scramble/ScrambleGenerator.ts","components/timer/Timer.tsx","components/timer/format-time-utils.ts","components/stats/SessionStats.tsx","cube-timer/CubeTimer.tsx","cube-timer/format-time-utils.ts","components/email-and-password/EmailAndPasswordForm.tsx","login/Login.tsx","register/Register.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","auth","allSolvesCollection","cases","src","UL1a","name","alg","UR1b","UU4b","UL5a","UL5b","DD1a","UR5a","UR5b","DR5a","DD5b","DD4a","Algorithms","useState","query","setQuery","currentCases","setCurrentCases","className","css","container","value","onChange","e","inp","target","toUpperCase","length","matches","filter","c","startsWith","queryInput","map","key","image","alt","getFirebaseError","error","code","console","defaultAuthState","user","isLoading","signIn","a","signUp","signOut","defaultDataState","sessionSolves","stored","best","undefined","addNewSolve","removeStoredSolve","getUsername","userId","firebase","firestore","collection","doc","get","data","username","usernameExists","where","res","docs","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthContext","createContext","DataContext","FirebaseProvider","children","authState","setAuthState","dataState","setDataState","updateBest","bestSolve","prev","solve","set","solveWithId","id","time","solveToRemove","timestamp","then","snapshot","forEach","ref","delete","email","password","signInWithEmailAndPassword","onUserSignedIn","useCallback","uid","orderBy","limit","d","onSnapshot","solves","createUserWithEmailAndPassword","args","useEffect","onAuthStateChanged","Provider","LoginLink","useContext","history","useHistory","loginButton","onClick","push","Menu","menu","userName","classNames","userIcon","Scramble","newScramble","onPrevScrambleClick","currentScramble","setCurrentScramble","previousScramble","setPreviousScramble","scrambleContainer","scramble","Cube","initSolver","interval","leadingZero","input","slice","now","Date","getTime","formatTimer","minutes","Math","floor","seconds","milliseconds","findBestSolve","min","findWorstSolve","max","sumOfSolves","reduce","solveTimeSum","getThreeOfFiveSum","SessionStats","bestSolveTime","worstSolveTime","averageSolveTime","bestAverageOfFiveSolveTime","firstSumOfFive","bestSumOfFive","i","findBestAverageSolveOfFive","lastThreeOfFiveAverageSolveTime","lastFiveSolves","findLastThreeOfFiveAverageSolve","bestThreeOfFiveAverageSolveTime","firstFiveSolves","bestThreeOfFive","fiveSolves","sum","findBestThreeOfFiveAverageSolve","statsContainerMobile","heading","statsContainerDesktop","hading","statElement","statLabel","statValue","Timer","timerRunning","onToggleTimerRunning","onNewScramble","addSolve","removeSolve","startTime","setStartTime","formattedSolveTime","setFormattedSolveTime","solveTime","setSolveTime","holding","setHolding","didHoldLongEnough","setDidHoldLongEnough","setInterval","clearInterval","stopTimer","abortSolve","holdingClasses","readyToStart","startHold","setTimeout","stopHold","previousSolves","timerContainer","largeTimer","abortButton","timer","startButton","data-for","data-tip","leftHand","currentSolveTime","onMouseUp","onMouseDown","onTouchStart","onTouchEnd","removeSolveButton","show","type","removeSolveIcon","previousSolvesContainer","previousSolve","index","fadeOut","effect","handleKeys","onKeyEvent","handleEventType","CubeTimer","params","useParams","setTimerRunning","setNewScramble","seedrandom","global","random","split","join","trim","replace","cubeTimerContainer","oldScramble","EmailAndPasswordForm","title","buttonTitle","onSubmit","colorTheme","includeUsername","bottomLink","setUsername","setEmail","setPassword","setError","submitting","setSubmitting","submit","preventDefault","err","form","textColor","bottomBorder","placeholder","disabled","Login","goToRegisterLink","Register","goToLoginLink","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cf2dee5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_2ZqZS\",\"heading\":\"heading_3kArt\",\"input\":\"input_1E3zl\",\"loginButton\":\"loginButton_3UAWA\",\"error\":\"error_3AftS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"menu_2ShiP\",\"loginButton\":\"loginButton_3gMw8\",\"userName\":\"userName_2N1sJ\",\"userIcon\":\"userIcon_14Ax9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_2I3pj\",\"textColor\":\"textColor_1BWe8\",\"bottomBorder\":\"bottomBorder_2f-iS\",\"goToRegisterLink\":\"goToRegisterLink_1jSe-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_3E2_Q\",\"textColor\":\"textColor_2I3YX\",\"bottomBorder\":\"bottomBorder_1awHt\",\"goToLoginLink\":\"goToLoginLink_E3FTV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_23up_\",\"queryInput\":\"queryInput_g6eat\",\"image\":\"image_2atOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrambleContainer\":\"scrambleContainer_OA__R\",\"scramble\":\"scramble_2YhpN\",\"previousScramble\":\"previousScramble_16xeh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerContainer\":\"timerContainer_uhNEX\",\"solves\":\"solves_3PZ7k\",\"timer\":\"timer_3o0do\",\"holding\":\"holding_2V3O1\",\"readyToStart\":\"readyToStart_uJUlD\",\"time\":\"time_14ST2\",\"largeTimer\":\"largeTimer_1shFP\",\"currentSolveTime\":\"currentSolveTime_2wrE7\",\"removeSolveButton\":\"removeSolveButton_1X8O_\",\"removeSolveIcon\":\"removeSolveIcon_e5giF\",\"abortButton\":\"abortButton_3AXKK\",\"previousSolvesContainer\":\"previousSolvesContainer_2uk65\",\"fadeOut\":\"fadeOut_2rtRX\",\"previousSolves\":\"previousSolves_2b8XE\",\"startButton\":\"startButton_3D06d\",\"handButtonsAndSolveTimeContainer\":\"handButtonsAndSolveTimeContainer_fkWsM\",\"leftHand\":\"leftHand_rGgeu\",\"show\":\"show_2nn0U\",\"previousSolve\":\"previousSolve_316WQ\"};","module.exports = __webpack_public_path__ + \"static/media/DD1a.42a5250c.png\";","module.exports = __webpack_public_path__ + \"static/media/DD4a.7e40e810.png\";","module.exports = __webpack_public_path__ + \"static/media/DD5b.8523dd28.png\";","module.exports = __webpack_public_path__ + \"static/media/DR5a.c6815c41.png\";","module.exports = __webpack_public_path__ + \"static/media/UL1a.137fcb5f.png\";","module.exports = __webpack_public_path__ + \"static/media/UL5a.17a229fd.png\";","module.exports = __webpack_public_path__ + \"static/media/UL5b.88630ad9.png\";","module.exports = __webpack_public_path__ + \"static/media/UR1b.0de51f6b.png\";","module.exports = __webpack_public_path__ + \"static/media/UR5a.b4cb91ea.png\";","module.exports = __webpack_public_path__ + \"static/media/UR5b.3af93687.png\";","module.exports = __webpack_public_path__ + \"static/media/UU4b.a4f90bee.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cubeTimerContainer\":\"cubeTimerContainer_Ay0n8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsContainerMobile\":\"statsContainerMobile_mRpz8\",\"heading\":\"heading_rty2t\",\"statsContainerDesktop\":\"statsContainerDesktop_2PXuO\",\"statElement\":\"statElement_cYTEH\",\"statLabel\":\"statLabel_1Hp_5\",\"statValue\":\"statValue_2X4kL\"};","import firebase, { firestore } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport React, { createContext, ReactNode, useCallback, useEffect, useState } from 'react';\nimport { Solve } from '../../types/solve-types';\nimport { config, defaultAuthState, defaultDataState, getFirebaseError } from './firebase-utils';\nimport { AuthState, AuthStateModifiers, DataState, DataStateModifiers } from './types';\nimport { getUsername, setUsername, usernameExists } from './userdata-operations';\n\nfirebase.initializeApp(config);\nlet auth: firebase.auth.Auth | undefined;\nlet allSolvesCollection: firestore.CollectionReference | undefined;\n\nexport const AuthContext = createContext<AuthState & AuthStateModifiers>(defaultAuthState);\nexport const DataContext = createContext<DataState & DataStateModifiers>(defaultDataState);\n\nconst FirebaseProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n    const [authState, setAuthState] = useState<AuthState>({ user: null, isLoading: true });\n    const [dataState, setDataState] = useState<DataState>({\n        sessionSolves: [],\n        stored: { best: undefined },\n    });\n\n    const updateBest = (bestSolve: Solve | undefined) =>\n        setDataState(prev => ({ ...prev, stored: { ...prev.stored, best: bestSolve } }));\n\n    const addNewSolve = async (solve: Solve) => {\n        setDataState(prev => ({ ...prev, sessionSolves: [solve, ...prev.sessionSolves] }));\n\n        if (authState.user && allSolvesCollection) {\n            const doc = allSolvesCollection.doc();\n            await doc.set(solve);\n\n            const solveWithId = { ...solve, id: doc.id };\n\n            if (dataState.stored.best === undefined || dataState.stored.best.time > solve.time) {\n                updateBest(solveWithId);\n            }\n        }\n    };\n\n    const removeStoredSolve = async (solveToRemove: Solve) => {\n        setDataState({\n            ...dataState,\n            sessionSolves: dataState.sessionSolves.filter(solve => solve.timestamp !== solveToRemove.timestamp),\n        });\n\n        if (authState.user && allSolvesCollection) {\n            await allSolvesCollection\n                .where('timestamp', '==', solveToRemove.timestamp)\n                .get()\n                .then(snapshot => snapshot.docs.forEach(doc => doc.ref.delete()));\n        }\n    };\n\n    const signIn = async (email: string, password: string) => {\n        try {\n            await auth?.signInWithEmailAndPassword(email, password);\n            return null;\n        } catch (err) {\n            return getFirebaseError(err);\n        }\n    };\n\n    const signOut = async () => {\n        auth?.signOut();\n        setDataState(prev => ({ ...prev, stored: defaultDataState.stored }));\n    };\n\n    const onUserSignedIn = useCallback(async (user: firebase.User) => {\n        allSolvesCollection = firebase\n            .firestore()\n            .collection('solves')\n            .doc(user.uid)\n            .collection('all_solves');\n\n        await allSolvesCollection\n            .orderBy('timestamp', 'desc')\n            .limit(5)\n            .get()\n            .then(res =>\n                setDataState(prev => ({\n                    ...prev,\n                    sessionSolves: res.docs.map(d => d.data() as Solve),\n                })),\n            );\n\n        firebase\n            .firestore()\n            .collection('solves')\n            .doc(user.uid)\n            .collection('all_solves')\n            .orderBy('time', 'asc')\n            .limit(1)\n            .onSnapshot(snapshot => {\n                const solves = snapshot.docs.map(doc => ({ ...doc.data(), id: doc.id }));\n                updateBest(solves.length === 0 ? undefined : (solves[0] as Solve));\n            });\n\n        const username = await getUsername(user.uid);\n        setAuthState(prev => ({ ...prev, isLoading: false, user: { ...user, username } }));\n    }, []);\n\n    const signUp = async (email: string, password: string, username?: string) => {\n        try {\n            const existing = await usernameExists(username!);\n\n            if (existing) {\n                return 'Dette brukernavnet er dessverre opptatt';\n            }\n\n            const res = await auth?.createUserWithEmailAndPassword(email, password);\n\n            if (!res) {\n                return 'Noe gikk galt med opprettelsen av din konto';\n            }\n\n            if (res.user?.uid) {\n                setUsername({ username: username!, userId: res.user!.uid });\n            }\n\n            return null;\n        } catch (err) {\n            return getFirebaseError(err);\n        }\n    };\n\n    useEffect(() => {\n        if (!auth) {\n            auth = firebase.auth();\n            auth.onAuthStateChanged(user => {\n                if (user === null) {\n                    allSolvesCollection = undefined;\n                    setAuthState({ user: null, isLoading: false });\n                } else {\n                    onUserSignedIn(user);\n                }\n            });\n        }\n    }, [onUserSignedIn]);\n\n    return (\n        <AuthContext.Provider value={{ ...authState, signIn, signUp, signOut }}>\n            <DataContext.Provider value={{ ...dataState, addNewSolve, removeStoredSolve }}>\n                {children}\n            </DataContext.Provider>\n        </AuthContext.Provider>\n    );\n};\n\nexport default FirebaseProvider;\n","import DD1a from './cases/DD1a.png';\nimport DD4a from './cases/DD4a.png';\nimport DD5b from './cases/DD5b.png';\nimport DR5a from './cases/DR5a.png';\nimport UL1a from './cases/UL1a.png';\nimport UL5a from './cases/UL5a.png';\nimport UL5b from './cases/UL5b.png';\nimport UR1b from './cases/UR1b.png';\nimport UR5a from './cases/UR5a.png';\nimport UR5b from './cases/UR5b.png';\nimport UU4b from './cases/UU4b.png';\n\nexport interface F2LCase {\n    src: string;\n    name: string;\n    alg: string;\n}\n\nconst cases: F2LCase[] = [\n    {\n        src: UL1a,\n        name: 'UL1a',\n        alg: \"y' U (R' U R U') (R' U' R)\",\n    },\n    {\n        src: UR1b,\n        name: 'UR1b',\n        alg: \"y' U (R' U2 R) U' y (R U R')\",\n    },\n    {\n        src: UU4b,\n        name: 'UU4b',\n        alg: \"y' U' (R' U R U) (R' U R U') (R' U R)\",\n    },\n    {\n        src: UL5a,\n        name: 'UL5a',\n        alg: \"(U' R U' R') U2 (R U' R')\",\n    },\n    {\n        src: UL5b,\n        name: 'UL5b',\n        alg: \"(U' R U R') U y' (R' U' R)\",\n    },\n    {\n        src: DD1a,\n        name: 'DD1a',\n        alg: \"U (R U' R') U' (F' U F)\",\n    },\n    {\n        src: UR5a,\n        name: 'UR5a',\n        alg: \"U (R U R') U2 (R U R')\",\n    },\n    {\n        src: UR5b,\n        name: 'UR5b',\n        alg: \"U (F' U' F) U' (R U R')\",\n    },\n    {\n        src: DR5a,\n        name: 'DR5a',\n        alg: \"(R U' R' U) (R U2' R') U (R U' R')\",\n    },\n    {\n        src: DD5b,\n        name: 'DD5b',\n        alg: '',\n    },\n    {\n        src: DD4a,\n        name: 'DD4a',\n        alg: \"U' F' (R U R' U') R' F R\",\n    },\n];\n\nexport default cases;\n","import React, { ChangeEvent, useState } from 'react';\nimport css from './algorithms.less';\nimport cases, { F2LCase } from './cases';\n\nconst Algorithms = () => {\n    const [query, setQuery] = useState('');\n    const [currentCases, setCurrentCases] = useState<F2LCase[]>([]);\n\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const inp = e.target.value.toUpperCase();\n        setQuery(inp);\n\n        if (inp.length === 3) {\n            const matches = cases.filter(c => c.name.startsWith(inp));\n            setCurrentCases(matches);\n            setQuery('');\n        }\n    };\n\n    return (\n        <div className={css.container}>\n            <input value={query} onChange={onChange} className={css.queryInput} />\n            {currentCases.map(c => (\n                <img key={c.name} src={c.src} className={css.image} alt=\"Solution\" />\n            ))}\n        </div>\n    );\n};\n\nexport default Algorithms;\n","export const getFirebaseError = (error: { code: string }) => {\n    switch (error.code) {\n        case 'auth/wrong-password':\n            return 'Feil passord';\n        case 'auth/user-not-found':\n            return 'Brukeren finnes ikke';\n        case 'auth/invalid-email':\n            return 'Ugyldig epostadresse';\n        case 'auth/weak-password':\n            return 'For svakt passord!';\n        default:\n            console.error(error.code);\n            return 'Oops.. Noe gikk galt!';\n    }\n};\n\nexport const config = {\n    apiKey: 'AIzaSyAW_PdA6o5ygKubwsxaQfJ22dgWE5fA41U',\n    authDomain: 'cubeguru-79b7d.firebaseapp.com',\n    databaseURL: 'https://cubeguru-79b7d.firebaseio.com',\n    projectId: 'cubeguru-79b7d',\n    storageBucket: 'cubeguru-79b7d.appspot.com',\n    messagingSenderId: '1042814909264',\n    appId: '1:1042814909264:web:e79fa88d14f9f4669c4a55',\n    measurementId: 'G-Z2GMHWJ2NG',\n};\n\nexport const defaultAuthState = {\n    user: null,\n    isLoading: false,\n    signIn: async () => null,\n    signUp: async () => null,\n    signOut: async () => null,\n};\n\nexport const defaultDataState = {\n    sessionSolves: [],\n    stored: {\n        best: undefined,\n    },\n\n    addNewSolve: async () => {},\n    removeStoredSolve: async () => {},\n};\n","import firebase from 'firebase/app';\n\nexport const getUsername = async (userId: string): Promise<string | undefined> => {\n    const doc = await firebase\n        .firestore()\n        .collection('userdata')\n        .doc(userId)\n        .get();\n\n    const data = doc.data();\n\n    if (data && 'username' in data) {\n        return data.username;\n    } else {\n        return undefined;\n    }\n};\n\nexport const setUsername = (args: { userId: string; username: string }) => {\n    firebase\n        .firestore()\n        .collection('userdata')\n        .doc(args.userId)\n        .set({ username: args.username });\n};\n\nexport const usernameExists = async (username: string): Promise<boolean> => {\n    const res = await firebase\n        .firestore()\n        .collection('userdata')\n        .where('username', '==', username)\n        .get();\n\n    return res.docs.length > 0;\n};\n","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../firebase/FirebaseProvider';\nimport css from './menu.less';\n\nconst LoginLink = () => {\n    const { user, isLoading, signOut } = useContext(AuthContext);\n    const history = useHistory();\n\n    const onClick = () => {\n        if (isLoading) return;\n\n        if (!user) {\n            history.push('/login');\n        } else {\n            signOut();\n        }\n    };\n\n    return isLoading ? null : (\n        <button className={css.loginButton} onClick={onClick}>\n            {user ? 'Logg ut' : 'Logg inn'}\n        </button>\n    );\n};\n\nexport default LoginLink;\n","import classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { AuthContext } from '../firebase/FirebaseProvider';\nimport LoginLink from './LoginLink';\nimport css from './menu.less';\n\nconst Menu = () => {\n    const { user, isLoading } = useContext(AuthContext);\n\n    return isLoading ? null : (\n        <div className={css.menu}>\n            <>\n                <div className={css.userName}>{user?.username ? `Hei, ${user?.username}!` : ''}</div>\n                <i className={classNames('fas fa-user', css.userIcon)} />\n                <LoginLink />\n            </>\n        </div>\n    );\n};\n\nexport default Menu;\n","import React, { useEffect, useState } from 'react';\nimport css from './scramble.less';\n\ninterface Props {\n    newScramble: string;\n    onPrevScrambleClick: (prevScramble: string) => void;\n}\n\nconst Scramble: React.FC<Props> = ({ newScramble, onPrevScrambleClick }) => {\n    const [currentScramble, setCurrentScramble] = useState<string>();\n    const [previousScramble, setPreviousScramble] = useState<string>();\n\n    useEffect(() => {\n        if (newScramble !== currentScramble) {\n            setPreviousScramble(currentScramble);\n            setCurrentScramble(newScramble);\n        }\n    }, [newScramble, currentScramble, setPreviousScramble]);\n\n    return (\n        <div className={css.scrambleContainer}>\n            <div className={css.scramble}>{currentScramble}</div>\n            {currentScramble && (\n                <div\n                    className={css.previousScramble}\n                    onClick={() => {\n                        if (previousScramble) {\n                            onPrevScrambleClick(previousScramble!);\n                            setPreviousScramble(undefined);\n                        }\n                    }}\n                >\n                    {previousScramble}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Scramble;\n","import Cube from 'cubejs';\n\nCube.initSolver();\n\nexport const generate = (): string => {\n    const cube = Cube.random();\n\n    return cube\n        .solve()\n        .split(' ')\n        .slice(0, 20)\n        .join(' ');\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport ReactTooltip from 'react-tooltip';\nimport { Solve } from '../../types/solve-types';\nimport { formatTimer, now } from './format-time-utils';\nimport css from './timer.less';\n\nlet interval: NodeJS.Timeout | undefined;\ninterface TimerProps {\n    timerRunning: boolean;\n    onToggleTimerRunning: (running: boolean) => void;\n    onNewScramble: () => Promise<void>;\n    solves: Solve[];\n    addSolve: (solveTime: number) => Promise<void>;\n    removeSolve: (solve: Solve) => void;\n}\n\nconst tooltipText = 'Hold inne space for å starte';\nconst MINIMUM_HOLD_TIME = 500; // Milliseconds to hold before release\nconst INITIAL_SOLVE_TIME = '0.00';\n\nconst Timer: React.FC<TimerProps> = ({\n    timerRunning,\n    onToggleTimerRunning,\n    onNewScramble,\n    addSolve,\n    removeSolve,\n    solves,\n}) => {\n    const [startTime, setStartTime] = useState<number | undefined>();\n    const [formattedSolveTime, setFormattedSolveTime] = useState<string>(INITIAL_SOLVE_TIME);\n    const [solveTime, setSolveTime] = useState<number>(0);\n    const [holding, setHolding] = useState(false);\n    const [didHoldLongEnough, setDidHoldLongEnough] = useState(false);\n\n    useEffect(() => {\n        if (timerRunning) {\n            interval = setInterval(() => {\n                setSolveTime(now() - (startTime ?? 0));\n            }, 10);\n        } else {\n            if (interval) {\n                clearInterval(interval);\n            }\n        }\n\n        if (interval) {\n            return () => clearInterval(interval!);\n        }\n\n        return;\n    }, [timerRunning, startTime]);\n\n    useEffect(() => {\n        if (didHoldLongEnough) {\n            if (!holding) {\n                setDidHoldLongEnough(false);\n            }\n        }\n    }, [didHoldLongEnough, holding, setDidHoldLongEnough]);\n\n    const startTimer = () => {\n        if (timerRunning) {\n            return;\n        }\n\n        setStartTime(now());\n        onToggleTimerRunning(true);\n    };\n\n    const stopTimer = async () => {\n        onToggleTimerRunning(false);\n\n        if (solveTime !== 0) {\n            setFormattedSolveTime(formatTimer(solveTime));\n            addSolve(solveTime);\n        }\n\n        onNewScramble();\n    };\n\n    const abortSolve = () => {\n        onToggleTimerRunning(false);\n        setSolveTime(0);\n    };\n\n    const holdingClasses = {\n        [css.holding]: holding && !didHoldLongEnough,\n        [css.readyToStart]: holding && didHoldLongEnough,\n    };\n\n    const startHold = () => {\n        if (holding) {\n            return;\n        }\n\n        setDidHoldLongEnough(false);\n        setHolding(true);\n\n        setTimeout(() => {\n            setDidHoldLongEnough(true);\n        }, MINIMUM_HOLD_TIME);\n\n        if (!timerRunning) {\n            setSolveTime(0);\n        }\n    };\n\n    const stopHold = () => {\n        setHolding(false);\n        if (timerRunning) {\n            stopTimer();\n        } else {\n            if (didHoldLongEnough) {\n                startTimer();\n                setDidHoldLongEnough(false);\n            }\n        }\n    };\n\n    const previousSolves = formattedSolveTime !== INITIAL_SOLVE_TIME ? solves.slice(1) : solves;\n    return (\n        <div className={css.timerContainer}>\n            {timerRunning ? (\n                <div\n                    className={css.largeTimer}\n                    onClick={() => {\n                        if (now() - (startTime ?? 0) > 1000) {\n                            stopTimer();\n                        }\n                    }}\n                >\n                    <div className={css.abortButton} onClick={abortSolve}>\n                        Esc\n                    </div>\n                    <span className={classNames(css.timer, css.time)}>{formatTimer(solveTime)}</span>\n                </div>\n            ) : (\n                <>\n                    <div\n                        className={classNames(css.startButton, holdingClasses)}\n                        data-for=\"start-timer-tooltip\"\n                        data-tip={tooltipText}\n                    >\n                        <i className={classNames('fas fa-hand-paper', css.leftHand)} />\n                    </div>\n                    <div className={css.solves}>\n                        <div className={css.currentSolveTime}>\n                            <span\n                                className={classNames(css.timer, css.time, holdingClasses)}\n                                onMouseUp={stopHold}\n                                onMouseDown={startHold}\n                                onTouchStart={startHold}\n                                onTouchEnd={stopHold}\n                            >\n                                {formattedSolveTime}\n                            </span>\n                            <button\n                                className={classNames(css.removeSolveButton, {\n                                    [css.show]: formattedSolveTime !== INITIAL_SOLVE_TIME && solves.length > 0,\n                                })}\n                                onClick={() => {\n                                    removeSolve(solves[0]);\n                                    setStartTime(0);\n                                    setFormattedSolveTime(INITIAL_SOLVE_TIME);\n                                    setSolveTime(0);\n                                }}\n                                type=\"button\"\n                            >\n                                <i className={classNames('fas fa-times', css.removeSolveIcon)} />\n                            </button>\n                        </div>\n\n                        <div className={css.previousSolvesContainer}>\n                            <div className={classNames(css.previousSolves, css.time)}>\n                                {previousSolves.map((previousSolve, index) => (\n                                    <div key={index} className={css.previousSolve}>\n                                        <span>{formatTimer(previousSolve.time)}</span>\n                                        <button\n                                            className={css.removeSolveButton}\n                                            onClick={() => removeSolve(previousSolve)}\n                                            type=\"button\"\n                                        >\n                                            <i className={classNames('fas fa-times', css.removeSolveIcon)} />\n                                        </button>\n                                    </div>\n                                ))}\n                                <div className={css.fadeOut} />\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        className={classNames(css.startButton, holdingClasses)}\n                        data-for=\"start-timer-tooltip\"\n                        data-tip={tooltipText}\n                    >\n                        <i className=\"fas fa-hand-paper\" />\n                    </div>\n                    <ReactTooltip id=\"start-timer-tooltip\" effect=\"solid\" type=\"light\" />\n                </>\n            )}\n            <KeyboardEventHandler handleKeys={['space']} onKeyEvent={startHold} />\n            <KeyboardEventHandler\n                handleKeys={['space', 'alphanumeric']}\n                handleEventType={'keyup'}\n                onKeyEvent={stopHold}\n            />\n            <KeyboardEventHandler handleKeys={['esc']} handleEventType={'keyup'} onKeyEvent={abortSolve} />\n        </div>\n    );\n};\n\nexport default Timer;\n","const leadingZero = (input: number) => ('0' + input).slice(-2);\n\nexport const now = (): number => new Date().getTime();\n\nexport const formatTimer = (time: number) => {\n    const minutes = Math.floor(time / 60000);\n    const seconds = Math.floor(time / 1000) % 60;\n    const milliseconds = Math.floor((time % 1000) / 10);\n\n    return `${minutes > 0 ? minutes + ':' : ''}${minutes > 0 ? leadingZero(seconds) : seconds}.${leadingZero(\n        milliseconds,\n    )}`;\n};\n","import React from 'react';\nimport { Solve } from '../../types/solve-types';\nimport { formatTimer } from '../timer/format-time-utils';\nimport css from './session-stats.less';\n\nconst findBestSolve = (solves: Solve[]): number => Math.min(...solves.map(solve => solve.time));\nconst findWorstSolve = (solves: Solve[]): number => Math.max(...solves.map(solve => solve.time));\nconst findAverageSolve = (solves: Solve[]): number => {\n    const totalSolveTime = solves.reduce((solveTimeSum, solve) => solveTimeSum + solve.time, 0);\n    return totalSolveTime / solves.length;\n};\n\nconst sumOfSolves = (solves: Solve[]): number =>\n    solves.reduce((solveTimeSum, solve) => solveTimeSum + solve.time, 0);\n\nconst findBestAverageSolveOfFive = (solves: Solve[]): number => {\n    let firstSumOfFive = sumOfSolves(solves.slice(0, 5));\n    let bestSumOfFive = firstSumOfFive;\n\n    for (let i = 0; i < solves.length - 5; i++) {\n        firstSumOfFive -= solves[i].time;\n        firstSumOfFive += solves[i + 5].time;\n\n        bestSumOfFive = Math.min(firstSumOfFive, bestSumOfFive);\n    }\n\n    return bestSumOfFive / 5;\n};\n\nconst getThreeOfFiveSum = (solves: Solve[]) =>\n    sumOfSolves(solves) - findBestSolve(solves) - findWorstSolve(solves);\n\nconst findLastThreeOfFiveAverageSolve = (solves: Solve[]) => {\n    const lastFiveSolves = solves.slice(0, 5);\n\n    return getThreeOfFiveSum(lastFiveSolves) / 3;\n};\n\nconst findBestThreeOfFiveAverageSolve = (solves: Solve[]): number => {\n    const firstFiveSolves = solves.slice(0, 5);\n    const firstThreeOfFive = getThreeOfFiveSum(firstFiveSolves);\n\n    let bestThreeOfFive = firstThreeOfFive;\n\n    for (let i = 0; i < solves.length - 5; i++) {\n        const fiveSolves = solves.slice(i, i + 5);\n        const sum = getThreeOfFiveSum(fiveSolves);\n\n        bestThreeOfFive = Math.min(sum, bestThreeOfFive);\n    }\n\n    return bestThreeOfFive / 3;\n};\n\ninterface Props {\n    sessionSolves: Solve[];\n    bestSolve: Solve | undefined;\n}\n\nconst SessionStats: React.FC<Props> = ({ sessionSolves, bestSolve }) => {\n    const bestSolveTime = bestSolve ? bestSolve.time : findBestSolve(sessionSolves);\n    const worstSolveTime = findWorstSolve(sessionSolves);\n    const averageSolveTime = findAverageSolve(sessionSolves);\n\n    const bestAverageOfFiveSolveTime =\n        sessionSolves.length >= 5 ? findBestAverageSolveOfFive(sessionSolves) : null;\n    const lastThreeOfFiveAverageSolveTime =\n        sessionSolves.length >= 5 ? findLastThreeOfFiveAverageSolve(sessionSolves) : null;\n    const bestThreeOfFiveAverageSolveTime =\n        sessionSolves.length >= 5 ? findBestThreeOfFiveAverageSolve(sessionSolves) : null;\n\n    return (\n        <>\n            <div className={css.statsContainerMobile}>\n                <div className={css.heading}>dine tider denne runden</div>\n                <div>beste: {sessionSolves.length > 0 ? formatTimer(bestSolveTime) : '-'}</div>\n                <div>dårligte: {sessionSolves.length > 1 ? formatTimer(worstSolveTime) : '-'}</div>\n                <div>gjennomsnitt: {sessionSolves.length > 1 ? formatTimer(averageSolveTime) : '-'}</div>\n                <div>\n                    3 av 5: {lastThreeOfFiveAverageSolveTime ? formatTimer(lastThreeOfFiveAverageSolveTime) : '-'}\n                </div>\n                <div>\n                    beste 3 av 5:{' '}\n                    {bestThreeOfFiveAverageSolveTime ? formatTimer(bestThreeOfFiveAverageSolveTime) : '-'}\n                </div>\n                <div>\n                    beste gjennomsnitt av 5:{' '}\n                    {bestAverageOfFiveSolveTime ? formatTimer(bestAverageOfFiveSolveTime) : '-'}\n                </div>\n            </div>\n\n            <div className={css.statsContainerDesktop}>\n                <div className={css.hading}>Dine tider</div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>beste:</div>\n                    <div className={css.statValue}>\n                        {sessionSolves.length > 0 || bestSolve ? formatTimer(bestSolveTime) : '-'}\n                    </div>\n                </div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>dårligste:</div>\n                    <div className={css.statValue}>\n                        {sessionSolves.length > 1 ? formatTimer(worstSolveTime) : '-'}\n                    </div>\n                </div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>3 av 5:</div>\n                    <div className={css.statValue}>\n                        {lastThreeOfFiveAverageSolveTime ? formatTimer(lastThreeOfFiveAverageSolveTime) : '-'}\n                    </div>\n                </div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>beste 3 av 5:</div>\n                    <div className={css.statValue}>\n                        {bestThreeOfFiveAverageSolveTime ? formatTimer(bestThreeOfFiveAverageSolveTime) : '-'}\n                    </div>\n                </div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>beste gjennomsnitt av 5:</div>\n                    <div className={css.statValue}>\n                        {bestAverageOfFiveSolveTime ? formatTimer(bestAverageOfFiveSolveTime) : '-'}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default SessionStats;\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport seedrandom from 'seedrandom';\nimport { DataContext } from '../components/firebase/FirebaseProvider';\nimport Menu from '../components/menu/Menu';\nimport Scramble from '../components/scramble/Scramble';\nimport { generate } from '../components/scramble/ScrambleGenerator';\nimport SessionStats from '../components/stats/SessionStats';\nimport Timer from '../components/timer/Timer';\nimport css from './cube-timer.less';\nimport { now } from './format-time-utils';\n\nconst CubeTimer = () => {\n    const params = useParams<{ scramble: string }>();\n    const [timerRunning, setTimerRunning] = useState(false);\n    const { sessionSolves, stored, addNewSolve, removeStoredSolve } = useContext(DataContext);\n\n    const history = useHistory();\n\n    const setNewScramble = useCallback(async () => {\n        if (params.scramble) {\n            seedrandom(params.scramble, { global: true });\n        }\n        history.push(\n            '/scramble/' +\n                generate()\n                    .trim()\n                    .replace(/ /g, '-'),\n        );\n    }, [history, params.scramble]);\n\n    useEffect(() => {\n        if (params.scramble === undefined) {\n            setNewScramble();\n        }\n    }, [params.scramble, setNewScramble]);\n\n    return (\n        <div className={css.cubeTimerContainer}>\n            <Menu />\n            {!timerRunning && (\n                <Scramble\n                    newScramble={params.scramble ? params.scramble.replace(/-/g, ' ') : ''}\n                    onPrevScrambleClick={(oldScramble: string) =>\n                        history.push('/scramble/' + oldScramble.replace(/ /g, '-'))\n                    }\n                />\n            )}\n\n            <Timer\n                timerRunning={timerRunning}\n                onToggleTimerRunning={setTimerRunning}\n                onNewScramble={async () => setNewScramble()}\n                solves={sessionSolves}\n                addSolve={async solveTime =>\n                    addNewSolve({ time: solveTime, timestamp: now(), scramble: params.scramble })\n                }\n                removeSolve={removeStoredSolve}\n            />\n\n            {!timerRunning && <SessionStats sessionSolves={sessionSolves} bestSolve={stored.best} />}\n        </div>\n    );\n};\n\nexport default CubeTimer;\n","const leadingZero = (input: number) => ('0' + input).slice(-2);\n\nexport const now = (): number => new Date().getTime();\n\nexport const formatTimer = (time: number) => {\n    const minutes = Math.floor(time / 60000);\n    const seconds = Math.floor(time / 1000) % 60;\n    const milliseconds = Math.floor((time % 1000) / 10);\n\n    return `${minutes > 0 ? minutes + ':' : ''}${minutes > 0 ? leadingZero(seconds) : seconds}.${leadingZero(\n        milliseconds,\n    )}`;\n};\n","import classNames from 'classnames';\nimport React, { FormEvent, useState } from 'react';\nimport css from './emailAndPasswordForm.less';\n\ninterface Props {\n    title: string;\n    buttonTitle: string;\n    colorTheme: {\n        textColor: string;\n        bottomBorder: string;\n    };\n    onSubmit: (email: string, password: string, username?: string) => Promise<null | string>;\n    bottomLink?: React.ReactNode;\n    includeUsername?: boolean;\n}\n\nconst EmailAndPasswordForm: React.FC<Props> = ({\n    title,\n    buttonTitle,\n    onSubmit,\n    colorTheme,\n    includeUsername,\n    bottomLink,\n}) => {\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState<string | null>(null);\n    const [submitting, setSubmitting] = useState(false);\n\n    const submit = async (e: FormEvent) => {\n        e.preventDefault();\n        setSubmitting(true);\n        const err = await onSubmit(email, password, username);\n\n        if (err !== null) {\n            setError(err);\n        }\n        setSubmitting(false);\n    };\n\n    return (\n        <form className={css.form} onSubmit={submit}>\n            <h1 className={classNames(css.heading, colorTheme.textColor)}>{title}</h1>\n\n            {includeUsername ? (\n                <input\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                    className={classNames(css.input, colorTheme.textColor, colorTheme.bottomBorder)}\n                    type=\"text\"\n                    placeholder=\"Velg brukernavn..\"\n                />\n            ) : null}\n\n            <input\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                className={classNames(css.input, colorTheme.textColor, colorTheme.bottomBorder)}\n                type=\"email\"\n                placeholder=\"Epost..\"\n            />\n            <input\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                className={classNames(css.input, colorTheme.textColor, colorTheme.bottomBorder)}\n                type=\"password\"\n                placeholder=\"Passord..\"\n            />\n\n            {error && <span className={css.error}>{error}</span>}\n\n            <button\n                type=\"submit\"\n                className={classNames(css.loginButton, colorTheme.textColor)}\n                disabled={email === '' || password === '' || submitting}\n            >\n                {buttonTitle}\n            </button>\n\n            {bottomLink}\n        </form>\n    );\n};\n\nexport default EmailAndPasswordForm;\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport EmailAndPasswordForm from '../components/email-and-password/EmailAndPasswordForm';\nimport { AuthContext } from '../components/firebase/FirebaseProvider';\nimport css from './login.less';\n\nconst Login = () => {\n    const history = useHistory();\n    const { user, signIn } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (user) {\n            history.push('/');\n        }\n    }, [history, user]);\n\n    const goToRegisterLink = (\n        <div className={css.goToRegisterLink} onClick={() => history.push('/register')}>\n            Har du ikke konto enda? Registrer deg her\n        </div>\n    );\n\n    return (\n        <div className={css.container}>\n            <EmailAndPasswordForm\n                title=\"Logg inn\"\n                buttonTitle=\"Logg inn\"\n                onSubmit={signIn}\n                colorTheme={{ textColor: css.textColor, bottomBorder: css.bottomBorder }}\n                bottomLink={goToRegisterLink}\n            />\n        </div>\n    );\n};\n\nexport default Login;\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport EmailAndPasswordForm from '../components/email-and-password/EmailAndPasswordForm';\nimport { AuthContext } from '../components/firebase/FirebaseProvider';\nimport css from './register.less';\n\nconst Register = () => {\n    const history = useHistory();\n    const { user, signUp } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (user) {\n            history.push('/');\n        }\n    }, [history, user]);\n\n    const goToLoginLink = (\n        <div className={css.goToLoginLink} onClick={() => history.push('/login')}>\n            Har du allerede konto? Gå til innlogging\n        </div>\n    );\n\n    return (\n        <div className={css.container}>\n            <EmailAndPasswordForm\n                title=\"Registrer deg\"\n                buttonTitle=\"Ferdig\"\n                onSubmit={signUp}\n                colorTheme={{ textColor: css.textColor, bottomBorder: css.bottomBorder }}\n                includeUsername={true}\n                bottomLink={goToLoginLink}\n            />\n        </div>\n    );\n};\n\nexport default Register;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Algorithms from './algorithms/Algorithms';\nimport FirebaseProvider from './components/firebase/FirebaseProvider';\nimport CubeTimer from './cube-timer/CubeTimer';\nimport Login from './login/Login';\nimport Register from './register/Register';\n\nconst App = () => (\n    <FirebaseProvider>\n        <HashRouter>\n            <Route exact={true} path=\"/\" component={CubeTimer} />\n            <Route exact={true} path=\"/scramble/:scramble\" component={CubeTimer} />\n            <Route path=\"/algorithms\" component={Algorithms} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n        </HashRouter>\n    </FirebaseProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config: any) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}