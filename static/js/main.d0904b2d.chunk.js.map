{"version":3,"sources":["components/scramble/scramble.less","profile/profile.less","components/timer/timer.less","components/stats/session-stats.less","algorithms/algorithms.less","components/menu/cube-logo.svg","cube-timer/cube-timer.less","components/graph/graph.less","components/menu/menu.less","components/firebase/FirebaseProvider.tsx","components/firebase/firebase-utils.ts","components/firebase/userdata-operations.ts","components/menu/LoginLink.tsx","components/menu/Menu.tsx","algorithms/AlgorithmCase.tsx","algorithms/cases.ts","algorithms/HowItWorks.tsx","algorithms/Algorithms.tsx","components/scramble/Scramble.tsx","components/scramble/ScrambleGenerator.ts","components/timer/Timer.tsx","components/timer/format-time-utils.ts","components/stats/SessionStats.tsx","cube-timer/CubeTimer.tsx","highscores/Highscores.tsx","components/email-and-password/EmailAndPasswordForm.tsx","login/Login.tsx","components/graph/Graph.tsx","profile/Profile.tsx","register/Register.tsx","App.tsx","serviceWorker.ts","index.tsx","highscores/highscores.less","components/email-and-password/emailAndPasswordForm.less","login/login.less","register/register.less"],"names":["module","exports","auth","allSolvesCollection","getFirebaseError","error","code","console","defaultAuthState","user","isLoading","signIn","a","signUp","signOut","defaultDataState","sessionSolves","stored","best","undefined","addNewSolve","removeStoredSolve","getLastNStoredSolves","getUserSolvesCollection","userId","firebase","firestore","collection","doc","getUserDataCollection","get","getPublicUserData","getUserData","publicDoc","data","publicData","username","friends","friendIds","Promise","all","map","id","publicFriendData","friendUserName","orderBy","limit","res","solves","docs","solveDoc","bestSolve","length","bestSolveTime","time","filter","f","usernameExists","where","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthContext","createContext","DataContext","FirebaseProvider","children","useState","authState","setAuthState","nLastSolves","dataState","setDataState","updateBest","prev","solve","set","solveWithId","solveToRemove","timestamp","then","snapshot","forEach","ref","delete","n","uid","email","password","signInWithEmailAndPassword","onUserSignedIn","useCallback","d","onSnapshot","userData","createUserWithEmailAndPassword","args","useEffect","onAuthStateChanged","Provider","value","LoginLink","useContext","history","useHistory","className","classNames","css","loginButton","menuPoint","onClick","push","Menu","dark","menuContainer","logoContainer","cubeLogo","src","cubeIcon","alt","menu","menuElements","window","location","href","includes","userName","userIcon","AlgorithmCase","f2lCase","editing","setEditing","input","setInput","customAlg","Object","entries","ABCa","find","key","name","case","algorithm","algHeader","algorithmText","alg","onChange","e","target","customAlgInput","saveCustomAlg","customAlgText","Math","random","addCustomAlgorithm","cases","HowItWorks","howItWorksContainer","Algorithms","query","setQuery","currentCases","setCurrentCases","howItWorks","setHowItWorks","setError","container","inp","toUpperCase","matches","c","startsWith","queryInput","placeholder","close","notFound","Scramble","newScramble","onPrevScrambleClick","currentScramble","setCurrentScramble","previousScramble","setPreviousScramble","scrambleContainer","scramble","Cube","initSolver","interval","leadingZero","slice","now","Date","getTime","formatTimer","minutes","floor","seconds","milliseconds","findBestSolve","min","findWorstSolve","max","sumOfSolves","reduce","solveTimeSum","getThreeOfFiveSum","SessionStats","worstSolveTime","averageSolveTime","bestAverageOfFiveSolveTime","firstSumOfFive","bestSumOfFive","i","findBestAverageSolveOfFive","lastThreeOfFiveAverageSolveTime","lastFiveSolves","findLastThreeOfFiveAverageSolve","bestThreeOfFiveAverageSolveTime","firstFiveSolves","bestThreeOfFive","fiveSolves","sum","findBestThreeOfFiveAverageSolve","statsContainerMobile","heading","statsContainerDesktop","statElement","statLabel","statValue","Timer","timerRunning","onToggleTimerRunning","onNewScramble","addSolve","removeSolve","startTime","setStartTime","formattedSolveTime","setFormattedSolveTime","solveTime","setSolveTime","holding","setHolding","didHoldLongEnough","setDidHoldLongEnough","setInterval","clearInterval","stopTimer","abortSolve","holdingClasses","readyToStart","startHold","setTimeout","stopHold","previousSolves","timerContainer","largeTimer","abortButton","timer","startButton","data-for","data-tip","leftHand","currentSolveTime","onMouseUp","onMouseDown","onTouchStart","onTouchEnd","removeSolveButton","show","type","removeSolveIcon","previousSolvesContainer","previousSolve","index","fadeOut","effect","handleKeys","onKeyEvent","handleEventType","CubeTimer","params","useParams","setTimerRunning","setNewScramble","seedrandom","global","trim","replace","cubeTimerContainer","oldScramble","Highscores","loggedInUsersBestSolve","friendsWithBestSolves","friend","allUsers","displayName","concat","u","highscores","sortBy","highscoresContainer","highscoreList","highscore","scoreContainer","loggedInUser","score","trophy","EmailAndPasswordForm","title","buttonTitle","onSubmit","colorTheme","includeUsername","bottomLink","setUsername","setEmail","setPassword","submitting","setSubmitting","submit","preventDefault","err","form","textColor","bottomBorder","disabled","Login","goToRegisterLink","Graph","setSolves","fetchSolves","fetchedSolves","reverse","s","p","log","globalAvgDevelopment","acc","newAverage","smallest","b","biggest","theme","VictoryTheme","material","minDomain","x","y","maxDomain","style","stroke","parent","border","t","idx","Profile","graphContainer","Register","goToLoginLink","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d0904b2d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"scrambleContainer\":\"scrambleContainer_OA__R\",\"scramble\":\"scramble_2YhpN\",\"previousScramble\":\"previousScramble_16xeh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_2TgWB\",\"graphContainer\":\"graphContainer_2PNpT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerContainer\":\"timerContainer_uhNEX\",\"solves\":\"solves_3PZ7k\",\"timer\":\"timer_3o0do\",\"holding\":\"holding_2V3O1\",\"readyToStart\":\"readyToStart_uJUlD\",\"time\":\"time_14ST2\",\"largeTimer\":\"largeTimer_1shFP\",\"currentSolveTime\":\"currentSolveTime_2wrE7\",\"removeSolveButton\":\"removeSolveButton_1X8O_\",\"removeSolveIcon\":\"removeSolveIcon_e5giF\",\"abortButton\":\"abortButton_3AXKK\",\"previousSolvesContainer\":\"previousSolvesContainer_2uk65\",\"fadeOut\":\"fadeOut_2rtRX\",\"previousSolves\":\"previousSolves_2b8XE\",\"startButton\":\"startButton_3D06d\",\"handButtonsAndSolveTimeContainer\":\"handButtonsAndSolveTimeContainer_fkWsM\",\"leftHand\":\"leftHand_rGgeu\",\"show\":\"show_2nn0U\",\"previousSolve\":\"previousSolve_316WQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsContainerMobile\":\"statsContainerMobile_mRpz8\",\"heading\":\"heading_rty2t\",\"statsContainerDesktop\":\"statsContainerDesktop_2PXuO\",\"statElement\":\"statElement_cYTEH\",\"statLabel\":\"statLabel_1Hp_5\",\"statValue\":\"statValue_2X4kL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_23up_\",\"queryInput\":\"queryInput_g6eat\",\"case\":\"case_2D98W\",\"algorithm\":\"algorithm_1xtvQ\",\"algHeader\":\"algHeader_3Kow3\",\"algorithmText\":\"algorithmText_2RLGP\",\"addCustomAlgorithm\":\"addCustomAlgorithm_3h7fs\",\"customAlg\":\"customAlg_2i5Dm\",\"customAlgText\":\"customAlgText_2s17O\",\"customAlgInput\":\"customAlgInput_bj0ER\",\"saveCustomAlg\":\"saveCustomAlg_1bFBb\",\"notFound\":\"notFound_3NrGR\",\"howItWorksContainer\":\"howItWorksContainer_2N6bh\",\"howItWorks\":\"howItWorks_1pOVI\"};","module.exports = __webpack_public_path__ + \"static/media/cube-logo.83b12dab.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cubeTimerContainer\":\"cubeTimerContainer_Ay0n8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_3JqcO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menuContainer\":\"menuContainer_2vuC_\",\"menu\":\"menu_2ShiP\",\"logoContainer\":\"logoContainer_2K8kN\",\"cubeLogo\":\"cubeLogo_2sbuk\",\"menuElements\":\"menuElements_WNE8L\",\"loginButton\":\"loginButton_3gMw8\",\"userName\":\"userName_2N1sJ\",\"userIcon\":\"userIcon_14Ax9\",\"menuPoint\":\"menuPoint_1Wcgc\",\"underline-movement\":\"underline-movement_gioSW\",\"dark\":\"dark_7oPqM\"};","import firebase, { firestore } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport React, { createContext, ReactNode, useCallback, useEffect, useState } from 'react';\nimport { Solve } from '../../types/solve-types';\nimport { config, defaultAuthState, defaultDataState, getFirebaseError } from './firebase-utils';\nimport { AuthState, AuthStateModifiers, DataState, DataStateModifiers } from './types';\nimport { getUserData, getUserSolvesCollection, setUsername, usernameExists } from './userdata-operations';\n\nfirebase.initializeApp(config);\nlet auth: firebase.auth.Auth | undefined;\nlet allSolvesCollection: firestore.CollectionReference | undefined;\n\nexport const AuthContext = createContext<AuthState & AuthStateModifiers>(defaultAuthState);\nexport const DataContext = createContext<DataState & DataStateModifiers>(defaultDataState);\n\nconst FirebaseProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n    const [authState, setAuthState] = useState<AuthState>({ user: null, isLoading: true });\n    const [dataState, setDataState] = useState<DataState>({\n        sessionSolves: [],\n        stored: { best: undefined, nLastSolves: undefined },\n    });\n\n    const updateBest = (bestSolve: Solve | undefined) =>\n        setDataState(prev => ({ ...prev, stored: { ...prev.stored, best: bestSolve } }));\n\n    const addNewSolve = async (solve: Solve) => {\n        setDataState(prev => ({ ...prev, sessionSolves: [solve, ...prev.sessionSolves] }));\n\n        if (authState.user && allSolvesCollection) {\n            const doc = allSolvesCollection.doc();\n            await doc.set(solve);\n\n            const solveWithId = { ...solve, id: doc.id };\n\n            if (dataState.stored.best === undefined || dataState.stored.best.time > solve.time) {\n                updateBest(solveWithId);\n            }\n        }\n    };\n\n    const removeStoredSolve = async (solveToRemove: Solve) => {\n        setDataState({\n            ...dataState,\n            sessionSolves: dataState.sessionSolves.filter(solve => solve.timestamp !== solveToRemove.timestamp),\n        });\n\n        if (authState.user && allSolvesCollection) {\n            await allSolvesCollection\n                .where('timestamp', '==', solveToRemove.timestamp)\n                .get()\n                .then(snapshot => snapshot.docs.forEach(doc => doc.ref.delete()));\n        }\n    };\n\n    const getLastNStoredSolves = async (n: number): Promise<Solve[] | null> => {\n        if (!authState.user?.uid) {\n            return null;\n        }\n        if (dataState.stored.nLastSolves) {\n            return dataState.stored.nLastSolves;\n        }\n\n        const res = await firebase\n            .firestore()\n            .collection('solves')\n            .doc(authState.user!.uid)\n            .collection('all_solves')\n            .orderBy('timestamp', 'desc')\n            .limit(n)\n            .get();\n\n        const solves = res.docs.map(doc => doc.data() as Solve);\n        setDataState(prev => ({ ...prev, stored: { ...prev.stored, nLastSolves: solves } }));\n\n        return solves;\n    };\n\n    const signIn = async (email: string, password: string) => {\n        try {\n            await auth?.signInWithEmailAndPassword(email, password);\n            return null;\n        } catch (err) {\n            return getFirebaseError(err);\n        }\n    };\n\n    const signOut = async () => {\n        auth?.signOut();\n        setDataState(prev => ({ ...prev, stored: defaultDataState.stored }));\n    };\n\n    const onUserSignedIn = useCallback(async (user: firebase.User) => {\n        allSolvesCollection = getUserSolvesCollection(user.uid);\n\n        await allSolvesCollection\n            .orderBy('timestamp', 'desc')\n            .limit(5)\n            .get()\n            .then(res =>\n                setDataState(prev => ({\n                    ...prev,\n                    sessionSolves: res.docs.map(d => d.data() as Solve),\n                })),\n            );\n\n        getUserSolvesCollection(user.uid)\n            .orderBy('time', 'asc')\n            .limit(1)\n            .onSnapshot(snapshot => {\n                const solves = snapshot.docs.map(doc => ({ ...doc.data(), id: doc.id }));\n                updateBest(solves.length === 0 ? undefined : (solves[0] as Solve));\n            });\n\n        const userData = await getUserData(user.uid);\n\n        setAuthState(prev => ({\n            ...prev,\n            isLoading: false,\n            user: userData ? { ...user, ...userData } : { ...user, username: undefined, friends: [] },\n        }));\n    }, []);\n\n    const signUp = async (email: string, password: string, username?: string) => {\n        try {\n            const existing = await usernameExists(username!);\n\n            if (existing) {\n                return 'Dette brukernavnet er dessverre opptatt';\n            }\n\n            const res = await auth?.createUserWithEmailAndPassword(email, password);\n\n            if (!res) {\n                return 'Noe gikk galt med opprettelsen av din konto';\n            }\n\n            if (res.user?.uid) {\n                setUsername({ username: username!, userId: res.user!.uid });\n            }\n\n            return null;\n        } catch (err) {\n            return getFirebaseError(err);\n        }\n    };\n\n    useEffect(() => {\n        if (!auth) {\n            auth = firebase.auth();\n            auth.onAuthStateChanged(user => {\n                if (user === null) {\n                    allSolvesCollection = undefined;\n                    setAuthState({ user: null, isLoading: false });\n                } else {\n                    onUserSignedIn(user);\n                }\n            });\n        }\n    }, [onUserSignedIn]);\n\n    return (\n        <AuthContext.Provider value={{ ...authState, signIn, signUp, signOut }}>\n            <DataContext.Provider value={{ ...dataState, addNewSolve, removeStoredSolve, getLastNStoredSolves }}>\n                {children}\n            </DataContext.Provider>\n        </AuthContext.Provider>\n    );\n};\n\nexport default FirebaseProvider;\n","export const getFirebaseError = (error: { code: string }) => {\n    switch (error.code) {\n        case 'auth/wrong-password':\n            return 'Feil passord';\n        case 'auth/user-not-found':\n            return 'Brukeren finnes ikke';\n        case 'auth/invalid-email':\n            return 'Ugyldig epostadresse';\n        case 'auth/weak-password':\n            return 'For svakt passord!';\n        default:\n            console.error(error.code);\n            return 'Oops.. Noe gikk galt!';\n    }\n};\n\nexport const config = {\n    apiKey: 'AIzaSyAW_PdA6o5ygKubwsxaQfJ22dgWE5fA41U',\n    authDomain: 'cubeguru-79b7d.firebaseapp.com',\n    databaseURL: 'https://cubeguru-79b7d.firebaseio.com',\n    projectId: 'cubeguru-79b7d',\n    storageBucket: 'cubeguru-79b7d.appspot.com',\n    messagingSenderId: '1042814909264',\n    appId: '1:1042814909264:web:e79fa88d14f9f4669c4a55',\n    measurementId: 'G-Z2GMHWJ2NG',\n};\n\nexport const defaultAuthState = {\n    user: null,\n    isLoading: false,\n    signIn: async () => null,\n    signUp: async () => null,\n    signOut: async () => null,\n};\n\nexport const defaultDataState = {\n    sessionSolves: [],\n    stored: {\n        best: undefined,\n    },\n\n    addNewSolve: async () => {},\n    removeStoredSolve: async () => {},\n    getLastNStoredSolves: async () => null,\n};\n","import firebase, { firestore } from 'firebase/app';\nimport { Solve } from '../../types/solve-types';\nimport { Friend, LoggedInUser } from './types';\n\nexport const getUserSolvesCollection = (userId: string): firestore.CollectionReference =>\n    firebase\n        .firestore()\n        .collection('solves')\n        .doc(userId)\n        .collection('all_solves');\n\nconst getUserDataCollection = (userId: string) =>\n    firebase\n        .firestore()\n        .collection('userdata')\n        .doc(userId)\n        .get();\n\nconst getPublicUserData = (userId: string) =>\n    firebase\n        .firestore()\n        .collection('public_userdata')\n        .doc(userId)\n        .get();\n\nexport const getUserData = async (userId: string): Promise<LoggedInUser | null> => {\n    const doc = await getUserDataCollection(userId);\n    const publicDoc = await getPublicUserData(userId);\n\n    const data = doc.data();\n    const publicData = publicDoc.data();\n    const username = publicData && 'username' in publicData ? publicData.username : undefined;\n\n    if (!data) {\n        return {\n            username,\n            friends: [],\n        };\n    }\n\n    const friendIds: string[] = 'friends' in data ? data.friends : [];\n    const friends = await Promise.all(\n        friendIds.map(async id => {\n            try {\n                const publicFriendData = await getPublicUserData(id);\n\n                const friendUserName =\n                    publicFriendData && publicFriendData.data() && 'username' in publicFriendData.data()!\n                        ? publicFriendData.data()!.username\n                        : undefined;\n\n                const res = await getUserSolvesCollection(id)\n                    .orderBy('time', 'asc')\n                    .limit(1)\n                    .get();\n\n                const solves = res.docs.map(solveDoc => ({ ...solveDoc.data(), id: solveDoc.id }));\n                const bestSolve = solves.length === 0 ? undefined : (solves[0] as Solve);\n\n                return {\n                    username: friendUserName,\n                    bestSolveTime: bestSolve ? bestSolve.time : undefined,\n                };\n            } catch (err) {\n                console.error('Error fetching friend with id', id);\n                return null;\n            }\n        }),\n    );\n    return {\n        username,\n        friends: friends.filter(f => f !== null).map(f => f as Friend),\n    };\n};\n\nexport const setUsername = (args: { userId: string; username: string }) => {\n    firebase\n        .firestore()\n        .collection('public_userdata')\n        .doc(args.userId)\n        .set({ username: args.username });\n};\n\nexport const usernameExists = async (username: string): Promise<boolean> => {\n    const res = await firebase\n        .firestore()\n        .collection('public_userdata')\n        .where('username', '==', username)\n        .get();\n\n    return res.docs.length > 0;\n};\n","import classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../firebase/FirebaseProvider';\nimport css from './menu.less';\n\nconst LoginLink = () => {\n    const { user, isLoading, signOut } = useContext(AuthContext);\n    const history = useHistory();\n\n    const onClick = () => {\n        if (isLoading) return;\n\n        if (!user) {\n            history.push('/login');\n        } else {\n            signOut();\n        }\n    };\n\n    return isLoading ? null : (\n        <button className={classNames(css.loginButton, css.menuPoint)} onClick={onClick}>\n            {user ? 'Logg ut' : 'Logg inn'}\n        </button>\n    );\n};\n\nexport default LoginLink;\n","import classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AuthContext } from '../firebase/FirebaseProvider';\nimport cubeIcon from './cube-logo.svg';\nimport LoginLink from './LoginLink';\nimport css from './menu.less';\n\nconst Menu: React.FC<{ dark?: boolean }> = ({ dark = false }) => {\n    const { user, isLoading } = useContext(AuthContext);\n    const history = useHistory();\n\n    return isLoading ? null : (\n        <div className={classNames(css.menuContainer, { [css.dark]: dark })}>\n            <div className={css.logoContainer} onClick={() => history.push('/')}>\n                <img className={css.cubeLogo} src={cubeIcon} alt=\"Logo\" />\n            </div>\n            <div className={css.menu}>\n                <div className={css.menuElements}>\n                    {!window.location.href.includes('scramble') && (\n                        <div className={css.menuPoint} onClick={() => history.push('/')}>\n                            Timer\n                        </div>\n                    )}\n                    {!window.location.href.includes('highscores') && user && user.friends.length > 0 && (\n                        <div className={css.menuPoint} onClick={() => history.push('/highscores')}>\n                            Hvem leder?\n                        </div>\n                    )}\n                    {!window.location.href.includes('algorithms') && (\n                        <div className={css.menuPoint} onClick={() => history.push('/algorithms')}>\n                            F2L-søk\n                        </div>\n                    )}\n                </div>\n\n                <div className={css.userName}>{user?.username ? `Hei, ${user?.username}!` : ''}</div>\n                <i className={classNames('fas fa-user', css.userIcon)} />\n\n                <LoginLink />\n            </div>\n        </div>\n    );\n};\n\nexport default Menu;\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { ReactSVG } from 'react-svg';\nimport css from './algorithms.less';\nimport { F2LCase } from './cases';\n\ninterface Props {\n    f2lCase: F2LCase;\n}\n\nconst AlgorithmCase: React.FC<Props> = ({ f2lCase }) => {\n    const [editing, setEditing] = useState(false);\n    const [input, setInput] = useState('');\n\n    const myAlgorithms = {\n        ABCa: \"U R L' R' U D\",\n    };\n\n    const customAlg = Object.entries(myAlgorithms).find(([key, _value]) => key === f2lCase.name);\n\n    return (\n        <div className={css.case}>\n            <ReactSVG src={`cases/${f2lCase.name}.svg`} />\n            <div className={css.algorithm}>\n                <div className={css.algHeader}>Anbefalt algoritme</div>\n                <div className={css.algorithmText}>{f2lCase.alg}</div>\n\n                {editing ? (\n                    <div>\n                        <input\n                            value={input}\n                            onChange={e => setInput(e.target.value)}\n                            className={css.customAlgInput}\n                        />\n                        <button className={css.saveCustomAlg}>Lagre</button>\n                    </div>\n                ) : customAlg !== undefined ? (\n                    <div className={css.customAlg}>\n                        <div className={css.algHeader}>Min algoritme</div>\n                        <div className={classNames(css.algorithmText, css.customAlgText)}>{customAlg[1]}</div>\n                    </div>\n                ) : Math.random() < 0.0001 ? (\n                    <button className={css.addCustomAlgorithm} onClick={() => setEditing(true)}>\n                        + Legg til egen algoritme\n                    </button>\n                ) : null}\n            </div>\n        </div>\n    );\n};\n\nexport default AlgorithmCase;\n","export interface F2LCase {\n    name: string;\n    alg: string;\n}\n\nconst cases: F2LCase[] = [\n    {\n        name: 'UL4a',\n        alg: \"U (R U' R')\",\n    },\n    {\n        name: 'UL2a',\n        alg: \"y' (R' U' R)\",\n    },\n    {\n        name: 'UR1a',\n        alg: \"y' U' (R' U R)\",\n    },\n    {\n        name: 'UR3b',\n        alg: \"(R U R')\",\n    },\n    {\n        name: 'UL3b',\n        alg: \"U' (R U' R' U) y' (R' U' R)\",\n    },\n    {\n        name: 'UL4b',\n        alg: \"U' (R U2' R' U) y' (R' U' R)\",\n    },\n    {\n        name: 'UL1a',\n        alg: \"y' U (R' U R U') (R' U' R)\",\n    },\n    {\n        name: 'UR2b',\n        alg: \"U' (R U R' U) (R U R')\",\n    },\n    {\n        name: 'UR1b',\n        alg: \"R' U2' R2 U R2' U R\",\n    },\n    {\n        name: 'UR4a',\n        alg: \"U' (R U' R' U) (R U R')\",\n    },\n    {\n        name: 'UL3a',\n        alg: \"(U' R U R') U2 (R U' R')\",\n    },\n    {\n        name: 'UL2b',\n        alg: \"U' (R U2' R') U2 (R U' R')\",\n    },\n    {\n        name: 'UR2a',\n        alg: \"y' (U R' U' R) U2' (R' U R)\",\n    },\n    {\n        name: 'UR3a',\n        alg: \"y' U (R' U2 R) U2' (R' U R)\",\n    },\n    {\n        name: 'UU3a',\n        alg: \"U (R U2 R') U (R U' R')\",\n    },\n    {\n        name: 'UU2a',\n        alg: \"U2 (R U R' U) (R U' R')\",\n    },\n    {\n        name: 'UU2b',\n        alg: \"y' U' (R' U2 R) U' (R' U R)\",\n    },\n    {\n        name: 'UU3b',\n        alg: \"y' U2 (R' U' R) U' (R' U R)\",\n    },\n    {\n        name: 'UL1b',\n        alg: \"y' (R' U R) U2' y (R U R')\",\n    },\n    {\n        name: 'UU4a',\n        alg: \"(R U2 R') U' (R U R')\",\n    },\n    {\n        name: 'UU1b',\n        alg: \"U (R U' R' U') (R U' R' U) (R U' R')\",\n    },\n    {\n        name: 'UR5a',\n        alg: \"U (R U R') U2 (R U R')\",\n    },\n    {\n        name: 'UU5a',\n        alg: \"(U R U' R') (U R U' R') (U R U' R')\",\n    },\n    {\n        name: 'UL5b',\n        alg: \"(U' R U R') U y' (R' U' R)\",\n    },\n    {\n        name: 'UU5b',\n        alg: \"(R U' R' U) y' (R' U R)\",\n    },\n    {\n        name: 'UL5a',\n        alg: \"(U' R U' R') U2 (R U' R')\",\n    },\n    {\n        name: 'DL5a',\n        alg: \"(R U' R' U') R U R' U2 (R U' R')\",\n    },\n    {\n        name: 'DL5b',\n        alg: \"(F' U F) U2 (R U R' U) (R U' R')\",\n    },\n    {\n        name: 'DR5b',\n        alg: \"(R U R' U') (R U' R') U2 y' (R' U' R)\",\n    },\n    {\n        name: 'DR5a',\n        alg: \"(R U' R' U) (R U2' R') U (R U' R')\",\n    },\n    {\n        name: 'DD5b',\n        alg: \"(R U' R') d (R' U2 R) U2' (R' U R) \",\n    },\n    {\n        name: 'UR4b',\n        alg: \"(R U' R' U2) y' (R' U' R)\",\n    },\n    {\n        name: 'UU1a',\n        alg: \"y' (R' U2 R) U (R' U' R)\",\n    },\n    {\n        name: 'UU4b',\n        alg: \"y' U' (R' U R U) (R' U R U') (R' U R)\",\n    },\n    {\n        name: 'DD1a',\n        alg: \"U (R U' R') U' (F' U F)\",\n    },\n    {\n        name: 'DR1a',\n        alg: \"y' (R' U R U') (R' U R)\",\n    },\n    {\n        name: 'DR4a',\n        alg: \"(R U R' U') (R U R')\",\n    },\n    {\n        name: 'DD4a',\n        alg: \"U' F' (R U R' U') R' F R\",\n    },\n    {\n        name: 'DL4a',\n        alg: \"(R U' R' U) (R U' R')\",\n    },\n    {\n        name: 'DL1a',\n        alg: \"y' (R' U' R U) (R' U' R)\",\n    },\n    {\n        name: 'UR5b',\n        alg: \"U (F' U' F) U' (R U R')\",\n    },\n];\n\nexport default cases;\n","import React from 'react';\nimport css from './algorithms.less';\n\nconst HowItWorks: React.FC<{ close: () => void }> = () => {\n    return <div className={css.howItWorksContainer}>Spør Kristian</div>;\n};\n\nexport default HowItWorks;\n","import React, { ChangeEvent, useState } from 'react';\nimport Menu from '../components/menu/Menu';\nimport AlgorithmCase from './AlgorithmCase';\nimport css from './algorithms.less';\nimport cases, { F2LCase } from './cases';\nimport HowItWorks from './HowItWorks';\n\nconst Algorithms = () => {\n    const [query, setQuery] = useState('');\n    const [currentCases, setCurrentCases] = useState<F2LCase[]>([]);\n    const [howItWorks, setHowItWorks] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const inp = e.target.value.toUpperCase();\n        setQuery(inp);\n\n        if (inp.length === 3) {\n            const matches = cases.filter(c => c.name.startsWith(inp));\n\n            setQuery('');\n            setCurrentCases(matches);\n            setError(matches.length === 0 ? `${inp} er ikke en F2L-case` : null);\n        }\n    };\n\n    return (\n        <div className={css.container}>\n            <Menu dark={true} />\n            <input value={query} onChange={onChange} className={css.queryInput} placeholder=\"Søk..\" />\n\n            {howItWorks ? (\n                <HowItWorks close={() => setHowItWorks(false)} />\n            ) : (\n                <div className={css.howItWorks} onClick={() => setHowItWorks(true)}>\n                    Hvordan søker man?\n                </div>\n            )}\n\n            {error && <div className={css.notFound}>{error}</div>}\n\n            {currentCases.map(c => (\n                <AlgorithmCase key={c.name} f2lCase={c} />\n            ))}\n        </div>\n    );\n};\n\nexport default Algorithms;\n","import React, { useEffect, useState } from 'react';\nimport css from './scramble.less';\n\ninterface Props {\n    newScramble: string;\n    onPrevScrambleClick: (prevScramble: string) => void;\n}\n\nconst Scramble: React.FC<Props> = ({ newScramble, onPrevScrambleClick }) => {\n    const [currentScramble, setCurrentScramble] = useState<string>();\n    const [previousScramble, setPreviousScramble] = useState<string>();\n\n    useEffect(() => {\n        if (newScramble !== currentScramble) {\n            setPreviousScramble(currentScramble);\n            setCurrentScramble(newScramble);\n        }\n    }, [newScramble, currentScramble, setPreviousScramble]);\n\n    return (\n        <div className={css.scrambleContainer}>\n            <div className={css.scramble}>{currentScramble}</div>\n            {currentScramble && (\n                <div\n                    className={css.previousScramble}\n                    onClick={() => {\n                        if (previousScramble) {\n                            onPrevScrambleClick(previousScramble!);\n                            setPreviousScramble(undefined);\n                        }\n                    }}\n                >\n                    {previousScramble}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Scramble;\n","import Cube from 'cubejs';\n\nCube.initSolver();\n\nexport const generate = (): string => {\n    return Cube.scramble();\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\nimport ReactTooltip from 'react-tooltip';\nimport { Solve } from '../../types/solve-types';\nimport { formatTimer, now } from './format-time-utils';\nimport css from './timer.less';\n\nlet interval: NodeJS.Timeout | undefined;\ninterface TimerProps {\n    timerRunning: boolean;\n    onToggleTimerRunning: (running: boolean) => void;\n    onNewScramble: () => Promise<void>;\n    solves: Solve[];\n    addSolve: (solveTime: number) => Promise<void>;\n    removeSolve: (solve: Solve) => void;\n}\n\nconst tooltipText = 'Hold inne space for å starte';\nconst MINIMUM_HOLD_TIME = 500; // Milliseconds to hold before release\nconst INITIAL_SOLVE_TIME = '0.00';\n\nconst Timer: React.FC<TimerProps> = ({\n    timerRunning,\n    onToggleTimerRunning,\n    onNewScramble,\n    addSolve,\n    removeSolve,\n    solves,\n}) => {\n    const [startTime, setStartTime] = useState<number | undefined>();\n    const [formattedSolveTime, setFormattedSolveTime] = useState<string>(INITIAL_SOLVE_TIME);\n    const [solveTime, setSolveTime] = useState<number>(0);\n    const [holding, setHolding] = useState(false);\n    const [didHoldLongEnough, setDidHoldLongEnough] = useState(false);\n\n    useEffect(() => {\n        if (timerRunning) {\n            interval = setInterval(() => {\n                setSolveTime(now() - (startTime ?? 0));\n            }, 10);\n        } else {\n            if (interval) {\n                clearInterval(interval);\n            }\n        }\n\n        if (interval) {\n            return () => clearInterval(interval!);\n        }\n\n        return;\n    }, [timerRunning, startTime]);\n\n    useEffect(() => {\n        if (didHoldLongEnough) {\n            if (!holding) {\n                setDidHoldLongEnough(false);\n            }\n        }\n    }, [didHoldLongEnough, holding, setDidHoldLongEnough]);\n\n    const startTimer = () => {\n        if (timerRunning) {\n            return;\n        }\n\n        setStartTime(now());\n        onToggleTimerRunning(true);\n    };\n\n    const stopTimer = async () => {\n        onToggleTimerRunning(false);\n\n        if (solveTime !== 0) {\n            setFormattedSolveTime(formatTimer(solveTime));\n            addSolve(solveTime);\n        }\n\n        onNewScramble();\n    };\n\n    const abortSolve = () => {\n        onToggleTimerRunning(false);\n        setSolveTime(0);\n    };\n\n    const holdingClasses = {\n        [css.holding]: holding && !didHoldLongEnough,\n        [css.readyToStart]: holding && didHoldLongEnough,\n    };\n\n    const startHold = () => {\n        if (holding) {\n            return;\n        }\n\n        setDidHoldLongEnough(false);\n        setHolding(true);\n\n        setTimeout(() => {\n            setDidHoldLongEnough(true);\n        }, MINIMUM_HOLD_TIME);\n\n        if (!timerRunning) {\n            setSolveTime(0);\n        }\n    };\n\n    const stopHold = () => {\n        setHolding(false);\n        if (timerRunning) {\n            stopTimer();\n        } else {\n            if (didHoldLongEnough) {\n                startTimer();\n                setDidHoldLongEnough(false);\n            }\n        }\n    };\n\n    const previousSolves = formattedSolveTime !== INITIAL_SOLVE_TIME ? solves.slice(1) : solves;\n    return (\n        <div className={css.timerContainer}>\n            {timerRunning ? (\n                <div\n                    className={css.largeTimer}\n                    onClick={() => {\n                        if (now() - (startTime ?? 0) > 1000) {\n                            stopTimer();\n                        }\n                    }}\n                >\n                    <div className={css.abortButton} onClick={abortSolve}>\n                        Esc\n                    </div>\n                    <span className={classNames(css.timer, css.time)}>{formatTimer(solveTime)}</span>\n                </div>\n            ) : (\n                <>\n                    <div\n                        className={classNames(css.startButton, holdingClasses)}\n                        data-for=\"start-timer-tooltip\"\n                        data-tip={tooltipText}\n                    >\n                        <i className={classNames('fas fa-hand-paper', css.leftHand)} />\n                    </div>\n                    <div className={css.solves}>\n                        <div className={css.currentSolveTime}>\n                            <span\n                                className={classNames(css.timer, css.time, holdingClasses)}\n                                onMouseUp={stopHold}\n                                onMouseDown={startHold}\n                                onTouchStart={startHold}\n                                onTouchEnd={stopHold}\n                            >\n                                {formattedSolveTime}\n                            </span>\n                            <button\n                                className={classNames(css.removeSolveButton, {\n                                    [css.show]: formattedSolveTime !== INITIAL_SOLVE_TIME && solves.length > 0,\n                                })}\n                                onClick={() => {\n                                    removeSolve(solves[0]);\n                                    setStartTime(0);\n                                    setFormattedSolveTime(INITIAL_SOLVE_TIME);\n                                    setSolveTime(0);\n                                }}\n                                type=\"button\"\n                            >\n                                <i className={classNames('fas fa-times', css.removeSolveIcon)} />\n                            </button>\n                        </div>\n\n                        <div className={css.previousSolvesContainer}>\n                            <div className={classNames(css.previousSolves, css.time)}>\n                                {previousSolves.map((previousSolve, index) => (\n                                    <div key={index} className={css.previousSolve}>\n                                        <span>{formatTimer(previousSolve.time)}</span>\n                                        <button\n                                            className={css.removeSolveButton}\n                                            onClick={() => removeSolve(previousSolve)}\n                                            type=\"button\"\n                                        >\n                                            <i className={classNames('fas fa-times', css.removeSolveIcon)} />\n                                        </button>\n                                    </div>\n                                ))}\n                                <div className={css.fadeOut} />\n                            </div>\n                        </div>\n                    </div>\n                    <div\n                        className={classNames(css.startButton, holdingClasses)}\n                        data-for=\"start-timer-tooltip\"\n                        data-tip={tooltipText}\n                    >\n                        <i className=\"fas fa-hand-paper\" />\n                    </div>\n                    <ReactTooltip id=\"start-timer-tooltip\" effect=\"solid\" type=\"light\" />\n                </>\n            )}\n            <KeyboardEventHandler handleKeys={['space']} onKeyEvent={startHold} />\n            <KeyboardEventHandler\n                handleKeys={['space', 'alphanumeric']}\n                handleEventType={'keyup'}\n                onKeyEvent={stopHold}\n            />\n            <KeyboardEventHandler handleKeys={['esc']} handleEventType={'keyup'} onKeyEvent={abortSolve} />\n        </div>\n    );\n};\n\nexport default Timer;\n","const leadingZero = (input: number) => ('0' + input).slice(-2);\n\nexport const now = (): number => new Date().getTime();\n\nexport const formatTimer = (time: number) => {\n    const minutes = Math.floor(time / 60000);\n    const seconds = Math.floor(time / 1000) % 60;\n    const milliseconds = Math.floor((time % 1000) / 10);\n\n    return `${minutes > 0 ? minutes + ':' : ''}${minutes > 0 ? leadingZero(seconds) : seconds}.${leadingZero(\n        milliseconds,\n    )}`;\n};\n","import React from 'react';\nimport { Solve } from '../../types/solve-types';\nimport { formatTimer } from '../timer/format-time-utils';\nimport css from './session-stats.less';\n\nconst findBestSolve = (solves: Solve[]): number => Math.min(...solves.map(solve => solve.time));\nconst findWorstSolve = (solves: Solve[]): number => Math.max(...solves.map(solve => solve.time));\nconst findAverageSolve = (solves: Solve[]): number => {\n    const totalSolveTime = solves.reduce((solveTimeSum, solve) => solveTimeSum + solve.time, 0);\n    return totalSolveTime / solves.length;\n};\n\nconst sumOfSolves = (solves: Solve[]): number =>\n    solves.reduce((solveTimeSum, solve) => solveTimeSum + solve.time, 0);\n\nconst findBestAverageSolveOfFive = (solves: Solve[]): number => {\n    let firstSumOfFive = sumOfSolves(solves.slice(0, 5));\n    let bestSumOfFive = firstSumOfFive;\n\n    for (let i = 0; i < solves.length - 5; i++) {\n        firstSumOfFive -= solves[i].time;\n        firstSumOfFive += solves[i + 5].time;\n\n        bestSumOfFive = Math.min(firstSumOfFive, bestSumOfFive);\n    }\n\n    return bestSumOfFive / 5;\n};\n\nconst getThreeOfFiveSum = (solves: Solve[]) =>\n    sumOfSolves(solves) - findBestSolve(solves) - findWorstSolve(solves);\n\nconst findLastThreeOfFiveAverageSolve = (solves: Solve[]) => {\n    const lastFiveSolves = solves.slice(0, 5);\n\n    return getThreeOfFiveSum(lastFiveSolves) / 3;\n};\n\nconst findBestThreeOfFiveAverageSolve = (solves: Solve[]): number => {\n    const firstFiveSolves = solves.slice(0, 5);\n    const firstThreeOfFive = getThreeOfFiveSum(firstFiveSolves);\n\n    let bestThreeOfFive = firstThreeOfFive;\n\n    for (let i = 0; i < solves.length - 5; i++) {\n        const fiveSolves = solves.slice(i, i + 5);\n        const sum = getThreeOfFiveSum(fiveSolves);\n\n        bestThreeOfFive = Math.min(sum, bestThreeOfFive);\n    }\n\n    return bestThreeOfFive / 3;\n};\n\ninterface Props {\n    sessionSolves: Solve[];\n    bestSolve: Solve | undefined;\n}\n\nconst SessionStats: React.FC<Props> = ({ sessionSolves, bestSolve }) => {\n    const bestSolveTime = bestSolve ? bestSolve.time : findBestSolve(sessionSolves);\n    const worstSolveTime = findWorstSolve(sessionSolves);\n    const averageSolveTime = findAverageSolve(sessionSolves);\n\n    const bestAverageOfFiveSolveTime =\n        sessionSolves.length >= 5 ? findBestAverageSolveOfFive(sessionSolves) : null;\n    const lastThreeOfFiveAverageSolveTime =\n        sessionSolves.length >= 5 ? findLastThreeOfFiveAverageSolve(sessionSolves) : null;\n    const bestThreeOfFiveAverageSolveTime =\n        sessionSolves.length >= 5 ? findBestThreeOfFiveAverageSolve(sessionSolves) : null;\n\n    return (\n        <>\n            <div className={css.statsContainerMobile}>\n                <div className={css.heading}>dine tider denne runden</div>\n                <div>beste: {sessionSolves.length > 0 ? formatTimer(bestSolveTime) : '-'}</div>\n                <div>dårligte: {sessionSolves.length > 1 ? formatTimer(worstSolveTime) : '-'}</div>\n                <div>gjennomsnitt: {sessionSolves.length > 1 ? formatTimer(averageSolveTime) : '-'}</div>\n                <div>\n                    3 av 5: {lastThreeOfFiveAverageSolveTime ? formatTimer(lastThreeOfFiveAverageSolveTime) : '-'}\n                </div>\n                <div>\n                    beste 3 av 5:{' '}\n                    {bestThreeOfFiveAverageSolveTime ? formatTimer(bestThreeOfFiveAverageSolveTime) : '-'}\n                </div>\n                <div>\n                    beste gjennomsnitt av 5:{' '}\n                    {bestAverageOfFiveSolveTime ? formatTimer(bestAverageOfFiveSolveTime) : '-'}\n                </div>\n            </div>\n\n            <div className={css.statsContainerDesktop}>\n                <div className={css.heading}>Dine tider</div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>beste:</div>\n                    <div className={css.statValue}>\n                        {sessionSolves.length > 0 || bestSolve ? formatTimer(bestSolveTime) : '-'}\n                    </div>\n                </div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>dårligste:</div>\n                    <div className={css.statValue}>\n                        {sessionSolves.length > 1 ? formatTimer(worstSolveTime) : '-'}\n                    </div>\n                </div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>3 av 5:</div>\n                    <div className={css.statValue}>\n                        {lastThreeOfFiveAverageSolveTime ? formatTimer(lastThreeOfFiveAverageSolveTime) : '-'}\n                    </div>\n                </div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>beste 3 av 5:</div>\n                    <div className={css.statValue}>\n                        {bestThreeOfFiveAverageSolveTime ? formatTimer(bestThreeOfFiveAverageSolveTime) : '-'}\n                    </div>\n                </div>\n                <div className={css.statElement}>\n                    <div className={css.statLabel}>beste gjennomsnitt av 5:</div>\n                    <div className={css.statValue}>\n                        {bestAverageOfFiveSolveTime ? formatTimer(bestAverageOfFiveSolveTime) : '-'}\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default SessionStats;\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport seedrandom from 'seedrandom';\nimport { DataContext } from '../components/firebase/FirebaseProvider';\nimport Menu from '../components/menu/Menu';\nimport Scramble from '../components/scramble/Scramble';\nimport { generate } from '../components/scramble/ScrambleGenerator';\nimport SessionStats from '../components/stats/SessionStats';\nimport { now } from '../components/timer/format-time-utils';\nimport Timer from '../components/timer/Timer';\nimport css from './cube-timer.less';\n\nconst CubeTimer = () => {\n    const params = useParams<{ scramble: string }>();\n    const [timerRunning, setTimerRunning] = useState(false);\n    const { sessionSolves, stored, addNewSolve, removeStoredSolve } = useContext(DataContext);\n\n    const history = useHistory();\n\n    const setNewScramble = useCallback(async () => {\n        if (params.scramble) {\n            seedrandom(params.scramble, { global: true });\n        }\n        history.push(\n            '/scramble/' +\n                generate()\n                    .trim()\n                    .replace(/ /g, '-'),\n        );\n    }, [history, params.scramble]);\n\n    useEffect(() => {\n        if (params.scramble === undefined) {\n            setNewScramble();\n        }\n    }, [params.scramble, setNewScramble]);\n\n    return (\n        <div className={css.cubeTimerContainer}>\n            <Menu />\n            {!timerRunning && (\n                <Scramble\n                    newScramble={params.scramble ? params.scramble.replace(/-/g, ' ') : ''}\n                    onPrevScrambleClick={(oldScramble: string) =>\n                        history.push('/scramble/' + oldScramble.replace(/ /g, '-'))\n                    }\n                />\n            )}\n\n            <Timer\n                timerRunning={timerRunning}\n                onToggleTimerRunning={setTimerRunning}\n                onNewScramble={async () => setNewScramble()}\n                solves={sessionSolves}\n                addSolve={async solveTime =>\n                    addNewSolve({ time: solveTime, timestamp: now(), scramble: params.scramble })\n                }\n                removeSolve={removeStoredSolve}\n            />\n\n            {!timerRunning && <SessionStats sessionSolves={sessionSolves} bestSolve={stored.best} />}\n        </div>\n    );\n};\n\nexport default CubeTimer;\n","import classNames from 'classnames';\nimport sortBy from 'lodash.sortby';\nimport React, { useContext } from 'react';\nimport { AuthContext, DataContext } from '../components/firebase/FirebaseProvider';\nimport Menu from '../components/menu/Menu';\nimport { formatTimer } from '../components/timer/format-time-utils';\nimport css from './highscores.less';\n\ninterface Highscore {\n    displayName: string | undefined;\n    solveTime: number | undefined;\n}\n\nconst Highscores: React.FC = () => {\n    const { stored } = useContext(DataContext);\n    const { user } = useContext(AuthContext);\n\n    if (!user) {\n        return null;\n    }\n\n    const loggedInUsersBestSolve = stored.best;\n    const friends = user.friends;\n\n    const friendsWithBestSolves = friends.filter(friend => friend.username && friend.bestSolveTime);\n\n    if (friendsWithBestSolves.length === 0) {\n        return null;\n    }\n\n    const allUsers = friendsWithBestSolves\n        .map(friend => ({ displayName: friend.username, solveTime: friend.bestSolveTime }))\n        .concat({ displayName: 'deg', solveTime: loggedInUsersBestSolve?.time });\n\n    const bestSolve = Math.min(...allUsers.map(u => (u.solveTime ? u.solveTime : 100000000)));\n    const highscores: Highscore[] = sortBy(allUsers, 'solveTime');\n\n    return (\n        <div className={css.container}>\n            <Menu />\n            <div className={css.highscoresContainer}>\n                <div className={css.heading}>deg og dine venner</div>\n\n                <ul className={css.highscoreList}>\n                    {highscores.map(highscore => (\n                        <li key={highscore.displayName}>\n                            <div\n                                className={classNames(css.scoreContainer, {\n                                    [css.loggedInUser]: highscore.displayName === 'deg',\n                                })}\n                            >\n                                <div>{highscore.displayName}</div>\n                                <div className={css.score}>\n                                    {highscore.solveTime ? formatTimer(highscore.solveTime) : '-'}\n                                </div>\n                                <div className={css.trophy}>\n                                    {highscore.solveTime && highscore.solveTime === bestSolve ? (\n                                        <i className={classNames('fas fa-trophy')} />\n                                    ) : null}\n                                </div>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default Highscores;\n","import classNames from 'classnames';\nimport React, { FormEvent, useState } from 'react';\nimport css from './emailAndPasswordForm.less';\n\ninterface Props {\n    title: string;\n    buttonTitle: string;\n    colorTheme: {\n        textColor: string;\n        bottomBorder: string;\n    };\n    onSubmit: (email: string, password: string, username?: string) => Promise<null | string>;\n    bottomLink?: React.ReactNode;\n    includeUsername?: boolean;\n}\n\nconst EmailAndPasswordForm: React.FC<Props> = ({\n    title,\n    buttonTitle,\n    onSubmit,\n    colorTheme,\n    includeUsername,\n    bottomLink,\n}) => {\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState<string | null>(null);\n    const [submitting, setSubmitting] = useState(false);\n\n    const submit = async (e: FormEvent) => {\n        e.preventDefault();\n        setSubmitting(true);\n        const err = await onSubmit(email, password, username);\n\n        if (err !== null) {\n            setError(err);\n        }\n        setSubmitting(false);\n    };\n\n    return (\n        <form className={css.form} onSubmit={submit}>\n            <h1 className={classNames(css.heading, colorTheme.textColor)}>{title}</h1>\n\n            {includeUsername ? (\n                <input\n                    value={username}\n                    onChange={e => setUsername(e.target.value)}\n                    className={classNames(css.input, colorTheme.textColor, colorTheme.bottomBorder)}\n                    type=\"text\"\n                    placeholder=\"Velg brukernavn..\"\n                />\n            ) : null}\n\n            <input\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n                className={classNames(css.input, colorTheme.textColor, colorTheme.bottomBorder)}\n                type=\"email\"\n                placeholder=\"Epost..\"\n            />\n            <input\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n                className={classNames(css.input, colorTheme.textColor, colorTheme.bottomBorder)}\n                type=\"password\"\n                placeholder=\"Passord..\"\n            />\n\n            {error && <span className={css.error}>{error}</span>}\n\n            <button\n                type=\"submit\"\n                className={classNames(css.loginButton, colorTheme.textColor)}\n                disabled={email === '' || password === '' || submitting}\n            >\n                {buttonTitle}\n            </button>\n\n            {bottomLink}\n        </form>\n    );\n};\n\nexport default EmailAndPasswordForm;\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport EmailAndPasswordForm from '../components/email-and-password/EmailAndPasswordForm';\nimport { AuthContext } from '../components/firebase/FirebaseProvider';\nimport css from './login.less';\n\nconst Login = () => {\n    const history = useHistory();\n    const { user, signIn } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (user) {\n            history.push('/');\n        }\n    }, [history, user]);\n\n    const goToRegisterLink = (\n        <div className={css.goToRegisterLink} onClick={() => history.push('/register')}>\n            Har du ikke konto enda? Registrer deg her\n        </div>\n    );\n\n    return (\n        <div className={css.container}>\n            <EmailAndPasswordForm\n                title=\"Logg inn\"\n                buttonTitle=\"Logg inn\"\n                onSubmit={signIn}\n                colorTheme={{ textColor: css.textColor, bottomBorder: css.bottomBorder }}\n                bottomLink={goToRegisterLink}\n            />\n        </div>\n    );\n};\n\nexport default Login;\n","import sortBy from 'lodash.sortby';\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport { VictoryChart, VictoryLine, VictoryTheme } from 'victory';\nimport { Solve } from '../../types/solve-types';\nimport { DataContext } from '../firebase/FirebaseProvider';\nimport css from './graph.less';\n\nconst Graph = () => {\n    const { getLastNStoredSolves } = useContext(DataContext);\n    const [solves, setSolves] = useState<Solve[]>([]);\n\n    const fetchSolves = useCallback(async () => {\n        const fetchedSolves = await getLastNStoredSolves(1000);\n        if (fetchedSolves) {\n            setSolves(sortBy(fetchedSolves.reverse(), s => -s.timestamp));\n        }\n    }, [getLastNStoredSolves]);\n\n    useEffect(() => {\n        fetchSolves();\n    }, [fetchSolves]);\n\n    let p = new Date().getTime();\n    solves.forEach(s => {\n        if (s.timestamp >= p) {\n            console.log('FUCK', s.timestamp, p);\n        }\n\n        p = s.timestamp;\n    });\n\n    const globalAvgDevelopment =\n        solves.length > 0\n            ? solves.reduce(\n                  (acc, s) => {\n                      const prev = acc[acc.length - 1];\n                      const newAverage = (prev * acc.length + s.time / 1000) / (acc.length + 1);\n                      return [...acc, newAverage];\n                  },\n                  [solves[0].time / 1000],\n              )\n            : [];\n\n    const MARGIN = 3;\n    const smallest =\n        globalAvgDevelopment.length > 0\n            ? globalAvgDevelopment.reduce((a, b) => Math.min(a, b), globalAvgDevelopment[0])\n            : MARGIN;\n    const biggest =\n        globalAvgDevelopment.length > 0\n            ? globalAvgDevelopment.reduce((a, b) => Math.max(a, b), globalAvgDevelopment[0])\n            : 60 - MARGIN;\n\n    return (\n        <div className={css.container}>\n            {solves !== null ? (\n                <VictoryChart\n                    theme={VictoryTheme.material}\n                    minDomain={{ x: 0, y: smallest - MARGIN }}\n                    maxDomain={{ x: Math.max(globalAvgDevelopment.length, MARGIN), y: biggest + MARGIN }}\n                >\n                    <VictoryLine\n                        style={{\n                            data: { stroke: '#c43a31' },\n                            parent: { border: '1px solid red' },\n                        }}\n                        data={globalAvgDevelopment.map((t, idx) => {\n                            return {\n                                x: idx,\n                                y: t,\n                            };\n                        })}\n                    />\n                </VictoryChart>\n            ) : null}\n        </div>\n    );\n};\n\nexport default Graph;\n","import React from 'react';\nimport Graph from '../components/graph/Graph';\nimport Menu from '../components/menu/Menu';\nimport css from './profile.less';\n\nconst Profile = () => {\n    return (\n        <div className={css.container}>\n            <Menu dark={true} />\n            <div className={css.graphContainer}>\n                <Graph />\n            </div>\n        </div>\n    );\n};\n\nexport default Profile;\n","import React, { useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport EmailAndPasswordForm from '../components/email-and-password/EmailAndPasswordForm';\nimport { AuthContext } from '../components/firebase/FirebaseProvider';\nimport css from './register.less';\n\nconst Register = () => {\n    const history = useHistory();\n    const { user, signUp } = useContext(AuthContext);\n\n    useEffect(() => {\n        if (user) {\n            history.push('/');\n        }\n    }, [history, user]);\n\n    const goToLoginLink = (\n        <div className={css.goToLoginLink} onClick={() => history.push('/login')}>\n            Har du allerede konto? Gå til innlogging\n        </div>\n    );\n\n    return (\n        <div className={css.container}>\n            <EmailAndPasswordForm\n                title=\"Registrer deg\"\n                buttonTitle=\"Ferdig\"\n                onSubmit={signUp}\n                colorTheme={{ textColor: css.textColor, bottomBorder: css.bottomBorder }}\n                includeUsername={true}\n                bottomLink={goToLoginLink}\n            />\n        </div>\n    );\n};\n\nexport default Register;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Algorithms from './algorithms/Algorithms';\nimport FirebaseProvider from './components/firebase/FirebaseProvider';\nimport CubeTimer from './cube-timer/CubeTimer';\nimport Highscores from './highscores/Highscores';\nimport Login from './login/Login';\nimport Profile from './profile/Profile';\nimport Register from './register/Register';\n\nconst App = () => (\n    <FirebaseProvider>\n        <HashRouter>\n            <Route exact={true} path=\"/\" component={CubeTimer} />\n            <Route exact={true} path=\"/scramble/:scramble\" component={CubeTimer} />\n            <Route path=\"/algorithms\" component={Algorithms} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/highscores\" component={Highscores} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/profile\" component={Profile} />\n        </HashRouter>\n    </FirebaseProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config: any) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_1P0vW\",\"highscoresContainer\":\"highscoresContainer_2cR9I\",\"heading\":\"heading_38Q9e\",\"highscoreList\":\"highscoreList_2j4wC\",\"scoreContainer\":\"scoreContainer_2lBtI\",\"loggedInUser\":\"loggedInUser_2njET\",\"score\":\"score_2_waJ\",\"trophy\":\"trophy_2ObDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_2ZqZS\",\"heading\":\"heading_3kArt\",\"input\":\"input_1E3zl\",\"loginButton\":\"loginButton_3UAWA\",\"error\":\"error_3AftS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_2I3pj\",\"textColor\":\"textColor_1BWe8\",\"bottomBorder\":\"bottomBorder_2f-iS\",\"goToRegisterLink\":\"goToRegisterLink_1jSe-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_3E2_Q\",\"textColor\":\"textColor_2I3YX\",\"bottomBorder\":\"bottomBorder_1awHt\",\"goToLoginLink\":\"goToLoginLink_E3FTV\"};"],"sourceRoot":""}